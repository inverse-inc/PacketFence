name: Backup DB and restore
testcases:
- name: get_login_token
  steps:
  - type: get_login_token

- name: create_user
  steps:
    - type: http
      method: POST
      url: '{{.pfserver_webadmin_url}}/api/v1/users'
      ignore_verify_ssl: true
      body: >-
        {
          "pid": "{{.backup_db_and_restore.user}}"
        }
      headers:
        "Authorization": "{{.get_login_token.result.token}}"
        "Content-Type": "application/json"
      assertions:
        - result.statuscode ShouldEqual 201

- name: remove PUBLIC user from mysql.user
  steps:
  - type: exec
    script: "mysql -e'DROP USER IF EXISTS PUBLIC;'"

- name: create exportable backup
  steps:
  - type: exec
    script: /usr/local/pf/addons/exportable-backup.sh

- name: get_backup_name
  steps:
  - type: exec
    script: 'find {{.backup_db_and_restore.backup_dir}} -name "packetfence-exportable-backup-*.tgz" -newermt "-10 minute" | head -n 1'
    assertions:
      - result.systemout ShouldNotBeEmpty

- name: import
  steps:
  - type: exec
    script: '/usr/local/pf/addons/full-import/import.sh --db-restore -f {{.get_backup_name.result.systemout}}'

- name: search_user_in_db
  steps:
  - type: http
    method: POST
    url: '{{.pfserver_webadmin_url}}/api/v1/users/search'
    ignore_verify_ssl: true
    body: >-
      {
        "cursor": 0,
        "fields": [
          "pid"
        ],
        "limit": 1,
        "query": {
          "op": "and",
          "values": [
            {
              "op": "or",
              "values": [
                {
                  "field": "pid",
                  "op": "equals",
                  "value": "{{.backup_db_and_restore.user}}"
                }
              ]
            }
          ]
        }
      }
    headers:
      "Authorization": "{{.get_login_token.result.token}}"
      "Content-Type": "application/json"
    assertions:
      - result.statuscode ShouldEqual 200
      - result.bodyjson.items.items0.pid ShouldEqual "{{.backup_db_and_restore.user}}"

