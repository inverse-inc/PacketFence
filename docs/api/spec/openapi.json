{
   "components" : {
      "parameters" : {
         "cursor" : {
            "description" : "The cursor pointer to fetch the data (value should be taken from previousCursor and nextCursor)",
            "in" : "query",
            "name" : "cursor",
            "required" : false,
            "schema" : {
               "type" : "string"
            }
         },
         "fields" : {
            "description" : "Comma delimited fields that should be added to the resource by performing joins. For example, in order to get the IP address of a node when calling the nodes endpoints, setting 'ip4log.ip' into this field will provide the latest IP address of the device in the 'ip4log.ip' field of every node that is returned.",
            "in" : "body",
            "name" : "fields",
            "required" : false,
            "schema" : {
               "example" : [
                  "mac",
                  "pid",
                  "ip4log.ip"
               ],
               "items" : {
                  "type" : "string"
               },
               "type" : "array"
            }
         },
         "ipset_name" : {
            "description" : "The name of the ipset to manipulate",
            "in" : "path",
            "name" : "set_name",
            "required" : true,
            "schema" : {
               "type" : "string"
            }
         },
         "limit" : {
            "description" : "The maximum amount of entries to get.",
            "in" : "query|body",
            "name" : "limit",
            "required" : false,
            "schema" : {
               "type" : "int"
            }
         },
         "local" : {
            "description" : "The local is used to determine if the request should be forwarded to the rest of the cluster. A value of '0' forwards the request and either a missing or alternate value does not forward the request to the rest of the cluster.",
            "in" : "query",
            "name" : "local",
            "required" : false,
            "schema" : {
               "default" : 0,
               "type" : "integer"
            }
         },
         "search_query" : {
            "description" : "The JSON encoded search query following the Search schema defined in this spec",
            "in" : "body",
            "name" : "query",
            "required" : true,
            "schema" : {
               "$ref" : "#/components/schemas/Search"
            }
         },
         "sort" : {
            "description" : "A list of fields to sort on along with the ordering way (ASC or DESC).",
            "in" : "body",
            "name" : "sort",
            "required" : false,
            "schema" : {
               "example" : [
                  "iplog.ip DESC",
                  "node.detectdate ASC"
               ],
               "items" : {
                  "type" : "string"
               },
               "type" : "array"
            }
         },
         "user_id" : {
            "description" : "The user ID",
            "in" : "path",
            "name" : "user_id",
            "required" : true,
            "schema" : {
               "type" : "string"
            }
         }
      },
      "responses" : {
         "BadRequest" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/Message"
                  }
               }
            },
            "description" : "Bad Request. One of the submitted parameters has an invalid format"
         },
         "Created" : {
            "description" : "A response that contains the location of a created resource",
            "headers" : {
               "Location" : {
                  "description" : "The location of the created resource",
                  "schema" : {
                     "type" : "string"
                  }
               }
            }
         },
         "DhcpInterfaceInit" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/DhcpInterfaceStats"
                  }
               }
            },
            "description" : "A response that contains interface statistics after initialization"
         },
         "DhcpInterfaceStats" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/DhcpInterfaceStats"
                  }
               }
            },
            "description" : "A response that contains interface statistics"
         },
         "DhcpMacIp" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/DhcpMacIp"
                  }
               }
            },
            "description" : "A response that contains the relational MAC address and IPv4 address"
         },
         "DhcpMacResponse" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/DhcpMacResponse"
                  }
               }
            },
            "description" : "A response that contains a status on success or failure with the MAC address"
         },
         "DhcpNetworkResponse" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/DhcpNetworkResponse"
                  }
               }
            },
            "description" : "A response that contains a status on success or failure with the Network IPv4 address"
         },
         "Duplicate" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/Message"
                  }
               }
            },
            "description" : "An attempt to add a duplicate entry was stopped. Entry already exists and should be modified instead of created."
         },
         "ErrorsWithMessage" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/ErrorsWithMessage"
                  }
               }
            },
            "description" : "A response that contains a message along with explanatory error messages tied to fields"
         },
         "Forbidden" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/Message"
                  }
               }
            },
            "description" : "Forbidden access to the resource because of insufficient access rights"
         },
         "IpsetIp" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/IpsetIp"
                  }
               }
            },
            "description" : "A response that contains a status along with the IPv4 address"
         },
         "IpsetMac" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/IpsetMac"
                  }
               }
            },
            "description" : "A response that contains a status along with the MAC address"
         },
         "Message" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/Message"
                  }
               }
            },
            "description" : "A response that contains a simple message"
         },
         "NotFound" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/ErrorsWithMessage"
                  }
               }
            },
            "description" : "Request cannot be processed because the resource could not be found."
         },
         "QueueStats" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/QueueStats"
                  }
               }
            },
            "description" : "A response that contains the pfqueue stats"
         },
         "ServiceDisable" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/ServiceDisable"
                  }
               }
            },
            "description" : "A response that contains a simple message"
         },
         "ServiceEnable" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/ServiceEnable"
                  }
               }
            },
            "description" : "A response that contains a simple message"
         },
         "ServiceRestart" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/ServiceRestart"
                  }
               }
            },
            "description" : "A response that contains a simple message"
         },
         "ServiceStart" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/ServiceStart"
                  }
               }
            },
            "description" : "A response that contains a simple message"
         },
         "ServiceStop" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/ServiceStop"
                  }
               }
            },
            "description" : "A response that contains a simple message"
         },
         "Unauthorized" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/Message"
                  }
               }
            },
            "description" : "Unauthorized access because of invalid credentials"
         },
         "UnprocessableEntity" : {
            "content" : {
               "application/json" : {
                  "schema" : {
                     "$ref" : "#/components/schemas/ErrorsWithMessage"
                  }
               }
            },
            "description" : "Request cannot be processed because the resource has failed validation after the modification."
         }
      },
      "schemas" : {
         "ClusterServer" : {
            "properties" : {
               "host" : {
                  "type" : "string"
               },
               "management_ip" : {
                  "type" : "string"
               }
            }
         },
         "ClusterServers" : {
            "properties" : {
               "items" : {
                  "description" : "Items",
                  "items" : {
                     "$ref" : "#/components/schemas/ClusterServer"
                  },
                  "type" : "array"
               }
            },
            "type" : "object"
         },
         "ConfigCertificate" : {
            "properties" : {
               "ca" : {
                  "description" : "The CA certficate for the resource (if applicable)",
                  "type" : "string"
               },
               "certificate" : {
                  "description" : "The server certficate for the resource in x509 PEM encoded format",
                  "type" : "string"
               },
               "intermediate_cas" : {
                  "description" : "The list of certificate authorities for the server certificate",
                  "items" : {
                     "type" : "string"
                  },
                  "type" : "array"
               },
               "lets_encrypt" : {
                  "description" : "Whether or not Let's Encrypt is enabled for the certificate resource",
                  "enum" : [
                     "enabled",
                     "disabled"
                  ],
                  "type" : "string"
               },
               "private_key" : {
                  "description" : "The RSA server key for the resource in PEM encoded format",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ConfigCertificateCSR" : {
            "properties" : {
               "common_name" : {
                  "description" : "The common name for the certificate",
                  "type" : "string"
               },
               "country" : {
                  "description" : "The country for the certificate",
                  "type" : "string"
               },
               "locality" : {
                  "description" : "The locality for the certificate",
                  "type" : "string"
               },
               "organization_name" : {
                  "description" : "The organization name for the certificate",
                  "type" : "string"
               },
               "state" : {
                  "description" : "The state for the certificate",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ConfigCertificateDetails" : {
            "properties" : {
               "common_name" : {
                  "description" : "The common name of the certificate",
                  "type" : "string"
               },
               "issuer" : {
                  "description" : "The issuer of the certificate",
                  "type" : "string"
               },
               "not_after" : {
                  "description" : "The date until which the certificate can be used",
                  "type" : "string"
               },
               "not_before" : {
                  "description" : "The start date at which the certificate can be used",
                  "type" : "string"
               },
               "serial" : {
                  "description" : "The serial of the certificate",
                  "type" : "string"
               },
               "subject" : {
                  "description" : "The subject of the certificate",
                  "type" : "string"
               }
            }
         },
         "ConfigCertificateInfo" : {
            "properties" : {
               "ca" : {
                  "$ref" : "#/components/schemas/ConfigCertificateDetails",
                  "description" : "The CA certficate for the resource (if applicable)",
                  "type" : "object"
               },
               "cert_key_match" : {
                  "$ref" : "#/components/schemas/ConfigCertificateReturnValue",
                  "description" : "Information about whether or not the certificate and private key match",
                  "type" : "object"
               },
               "certificate" : {
                  "$ref" : "#/components/schemas/ConfigCertificateDetails",
                  "description" : "The server certficate for the resource",
                  "type" : "object"
               },
               "chain_is_valid" : {
                  "$ref" : "#/components/schemas/ConfigCertificateReturnValue",
                  "description" : "Information about whether or not the certificate chain is valid",
                  "type" : "object"
               },
               "intermediate_cas" : {
                  "description" : "The list of certificate authorities for the server certificate",
                  "items" : {
                     "$ref" : "#/components/schemas/ConfigCertificateDetails"
                  },
                  "type" : "array"
               }
            },
            "type" : "object"
         },
         "ConfigCertificateLetsEncrypt" : {
            "properties" : {
               "common_name" : {
                  "description" : "The common name for the certificate",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ConfigCertificateReturnValue" : {
            "properties" : {
               "result" : {
                  "description" : "The value (usually error or success message)",
                  "type" : "string"
               },
               "success" : {
                  "description" : "Whether or not the operation has succeeded",
                  "type" : "boolean"
               }
            }
         },
         "ConfigDeviceRegistration" : {
            "properties" : {
               "allowed_devices" : {
                  "description" : "List of OS which will be allowed to be register via the self service portal.",
                  "items" : {
                     "description" : "List of OS which will be allowed to be register via the self service portal.",
                     "type" : "string"
                  },
                  "type" : "array"
               },
               "category" : {
                  "description" : "The role to assign to devices registered from the specific portal. If none is specified, the role of the registrant is used.",
                  "type" : "string"
               },
               "description" : {
                  "description" : "Description",
                  "type" : "string"
               },
               "id" : {
                  "description" : "Profile Name",
                  "type" : "string"
               }
            },
            "required" : [
               "id"
            ],
            "type" : "object"
         },
         "ConfigDeviceRegistrationsList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "description" : "List",
                        "items" : {
                           "$ref" : "#/components/schemas/ConfigDeviceRegistration"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ],
            "description" : "List"
         },
         "ConfigInterfaceBase" : {
            "properties" : {
               "dhcpd_enabled" : {
                  "description" : "Whether or not DHCP is enabled for this interface",
                  "enum" : [
                     "enabled",
                     "disabled"
                  ],
                  "type" : "string"
               },
               "dns" : {
                  "description" : "The DNS server of the network tied to the interface.",
                  "type" : "string"
               },
               "high_availability" : {
                  "description" : "The RSA server key for the resource in PEM encoded format",
                  "enum" : [
                     1,
                     0
                  ],
                  "type" : "string"
               },
               "ipaddress" : {
                  "description" : "The IP address of the interface",
                  "type" : "string"
               },
               "name" : {
                  "description" : "The name of the interface",
                  "type" : "string"
               },
               "nat_enabled" : {
                  "description" : "Whether or not NAT is enabled for this interface",
                  "enum" : [
                     1,
                     0
                  ],
                  "type" : "string"
               },
               "netmask" : {
                  "description" : "The netmask of the interface",
                  "type" : "string"
               },
               "network" : {
                  "description" : "The network associated to the interface",
                  "type" : "string"
               },
               "network_iseditable" : {
                  "description" : "Whether or not the network is editable",
                  "type" : "boolean"
               },
               "reg_network" : {
                  "description" : "Registration IP Address CIDR format",
                  "type" : "string"
               },
               "split_network" : {
                  "description" : "Whether or not to perform network split by role",
                  "enum" : null,
                  "type" : "string"
               },
               "type" : {
                  "description" : "The network type of the interface",
                  "type" : "string"
               },
               "vip" : {
                  "description" : "The virtual IP address of the interface (only for active/passive clusters)",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ConfigInterfaceCreate" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/ConfigInterfaceBase"
               },
               {
                  "$ref" : "#/components/schemas/ConfigInterfaceVlan"
               }
            ]
         },
         "ConfigInterfaceGet" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/ConfigInterfaceBase"
               },
               {
                  "properties" : {
                     "hwaddr" : {
                        "description" : "The MAC address of the interface",
                        "type" : "string"
                     },
                     "ifindex" : {
                        "description" : "The ifindex",
                        "type" : "string"
                     },
                     "is_running" : {
                        "description" : "Whether or not the interface is running (up)",
                        "type" : "boolean"
                     },
                     "master" : {
                        "description" : "The physical interface associated to a VLAN interface when applicable",
                        "type" : "string"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ConfigInterfaceUpdate" : {
            "$ref" : "#/components/schemas/ConfigInterfaceBase"
         },
         "ConfigInterfaceVlan" : {
            "properties" : {
               "vlan" : {
                  "description" : "The VLAN for the interface if applicable",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ConfigInterfacesList" : {
            "properties" : {
               "items" : {
                  "items" : {
                     "$ref" : "#/components/schemas/ConfigInterfaceGet"
                  },
                  "type" : "array"
               }
            },
            "type" : "object"
         },
         "ConfigSyslogParserDryRun" : {
            "properties" : {
               "line" : {
                  "description" : "Line",
                  "type" : "string"
               },
               "matches" : {
                  "description" : "The array of matches",
                  "items" : {
                     "$ref" : "#/components/schemas/ConfigSyslogParserDryRunMatch"
                  },
                  "type" : "array"
               }
            },
            "type" : "object"
         },
         "ConfigSyslogParserDryRunAction" : {
            "description" : "Action",
            "properties" : {
               "api_method" : {
                  "description" : "Api method",
                  "type" : "string"
               },
               "api_parameters" : {
                  "description" : "Api parameters",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ConfigSyslogParserDryRunList" : {
            "properties" : {
               "items" : {
                  "items" : {
                     "$ref" : "#/components/schemas/ConfigSyslogParserDryRun"
                  },
                  "type" : "array"
               }
            },
            "type" : "object"
         },
         "ConfigSyslogParserDryRunMatch" : {
            "properties" : {
               "actions" : {
                  "items" : {
                     "$ref" : "#/components/schemas/ConfigSyslogParserDryRunAction"
                  },
                  "type" : "array"
               },
               "rule" : {
                  "$ref" : "#/components/schemas/ConfigSyslogParserDryRunRule"
               },
               "success" : {
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "ConfigSyslogParserDryRunRule" : {
            "description" : "Rule",
            "properties" : {
               "actions" : {
                  "description" : "Actions",
                  "items" : {
                     "description" : "Action",
                     "properties" : {
                        "api_method" : {
                           "description" : "Api method",
                           "type" : "string"
                        },
                        "api_parameters" : {
                           "description" : "Api parameters",
                           "type" : "string"
                        }
                     },
                     "type" : "object"
                  },
                  "type" : "array"
               },
               "ip_mac_translation" : {
                  "description" : "Perform automatic translation of IPs to MACs and the other way around",
                  "type" : "string"
               },
               "last_if_match" : {
                  "description" : "Stop processing rules if this rule matches",
                  "type" : "string"
               },
               "name" : {
                  "description" : "Name",
                  "type" : "string"
               },
               "regex" : {
                  "description" : "Regex",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ConfigWMIRule" : {
            "properties" : {
               "action" : {
                  "description" : "Add an action based on the result of the request",
                  "type" : "string"
               },
               "id" : {
                  "description" : "Name",
                  "type" : "string"
               },
               "namespace" : {
                  "description" : "Namespace",
                  "type" : "string"
               },
               "on_tab" : {
                  "description" : "Scan this WMI element while editing a node",
                  "type" : "string"
               },
               "request" : {
                  "description" : "Request",
                  "type" : "string"
               }
            },
            "required" : [
               "id",
               "request",
               "namespace",
               "action"
            ],
            "type" : "object"
         },
         "ConfigWMIRulesList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "description" : "List",
                        "items" : {
                           "$ref" : "#/components/schemas/ConfigWMIRule"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ],
            "description" : "List"
         },
         "DhcpInterfaceStats" : {
            "description" : "The schema used for a collection of interface initialization and statistics",
            "items" : {
               "description" : "Statistics of the DHCP scope",
               "properties" : {
                  "category" : {
                     "description" : "Associated role of the DHCP scope",
                     "type" : "string"
                  },
                  "free" : {
                     "description" : "Available number of IPv4 addresses in the DHCP scope",
                     "type" : "integer"
                  },
                  "interface" : {
                     "description" : "Network interface name where the DHCP scope is provided",
                     "type" : "string"
                  },
                  "members" : {
                     "description" : "A collection of MAC address and IPv4 address pairs",
                     "items" : {
                        "description" : "A MAC address and IPv4 address pair",
                        "properties" : {
                           "ip" : {
                              "description" : "The MAC address of the DHCP member",
                              "type" : "string"
                           },
                           "mac" : {
                              "description" : "The IPv4 address of the DHCP member",
                              "type" : "string"
                           }
                        },
                        "type" : "object"
                     },
                     "type" : "array"
                  },
                  "network" : {
                     "description" : "Network address",
                     "type" : "string"
                  },
                  "options" : {
                     "description" : "Dhcp options of the DHCP scope",
                     "properties" : {
                        "optionDomainName" : {
                           "description" : "Domain name",
                           "type" : "string"
                        },
                        "optionDomainNameServer" : {
                           "description" : "DNS IPv4 addresses",
                           "type" : "string"
                        },
                        "optionIPAddressLeaseTime" : {
                           "description" : "Lease time",
                           "type" : "string"
                        },
                        "optionRouter" : {
                           "description" : "Gateway IPv4 addresses",
                           "type" : "string"
                        },
                        "optionSubnetMask" : {
                           "description" : "Netmask",
                           "type" : "string"
                        }
                     },
                     "type" : "object"
                  },
                  "status" : {
                     "description" : "Status of the DHCP scope",
                     "enum" : [
                        "Normal",
                        "Calculated available IP X is different than what we have available in the pool Y",
                        "Init Lease success"
                     ],
                     "type" : "string"
                  }
               },
               "type" : "object"
            },
            "type" : "array"
         },
         "DhcpMacIp" : {
            "description" : "The schema used when returning a DHCP MAC address and IPv4 address pair",
            "properties" : {
               "ip" : {
                  "description" : "The IPv4 address",
                  "type" : "string"
               },
               "mac" : {
                  "description" : "The MAC address",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "DhcpMacResponse" : {
            "description" : "The schema used when options are added or deleted from a MAC address",
            "properties" : {
               "mac" : {
                  "description" : "The MAC address",
                  "type" : "string"
               },
               "status" : {
                  "description" : "Whether the request succeeded \"ACK\", or failed \"NAK\"",
                  "enum" : [
                     "ACK",
                     "NAK"
                  ],
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "DhcpNetworkResponse" : {
            "description" : "The schema used when options are added or deleted from a Network",
            "properties" : {
               "network" : {
                  "description" : "The networks IPv4 address",
                  "type" : "string"
               },
               "status" : {
                  "description" : "Whether the request succeeded \"ACK\", or failed \"NAK\"",
                  "enum" : [
                     "ACK",
                     "NAK"
                  ],
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "DynamicReport" : {
            "properties" : {
               "base_conditions" : {
                  "description" : "Comma delimited conditions that should be applied to the report. This can be used to filter the report without using the search in the administration interface to provide the proper unsearched view. Conditions should match the following format : field:operator:value (ex: auth_log.source:=:sms,auth_log.status:!=:completed).",
                  "type" : "string"
               },
               "base_conditions_operator" : {
                  "description" : "Whether the base conditions should be matched using an all or any logic. Accepted values are all and any.",
                  "type" : "string"
               },
               "base_table" : {
                  "description" : "The base SQL table that will be used to create the view",
                  "type" : "string"
               },
               "columns" : {
                  "description" : "The columns to select from the table(s) ",
                  "type" : "string"
               },
               "date_field" : {
                  "description" : "The field to use for date filtering. Will also be used as default sorting field unless order_fields is set in the report.",
                  "type" : "string"
               },
               "description" : {
                  "description" : "The user friendly description that will display for this report",
                  "type" : "string"
               },
               "group_field" : {
                  "description" : "The field to group the entries by. No grouping is done if this field is omitted or empty.",
                  "type" : "string"
               },
               "joins" : {
                  "description" : "The tables to join to the base table and how to join them. ",
                  "type" : "string"
               },
               "node_fields" : {
                  "description" : "The fields in your report that represent a node in the PacketFence database. Field values in this field will be clickable and will allow to view/modify the values of the node in question. The fields must be listed with the name they have in the report header without any quotes and are comma delimited.",
                  "type" : "string"
               },
               "order_fields" : {
                  "description" : "Comma delimited fields for the ordering of the report. The field should be prefixed of - if the sort should be made in descending order for the field ",
                  "type" : "string"
               },
               "person_fields" : {
                  "description" : "The fields in your report that represent a user in the PacketFence database. Field values in this field will be clickable and will allow to view/modify the values of the user in question. The fields must be listed with the name they have in the report header without any quotes and are comma delimited.",
                  "type" : "string"
               },
               "searches" : {
                  "description" : "Comma delimited searches that should be available on the report. Should match the following format type:Display Name:field (ex: string:Username:auth_log.pid).",
                  "type" : "string"
               },
               "type" : {
                  "description" : "Determines what type of report this is. Setting type=built-in will make this report appear in \"Other reports\", omitting it will display it in \"Custom reports\" when viewing it in the administration interface. When in doubt, simply omit this parameter.",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "DynamicReportSearch" : {
            "properties" : {
               "cursor" : {
                  "description" : "The cursor pointer to fetch the data (value should be taken from previousCursor and nextCursor)",
                  "type" : "string"
               },
               "fields" : {
                  "description" : "Comma delimited fields that should be added to the resource by performing joins. For example, in order to get the IP address of a node when calling the nodes endpoints, setting 'ip4log.ip' into this field will provide the latest IP address of the device in the 'ip4log.ip' field of every node that is returned.",
                  "type" : "string"
               },
               "limit" : {
                  "description" : "The maximum amount of entries to get.",
                  "type" : "string"
               },
               "query" : {
                  "$ref" : "#/components/schemas/Query"
               },
               "sort" : {
                  "description" : "A list of fields to sort on along with the ordering way (ASC or DESC).",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "DynamicReportSearchResult" : {
            "properties" : {
               "items" : {
                  "description" : "Items",
                  "items" : {
                     "type" : "object"
                  },
                  "type" : "array"
               },
               "nextCursor" : {
                  "description" : "The cursor to access the data after the one returned in the response",
                  "type" : "integer"
               },
               "previousCursor" : {
                  "description" : "The cursor to access the data before the one returned in the response",
                  "type" : "integer"
               },
               "type" : "object"
            },
            "type" : "object"
         },
         "ErrorsWithMessage" : {
            "properties" : {
               "errors" : {
                  "items" : {
                     "type" : "object"
                  },
                  "type" : "array"
               },
               "message" : {
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "IpsetIp" : {
            "properties" : {
               "ip" : {
                  "description" : "The IPv4 address of the client",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "IpsetMac" : {
            "properties" : {
               "mac" : {
                  "description" : "The clients MAC address. example: 01:23:45:67:89:AB",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "IpsetNetwork" : {
            "properties" : {
               "network" : {
                  "description" : "The IPv4 network identifier",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "IpsetPort" : {
            "properties" : {
               "port" : {
                  "description" : "The port to allow through. Can be prefixed with a protocol `tcp:` or `udp:`. When the protocol is omited, then the port will be opened for both protocols. example: tcp:65535",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "IpsetRoleId" : {
            "properties" : {
               "role_id" : {
                  "description" : "The client's node",
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "IpsetStatus" : {
            "properties" : {
               "type" : {
                  "description" : "The response status.",
                  "enum" : [
                     "ACK",
                     "NAK"
                  ],
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "IpsetType" : {
            "properties" : {
               "type" : {
                  "description" : "The Ipset type.",
                  "enum" : [
                     "Reg",
                     "Unreg"
                  ],
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "Iterable" : {
            "properties" : {
               "nextCursor" : {
                  "description" : "The cursor to access the data after the one returned in the response",
                  "type" : "string"
               },
               "previousCursor" : {
                  "description" : "The cursor to access the data before the one returned in the response",
                  "type" : "string"
               },
               "total_count" : {
                  "description" : "The total count of the query",
                  "type" : "int"
               }
            },
            "type" : "object"
         },
         "Message" : {
            "properties" : {
               "message" : {
                  "description" : "A meaninful user readable message about what happened",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "Password" : {
            "properties" : {
               "access_duration" : {
                  "description" : "The access duration that should be given to a node when this account is used is used to register a device",
                  "type" : "string"
               },
               "access_level" : {
                  "description" : "The administrative access level that should be given to the user when he logs into the administration interface",
                  "type" : "string"
               },
               "category" : {
                  "description" : "The node category ID that should be given to a node when this account is used to register a device",
                  "type" : "integer"
               },
               "expiration" : {
                  "description" : "The date at which the password expires (becomes invalid)",
                  "type" : "string"
               },
               "login_remaining" : {
                  "description" : "The amount of logins that the user has remaining. When null, the user has unlimited logins",
                  "type" : "integer"
               },
               "password" : {
                  "description" : "The password of the local account. When encrypted, it is prefixed by the encryption type surrounded by brackets. For example \"{ntlm}iosnuiofsauionsfdioun\"",
                  "type" : "string"
               },
               "pid" : {
                  "description" : "The username of the local account",
                  "type" : "string"
               },
               "sponsor" : {
                  "description" : "Whether or not this account can be used to sponsor other users via a SponsorEmail source",
                  "type" : "boolean"
               },
               "unregdate" : {
                  "description" : "The unregistration date that should be given to a node when this account is used to register a device",
                  "type" : "string"
               },
               "valid_from" : {
                  "description" : "The date at which the password becomes valid",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "Preference" : {
            "properties" : {
               "id" : {
                  "type" : "string"
               },
               "value" : {
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "PreferencesList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "description" : "Items",
                        "items" : {
                           "$ref" : "#/components/schemas/Preference"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "Query" : {
            "example" : {
               "op" : "and",
               "values" : [
                  {
                     "field" : "detect_date",
                     "op" : "between",
                     "values" : [
                        "2017-01-01 ",
                        "2017-01-02 "
                     ]
                  },
                  {
                     "op" : "or",
                     "values" : [
                        {
                           "field" : "mac",
                           "op" : "ends_with",
                           "value" : "ab:cd"
                        },
                        {
                           "field" : "pid",
                           "op" : "equals",
                           "value" : "lzammit"
                        }
                     ]
                  }
               ]
            },
            "properties" : {
               "field" : {
                  "description" : "The field to perform the search on. It is possible to specify fields from other API endpoints (ex: ip4log.ip)",
                  "type" : "string"
               },
               "op" : {
                  "description" : "The operator to use against the value of the field. Can be `and`, `or`, `is`, `is_not`, `match`, `not_match`, `contains`, `not_contains`, `between` and `not_between`",
                  "type" : "string"
               },
               "value" : {
                  "description" : "The search term to use when performing the search using on the specified field. This field must be used when the operator performs the condition against a single string value.",
                  "type" : "string"
               },
               "values" : {
                  "description" : "An array of simple/complex searches to use with the provided operator. To be used when the operator expects complex values as arguments. Refer to the examples for how to use this efficiently. This field must follow the same structure as this schema.",
                  "items" : {
                     "type" : "object"
                  },
                  "type" : "array"
               }
            },
            "type" : "object"
         },
         "QueueStats" : {
            "description" : "The schema used for a collection of queue stats",
            "items" : {
               "description" : "Statistics of the queue",
               "properties" : {
                  "queue" : {
                     "description" : "The name of the queue",
                     "type" : "string"
                  },
                  "stats" : {
                     "description" : "The statistics for the queue",
                     "properties" : {
                        "count" : {
                           "description" : "The queue count",
                           "type" : "integer"
                        },
                        "expired" : {
                           "description" : "The collection of expired task counters",
                           "items" : {
                              "description" : "An expired task",
                              "properties" : {
                                 "count" : {
                                    "description" : "The expired task counter",
                                    "type" : "integer"
                                 },
                                 "name" : {
                                    "description" : "The name of the expired task",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        },
                        "outstanding" : {
                           "description" : "The collection of outstanding task counters",
                           "items" : {
                              "description" : "An outstanding task",
                              "properties" : {
                                 "count" : {
                                    "description" : "The outstanding task counter",
                                    "type" : "integer"
                                 },
                                 "name" : {
                                    "description" : "The name of the outstanding task",
                                    "type" : "string"
                                 }
                              },
                              "type" : "object"
                           },
                           "type" : "array"
                        }
                     },
                     "type" : "object"
                  }
               },
               "type" : "object"
            },
            "type" : "array"
         },
         "ReportsActive" : {
            "properties" : {
               "computername" : {
                  "description" : "The hostname of the machine.",
                  "type" : "string"
               },
               "detect_date" : {
                  "description" : "The date at which the node was discovered by PacketFence.",
                  "type" : "date"
               },
               "last_arp" : {
                  "description" : "The last time PacketFence saw an ARP request for this node.",
                  "type" : "date"
               },
               "last_dhcp" : {
                  "description" : "The last time PacketFence saw a DHCP request for this node.",
                  "type" : "date"
               },
               "lastskip" : {
                  "description" : "Deprecated parameter.",
                  "type" : "string"
               },
               "mac" : {
                  "description" : "The MAC address.",
                  "type" : "string"
               },
               "notes" : {
                  "description" : "Custom notes on the node.",
                  "type" : "string"
               },
               "os" : {
                  "description" : "The name of the device as detected by Fingerbank.",
                  "type" : "string"
               },
               "pid" : {
                  "description" : "The person ID (owner) of the node.",
                  "type" : "string"
               },
               "regdate" : {
                  "description" : "The date at which the node was registered.",
                  "type" : "string"
               },
               "start_time" : {
                  "description" : "The date/time the node was first seen.",
                  "type" : "string"
               },
               "status" : {
                  "description" : "The node status (eg: reg|unreg|pending).",
                  "type" : "string"
               },
               "user_agent" : {
                  "description" : "The HTTP user agent of the device as seen by Fingerbank.",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ReportsActiveList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsActive"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsAuthenticationComputername" : {
            "properties" : {
               "computer_name" : {
                  "description" : "The computer name from the radius request.",
                  "type" : "string"
               },
               "count" : {
                  "description" : "The individual count for this item.",
                  "type" : "integer"
               },
               "percent" : {
                  "description" : "The count weighted against the total of all items expressed in percent.",
                  "type" : "float"
               }
            },
            "type" : "object"
         },
         "ReportsAuthenticationComputernameList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsAuthenticationComputername"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsAuthenticationMac" : {
            "properties" : {
               "count" : {
                  "description" : "The individual count for this item.",
                  "type" : "integer"
               },
               "mac" : {
                  "description" : "The MAC address.",
                  "type" : "string"
               },
               "percent" : {
                  "description" : "The count weighted against the total of all items expressed in percent.",
                  "type" : "float"
               }
            },
            "type" : "object"
         },
         "ReportsAuthenticationMacList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsAuthenticationMac"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsAuthenticationSsid" : {
            "properties" : {
               "count" : {
                  "description" : "The individual count for this item.",
                  "type" : "integer"
               },
               "percent" : {
                  "description" : "The count weighted against the total of all items expressed in percent.",
                  "type" : "float"
               },
               "ssid" : {
                  "description" : "The SSID name.",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ReportsAuthenticationSsidList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsAuthenticationSsid"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsAuthenticationUsername" : {
            "properties" : {
               "count" : {
                  "description" : "The individual count for this item.",
                  "type" : "integer"
               },
               "percent" : {
                  "description" : "The count weighted against the total of all items expressed in percent.",
                  "type" : "float"
               },
               "user_name" : {
                  "description" : "The user name from the radius request.",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ReportsAuthenticationUsernameList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsAuthenticationUsername"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsConnectionTypeActiveList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsConnectionTypeCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsConnectionTypeCommon" : {
            "properties" : {
               "connection_type" : {
                  "description" : "The client connection type.",
                  "type" : "string"
               },
               "connections" : {
                  "description" : "The number of client connections.",
                  "type" : "integer"
               },
               "percent" : {
                  "description" : "The number of client connections weighted against the total of all items expressed in percent.",
                  "type" : "float"
               }
            },
            "type" : "object"
         },
         "ReportsConnectionTypeList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsConnectionTypeCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsConnectionTypeRegActiveList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsConnectionTypeCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsConnectionTypeRegList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsConnectionTypeCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsConnectionTypeUnregActiveList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsConnectionTypeCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsConnectionTypeUnregList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsConnectionTypeCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsInactiveList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsNodeCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsNodeBandwidth" : {
            "properties" : {
               "acctinputoctets" : {
                  "description" : "The number in input octets.",
                  "type" : "integer"
               },
               "acctoutputoctets" : {
                  "description" : "The number of output octets.",
                  "type" : "integer"
               },
               "accttotaloctets" : {
                  "description" : "The sum of input and output octets.",
                  "type" : "integer"
               },
               "callingstationid" : {
                  "description" : "The MAC address.",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ReportsNodeBandwidthList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsNodeBandwidth"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsNodeCommon" : {
            "properties" : {
               "computername" : {
                  "description" : "The hostname of the machine.",
                  "type" : "string"
               },
               "detect_date" : {
                  "description" : "The date at which the node was discovered by PacketFence.",
                  "type" : "date"
               },
               "last_arp" : {
                  "description" : "The last time PacketFence saw an ARP request for this node.",
                  "type" : "date"
               },
               "last_dhcp" : {
                  "description" : "The last time PacketFence saw a DHCP request for this node.",
                  "type" : "date"
               },
               "lastskip" : {
                  "description" : "Deprecated parameter.",
                  "type" : "string"
               },
               "mac" : {
                  "description" : "The MAC address.",
                  "type" : "string"
               },
               "notes" : {
                  "description" : "Custom notes on the node.",
                  "type" : "string"
               },
               "os" : {
                  "description" : "The name of the device as detected by Fingerbank.",
                  "type" : "string"
               },
               "pid" : {
                  "description" : "The person ID (owner) of the node.",
                  "type" : "string"
               },
               "regdate" : {
                  "description" : "The date at which the node was registered.",
                  "type" : "string"
               },
               "status" : {
                  "description" : "The node status (eg: reg|unreg|pending).",
                  "type" : "string"
               },
               "user_agent" : {
                  "description" : "The HTTP user agent of the device as seen by Fingerbank.",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ReportsOpenViolationsActiveList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsOpenViolationsCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsOpenViolationsCommon" : {
            "properties" : {
               "mac" : {
                  "description" : "The MAC address.",
                  "type" : "string"
               },
               "owner" : {
                  "description" : "The person ID (owner) of the node.",
                  "type" : "string"
               },
               "start_date" : {
                  "description" : "The date/time when the violation was opened.",
                  "type" : "date"
               },
               "status" : {
                  "description" : "The status of the violation.",
                  "type" : "string"
               },
               "violation" : {
                  "description" : "The name of the violation class.",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ReportsOpenViolationsList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsOpenViolationsCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsOs" : {
            "properties" : {
               "count" : {
                  "description" : "The individual count for this item.",
                  "type" : "integer"
               },
               "description" : {
                  "description" : "The name of the device as detected by Fingerbank.",
                  "type" : "string"
               },
               "dhcp_fingerprint" : {
                  "description" : "The DHCP Option82 fingerprint as detected by Fingerbank.",
                  "type" : "string"
               },
               "percent" : {
                  "description" : "The count weighted against the total of all items expressed in percent.",
                  "type" : "float"
               }
            },
            "type" : "object"
         },
         "ReportsOsClass" : {
            "properties" : {
               "count" : {
                  "description" : "The individual count for this item.",
                  "type" : "integer"
               },
               "description" : {
                  "description" : "The class of the device as detected by Fingerbank.",
                  "type" : "string"
               },
               "percent" : {
                  "description" : "The count weighted against the total of all items expressed in percent.",
                  "type" : "float"
               }
            },
            "type" : "object"
         },
         "ReportsOsClassBandwidth" : {
            "properties" : {
               "accttotaloctets" : {
                  "description" : "The total number of octects transfered (in+out).",
                  "type" : "string"
               },
               "dhcp_fingerprint" : {
                  "description" : "The class of the device as detected by Fingerbank.",
                  "type" : "string"
               },
               "percent" : {
                  "description" : "The number of octects transfered weighted against the total of all items expressed in percent.",
                  "type" : "float"
               }
            },
            "type" : "object"
         },
         "ReportsOsClassBandwidthList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsOsClassBandwidth"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsOsClassList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsOsClass"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsOsList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsOs"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsRegisteredActiveList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsNodeCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsRegisteredList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsNodeCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsSsidActiveList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsSsidCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsSsidCommon" : {
            "properties" : {
               "nodes" : {
                  "description" : "The number of nodes connected.",
                  "type" : "string"
               },
               "percent" : {
                  "description" : "The number of nodes weighted against the total of all items expressed in percent.",
                  "type" : "float"
               },
               "ssid" : {
                  "description" : "The SSID name.",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ReportsSsidList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsSsidCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsStaticsActiveList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsStaticsCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsStaticsCommon" : {
            "properties" : {
               "autoreg" : {
                  "description" : "Whether or not the node was autoregistered (i.e. didn't go through the captive-portal) (yes|no).",
                  "type" : "string"
               },
               "bandwidth_balance" : {
                  "description" : "The amount of bandwidth the device has left on the network. This is used only for bandwidth balance access that relies on the accounting data.",
                  "type" : "string"
               },
               "bypass_role_id" : {
                  "description" : "The category ID (role ID) that acts as an override to the defined role in the `category_id` field.",
                  "type" : "string"
               },
               "bypass_vlan" : {
                  "description" : "The VLAN to apply on the device to override the one that would be defined in the switch configuration for this role.",
                  "type" : "string"
               },
               "category_id" : {
                  "description" : "The category ID (role ID) of the node.",
                  "type" : "string"
               },
               "computername" : {
                  "description" : "The hostname of the machine.",
                  "type" : "string"
               },
               "detect_date" : {
                  "description" : "The date at which the node was discovered by PacketFence.",
                  "type" : "date"
               },
               "device_class" : {
                  "description" : "The class of the device as detected by Fingerbank.",
                  "type" : "string"
               },
               "device_score" : {
                  "description" : "The confidence level (0 to 100) that Fingerbank has on the profiling it did for this node.",
                  "type" : "integer"
               },
               "device_type" : {
                  "description" : "The name of the device as detected by Fingerbank.",
                  "type" : "string"
               },
               "device_version" : {
                  "description" : "The OS version of the device as detected by Fingerbank.",
                  "type" : "string"
               },
               "dhcp6_enterprise" : {
                  "description" : "The DHCPv6 enterprise ID as seen by Fingerbank (used for device profiling).",
                  "type" : "string"
               },
               "dhcp6_fingerprint" : {
                  "description" : "The DHCPv6 Option82 fingerprint as detected by Fingerbank.",
                  "type" : "string"
               },
               "dhcp_fingerprint" : {
                  "description" : "The DHCP Option82 fingerprint as detected by Fingerbank.",
                  "type" : "string"
               },
               "dhcp_vendor" : {
                  "description" : "The DHCP vendor as seen by Fingerbank (used for device profiling).",
                  "type" : "string"
               },
               "last_arp" : {
                  "description" : "The last time PacketFence saw an ARP request for this node.",
                  "type" : "date"
               },
               "last_dhcp" : {
                  "description" : "The last time PacketFence saw a DHCP request for this node.",
                  "type" : "date"
               },
               "last_seen" : {
                  "description" : "The last time PacketFence saw this node.",
                  "type" : "date"
               },
               "lastskip" : {
                  "description" : "Deprecated parameter.",
                  "type" : "string"
               },
               "mac" : {
                  "description" : "The MAC address.",
                  "type" : "string"
               },
               "machine_account" : {
                  "description" : "The machine username of this node if it ever did machine authentication (only works for Windows hosts or usernames that start with `host/`).",
                  "type" : "string"
               },
               "notes" : {
                  "description" : "Custom notes on the node.",
                  "type" : "string"
               },
               "pid" : {
                  "description" : "The person ID (owner) of the node.",
                  "type" : "string"
               },
               "regdate" : {
                  "description" : "The date at which the node was registered.",
                  "type" : "string"
               },
               "sessionid" : {
                  "description" : "The session ID of the device (used for certain switches).",
                  "type" : "string"
               },
               "status" : {
                  "description" : "The node status (eg: reg|unreg|pending).",
                  "type" : "string"
               },
               "time_balance" : {
                  "description" : "The amount of time the device has left on the network before being unregistered. This is used only for time balance access that relies on the accounting data.",
                  "type" : "string"
               },
               "unregdate" : {
                  "description" : "The date at which the node will be deregistered.",
                  "type" : "string"
               },
               "user_agent" : {
                  "description" : "The HTTP user agent of the device as seen by Fingerbank.",
                  "type" : "string"
               },
               "voip" : {
                  "description" : "Whether or not the node is a VoIP device for PacketFence (yes|no).",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ReportsStaticsList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsStaticsCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsUnknownprintsActiveList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsUnknownprintsCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsUnknownprintsCommon" : {
            "properties" : {
               "computername" : {
                  "description" : "The hostname of the machine.",
                  "type" : "string"
               },
               "dhcp_fingerprint" : {
                  "description" : "The DHCP Option82 fingerprint as detected by Fingerbank.",
                  "type" : "string"
               },
               "mac" : {
                  "description" : "The MAC address.",
                  "type" : "string"
               },
               "user_agent" : {
                  "description" : "The HTTP user agent of the device as seen by Fingerbank.",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "ReportsUnknownprintsList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsUnknownprintsCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsUnregisteredActiveList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsNodeCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "ReportsUnregisteredList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ReportsNodeCommon"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "Search" : {
            "properties" : {
               "cursor" : {
                  "description" : "The cursor pointer to fetch the data (value should be taken from previousCursor and nextCursor)",
                  "type" : "string"
               },
               "fields" : {
                  "description" : "Comma delimited fields that should be added to the resource by performing joins. For example, in order to get the IP address of a node when calling the nodes endpoints, setting 'ip4log.ip' into this field will provide the latest IP address of the device in the 'ip4log.ip' field of every node that is returned.",
                  "type" : "string"
               },
               "limit" : {
                  "description" : "The maximum amount of entries to get.",
                  "type" : "string"
               },
               "query" : {
                  "$ref" : "#/components/schemas/Query"
               },
               "sort" : {
                  "description" : "A list of fields to sort on along with the ordering way (ASC or DESC).",
                  "type" : "string"
               },
               "with_total_count" : {
                  "description" : "The total count of the query will be returned",
                  "type" : "boolean"
               }
            },
            "type" : "object"
         },
         "Service" : {
            "properties" : {
               "alive" : {
                  "description" : "Whether the service is alive or not.",
                  "type" : "integer"
               },
               "enabled" : {
                  "description" : "Whether the service is enabled or not.",
                  "type" : "integer"
               },
               "managed" : {
                  "description" : "Whether the service is managed or not.",
                  "type" : "integer"
               },
               "pid" : {
                  "description" : "The service PID.",
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "ServiceDisable" : {
            "properties" : {
               "start" : {
                  "description" : "Whether the service was disabled or not.",
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "ServiceEnable" : {
            "properties" : {
               "start" : {
                  "description" : "Whether the service was enabled or not.",
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "ServiceName" : {
            "type" : "string"
         },
         "ServiceRestart" : {
            "properties" : {
               "pid" : {
                  "description" : "The service PID.",
                  "type" : "integer"
               },
               "restart" : {
                  "description" : "Whether the service was restarted or not.",
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "ServiceStart" : {
            "properties" : {
               "pid" : {
                  "description" : "The service PID.",
                  "type" : "integer"
               },
               "start" : {
                  "description" : "Whether the service was started or not.",
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "ServiceStop" : {
            "properties" : {
               "stop" : {
                  "description" : "Whether the service was stopped or not.",
                  "type" : "integer"
               }
            },
            "type" : "object"
         },
         "ServicesList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/ServiceName"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "Tenant" : {
            "properties" : {
               "domain_name" : {
                  "type" : "string"
               },
               "id" : {
                  "type" : "integer"
               },
               "name" : {
                  "type" : "string"
               },
               "portal_domain_name" : {
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "TenantsList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "description" : "Items",
                        "items" : {
                           "$ref" : "#/components/schemas/Tenant"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "User" : {
            "properties" : {
               "email" : {
                  "description" : "The email of the user.",
                  "type" : "string"
               },
               "firstname" : {
                  "description" : "The first name of the user.",
                  "type" : "string"
               },
               "lastname" : {
                  "description" : "The last name of the user.",
                  "type" : "string"
               },
               "pid" : {
                  "description" : "The username.",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "UserWithLinks" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/User"
               },
               {
                  "properties" : {
                     "nodes_url" : {
                        "description" : "link to the nodes of this user",
                        "type" : "string"
                     },
                     "password_url" : {
                        "description" : "link to the password (local account) of this user. If there is none, the value will be empty.",
                        "type" : "string"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "UsersList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "items" : {
                           "$ref" : "#/components/schemas/UserWithLinks"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         },
         "UsersNodesLocationlog" : {
            "properties" : {
               "connection_sub_type" : {
                  "type" : "string"
               },
               "connection_type" : {
                  "type" : "string"
               },
               "dot1x_username" : {
                  "type" : "string"
               },
               "end_time" : {
                  "type" : "string"
               },
               "id" : {
                  "type" : "integer"
               },
               "ifDesc" : {
                  "type" : "string"
               },
               "mac" : {
                  "type" : "string"
               },
               "port" : {
                  "type" : "string"
               },
               "realm" : {
                  "type" : "string"
               },
               "role" : {
                  "type" : "string"
               },
               "session_id" : {
                  "type" : "string"
               },
               "ssid" : {
                  "type" : "string"
               },
               "start_time" : {
                  "type" : "string"
               },
               "stripped_user_name" : {
                  "type" : "string"
               },
               "switch" : {
                  "type" : "string"
               },
               "switch_ip" : {
                  "type" : "string"
               },
               "switch_mac" : {
                  "type" : "string"
               },
               "tenant_id" : {
                  "type" : "integer"
               },
               "vlan" : {
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "UsersNodesLocationlogsList" : {
            "allOf" : [
               {
                  "$ref" : "#/components/schemas/Iterable"
               },
               {
                  "properties" : {
                     "items" : {
                        "description" : "Items",
                        "items" : {
                           "$ref" : "#/components/schemas/UsersNodesLocationlog"
                        },
                        "type" : "array"
                     }
                  },
                  "type" : "object"
               }
            ]
         }
      },
      "securitySchemes" : {
         "bearerAuth" : {
            "bearerFormat" : "JWT",
            "scheme" : "bearer",
            "type" : "http"
         }
      }
   },
   "info" : {
      "contact" : {
         "name" : "PacketFence",
         "url" : "https://packetfence.org"
      },
      "description" : "A JSON HTTP API to access and manipulate the PacketFence resources. Backward compatibility is currently not 100% guaranteed although we will do our best effort to keep API calls as described here.",
      "license" : {
         "name" : "GNU General Public License v2.0"
      },
      "title" : "PacketFence API",
      "version" : "1.1.0"
   },
   "openapi" : "3.0.0",
   "paths" : {
      "/admin_api_audit_log/{admin_api_audit_log_id}" : {
         "description" : "pf::UnifiedApi::Controller::AdminApiAuditLogs",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.AdminApiAuditLogs.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "admin_api_audit_log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/AdminApiAuditLog"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/admin_api_audit_logs" : {
         "description" : "pf::UnifiedApi::Controller::AdminApiAuditLogs",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.AdminApiAuditLogs.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/AdminApiAuditLogsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/admin_api_audit_logs/search" : {
         "description" : "pf::UnifiedApi::Controller::AdminApiAuditLogs",
         "post" : {
            "operationId" : "api.v1.AdminApiAuditLogs.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/AdminApiAuditLogsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/auth_log/{auth_log_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.AuthLogs.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "auth_log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::AuthLogs",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.AuthLogs.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "auth_log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/AuthLog"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.AuthLogs.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "auth_log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/AuthLog"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.AuthLogs.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "auth_log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/AuthLog"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/auth_logs" : {
         "description" : "pf::UnifiedApi::Controller::AuthLogs",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.AuthLogs.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/AuthLogsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.AuthLogs.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/AuthLog"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/auth_logs/search" : {
         "description" : "pf::UnifiedApi::Controller::AuthLogs",
         "post" : {
            "operationId" : "api.v1.AuthLogs.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/AuthLogsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/class/{class_id}" : {
         "description" : "pf::UnifiedApi::Controller::Classes",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Classes.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "class_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/Class"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/classes" : {
         "description" : "pf::UnifiedApi::Controller::Classes",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Classes.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ClassesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/classes/search" : {
         "description" : "pf::UnifiedApi::Controller::Classes",
         "post" : {
            "operationId" : "api.v1.Classes.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ClassesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/admin_role/{admin_role_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.AdminRoles.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "admin_role_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::AdminRoles",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.AdminRoles.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "admin_role_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigAdminRole"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.AdminRoles.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "admin_role_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigAdminRole"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.AdminRoles.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "admin_role_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigAdminRole"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/admin_roles" : {
         "description" : "pf::UnifiedApi::Controller::Config::AdminRoles",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.AdminRoles.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigAdminRolesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/base/{base_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Bases.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "base_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Bases\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Bases.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "base_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigBase"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Bases.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "base_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigBase"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Bases.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "base_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigBase"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/bases" : {
         "description" : "pf::UnifiedApi::Controller::Config::Bases\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Bases.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigBasesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/billing_tier/{billing_tier_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.BillingTiers.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "billing_tier_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::BillingTiers",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.BillingTiers.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "billing_tier_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigBillingTier"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.BillingTiers.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "billing_tier_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigBillingTier"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.BillingTiers.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "billing_tier_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigBillingTier"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/billing_tiers" : {
         "description" : "pf::UnifiedApi::Controller::Config::BillingTiers",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.BillingTiers.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigBillingTiersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/cloud/{cloud_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Clouds.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "cloud_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Clouds",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Clouds.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "cloud_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigCloud"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Clouds.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "cloud_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigCloud"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Clouds.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "cloud_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigCloud"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/clouds" : {
         "description" : "pf::UnifiedApi::Controller::Config::Clouds",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Clouds.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigCloudsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/connection_profile/{connection_profile_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.ConnectionProfiles.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "connection_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::ConnectionProfiles\n\n  files\n    files\n\n  build_compare_functions\n    build_compare_functions\n\n  file_listing_info\n    file_listing_info\n\n  get_file\n    get_file\n\n  new_file\n    new_file\n\n  replace_file\n    replace_file\n\n  valid_file_path\n    valid_file_path\n\n  delete_path\n    delete_path\n\n  profileFilePath\n    profileFilePath\n\n  make_compare_functions\n    make_compare_functions\n\n  make_compare_function\n    make_compare_function\n\n  profileFileListing\n    profileFileListing\n\n  pathLookup\n    parent paths\n\n  standardPlaceholder\n    standardPlaceholder\n\n  mergePaths\n    mergePaths\n\n  file_excluded\n    file_excluded\n\n  isFileRevertible\n    isFileRevertible\n\n  _sync_files\n    sync_files\n\n  _sync_delete_files\n    _sync_delete_files\n\n  notDeletable\n    notDeletable\n\n  sortEntry\n    Sorts the dir entries by name\n\n  create_response\n    create_response",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.ConnectionProfiles.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "connection_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigConnectionProfile"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.ConnectionProfiles.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "connection_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigConnectionProfile"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.ConnectionProfiles.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "connection_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigConnectionProfile"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/connection_profiles" : {
         "description" : "pf::UnifiedApi::Controller::Config::ConnectionProfiles\n\n  files\n    files\n\n  build_compare_functions\n    build_compare_functions\n\n  file_listing_info\n    file_listing_info\n\n  get_file\n    get_file\n\n  new_file\n    new_file\n\n  replace_file\n    replace_file\n\n  valid_file_path\n    valid_file_path\n\n  delete_path\n    delete_path\n\n  profileFilePath\n    profileFilePath\n\n  make_compare_functions\n    make_compare_functions\n\n  make_compare_function\n    make_compare_function\n\n  profileFileListing\n    profileFileListing\n\n  pathLookup\n    parent paths\n\n  standardPlaceholder\n    standardPlaceholder\n\n  mergePaths\n    mergePaths\n\n  file_excluded\n    file_excluded\n\n  isFileRevertible\n    isFileRevertible\n\n  _sync_files\n    sync_files\n\n  _sync_delete_files\n    _sync_delete_files\n\n  notDeletable\n    notDeletable\n\n  sortEntry\n    Sorts the dir entries by name\n\n  create_response\n    create_response",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.ConnectionProfiles.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigConnectionProfilesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/connector/{connector_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Connectors.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "connector_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Connectors",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Connectors.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "connector_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigConnector"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Connectors.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "connector_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigConnector"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Connectors.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "connector_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigConnector"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/connectors" : {
         "description" : "pf::UnifiedApi::Controller::Config::Connectors",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Connectors.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigConnectorsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/domain/{domain_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Domains.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "domain_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Domains\n\n  test_join\n    Test if a domain is properly joined\n\n  handle_domain_operation\n    Post a long running operation to the queue and render the task ID to\n    follow its status\n\n  validate_input\n    validate_input\n\n  join\n    Join to the domain via the queue\n\n  unjoin\n    Unjoin to the domain via the queue\n\n  rejoin\n    Rejoin to the domain via the queue\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Domains.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "domain_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigDomain"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Domains.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "domain_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigDomain"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Domains.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "domain_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigDomain"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/domains" : {
         "description" : "pf::UnifiedApi::Controller::Config::Domains\n\n  test_join\n    Test if a domain is properly joined\n\n  handle_domain_operation\n    Post a long running operation to the queue and render the task ID to\n    follow its status\n\n  validate_input\n    validate_input\n\n  join\n    Join to the domain via the queue\n\n  unjoin\n    Unjoin to the domain via the queue\n\n  rejoin\n    Rejoin to the domain via the queue\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Domains.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigDomainsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/event_logger/{event_logger_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.EventLoggers.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "event_logger_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "Configure event loggers",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.EventLoggers.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "event_logger_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigEventLogger"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.EventLoggers.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "event_logger_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigEventLogger"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.EventLoggers.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "event_logger_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigEventLogger"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/event_loggers" : {
         "description" : "Configure event loggers",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.EventLoggers.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigEventLoggersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/filter_engines/dhcp_filter/{dhcp_filter_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.FilterEngines.DHCP.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dhcp_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "Configure dhcp filters",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.FilterEngines.DHCP.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dhcp_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFilterEnginesDHCPFilter"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.FilterEngines.DHCP.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dhcp_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFilterEnginesDHCPFilter"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.FilterEngines.DHCP.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dhcp_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFilterEnginesDHCPFilter"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/filter_engines/dhcp_filters" : {
         "description" : "Configure dhcp filters",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.FilterEngines.DHCP.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFilterEnginesDHCPFiltersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/filter_engines/dns_filter/{dns_filter_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.FilterEngines.DNS.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dns_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "Configure dns filters",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.FilterEngines.DNS.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dns_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFilterEnginesDNSFilter"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.FilterEngines.DNS.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dns_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFilterEnginesDNSFilter"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.FilterEngines.DNS.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dns_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFilterEnginesDNSFilter"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/filter_engines/dns_filters" : {
         "description" : "Configure dns filters",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.FilterEngines.DNS.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFilterEnginesDNSFiltersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/filter_engines/radius_filter/{radius_filter_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.FilterEngines.RADIUS.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "radius_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "Configure dns filters",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.FilterEngines.RADIUS.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "radius_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFilterEnginesRADIUSFilter"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.FilterEngines.RADIUS.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "radius_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFilterEnginesRADIUSFilter"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.FilterEngines.RADIUS.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "radius_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFilterEnginesRADIUSFilter"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/filter_engines/radius_filters" : {
         "description" : "Configure dns filters",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.FilterEngines.RADIUS.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFilterEnginesRADIUSFiltersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/filter_engines/switch_filter/{switch_filter_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.FilterEngines.Switch.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "switch_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "Configure dns filters",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.FilterEngines.Switch.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "switch_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFilterEnginesSwitchFilter"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.FilterEngines.Switch.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "switch_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFilterEnginesSwitchFilter"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.FilterEngines.Switch.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "switch_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFilterEnginesSwitchFilter"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/filter_engines/switch_filters" : {
         "description" : "Configure dns filters",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.FilterEngines.Switch.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFilterEnginesSwitchFiltersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/filter_engines/vlan_filter/{vlan_filter_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.FilterEngines.Vlan.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "vlan_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "Configure vlan filters",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.FilterEngines.Vlan.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "vlan_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFilterEnginesVlanFilter"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.FilterEngines.Vlan.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "vlan_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFilterEnginesVlanFilter"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.FilterEngines.Vlan.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "vlan_filter_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFilterEnginesVlanFilter"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/filter_engines/vlan_filters" : {
         "description" : "Configure vlan filters",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.FilterEngines.Vlan.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFilterEnginesVlanFiltersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/fingerbank_setting/{fingerbank_setting_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.FingerbankSettings.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "fingerbank_setting_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::FingerbankSettings\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.FingerbankSettings.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "fingerbank_setting_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFingerbankSetting"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.FingerbankSettings.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "fingerbank_setting_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFingerbankSetting"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.FingerbankSettings.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "fingerbank_setting_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFingerbankSetting"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/fingerbank_settings" : {
         "description" : "pf::UnifiedApi::Controller::Config::FingerbankSettings\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.FingerbankSettings.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFingerbankSettingsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/firewall/{firewall_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Firewalls.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "firewall_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Firewalls",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Firewalls.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "firewall_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFirewall"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Firewalls.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "firewall_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFirewall"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Firewalls.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "firewall_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFirewall"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/firewalls" : {
         "description" : "pf::UnifiedApi::Controller::Config::Firewalls",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Firewalls.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFirewallsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/floating_device/{floating_device_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.FloatingDevices.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "floating_device_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "Configure floating devices",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.FloatingDevices.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "floating_device_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFloatingDevice"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.FloatingDevices.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "floating_device_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFloatingDevice"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.FloatingDevices.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "floating_device_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFloatingDevice"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/floating_devices" : {
         "description" : "Configure floating devices",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.FloatingDevices.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFloatingDevicesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/l2_network/{network_id}" : {
         "description" : "pf::UnifiedApi::Controller::Config::L2Networks",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.L2Networks.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "network_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigL2Network"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.L2Networks.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "network_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigL2Network"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.L2Networks.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "network_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigL2Network"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/l2_networks" : {
         "description" : "pf::UnifiedApi::Controller::Config::L2Networks",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.L2Networks.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigL2NetworksList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/maintenance_task/{maintenance_task_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.MaintenanceTasks.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "maintenance_task_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::MaintenanceTasks\n\n  form_process_parameters_for_cleanup\n    form_process_parameters_for_cleanup",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.MaintenanceTasks.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "maintenance_task_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigMaintenanceTask"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.MaintenanceTasks.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "maintenance_task_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigMaintenanceTask"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.MaintenanceTasks.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "maintenance_task_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigMaintenanceTask"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/maintenance_tasks" : {
         "description" : "pf::UnifiedApi::Controller::Config::MaintenanceTasks\n\n  form_process_parameters_for_cleanup\n    form_process_parameters_for_cleanup",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.MaintenanceTasks.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigMaintenanceTasksList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/mfa/{mfa_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Mfas.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "mfa_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Mfas",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Mfas.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "mfa_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigMfa"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Mfas.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "mfa_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigMfa"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Mfas.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "mfa_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigMfa"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/mfas" : {
         "description" : "pf::UnifiedApi::Controller::Config::Mfas",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Mfas.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigMfasList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/network_behavior_policies" : {
         "description" : "pf::UnifiedApi::Controller::Config::NetworkBehaviorPolicies",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.NetworkBehaviorPolicies.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigNetworkBehaviorPoliciesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/network_behavior_policy/{network_behavior_policy_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.NetworkBehaviorPolicies.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "network_behavior_policy_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::NetworkBehaviorPolicies",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.NetworkBehaviorPolicies.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "network_behavior_policy_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigNetworkBehaviorPolicy"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.NetworkBehaviorPolicies.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "network_behavior_policy_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigNetworkBehaviorPolicy"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.NetworkBehaviorPolicies.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "network_behavior_policy_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigNetworkBehaviorPolicy"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/pki_provider/{pki_provider_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.PkiProviders.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "pki_provider_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::PkiProviders",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.PkiProviders.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "pki_provider_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigPkiProvider"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.PkiProviders.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "pki_provider_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigPkiProvider"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.PkiProviders.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "pki_provider_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigPkiProvider"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/pki_providers" : {
         "description" : "pf::UnifiedApi::Controller::Config::PkiProviders",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.PkiProviders.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigPkiProvidersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/portal_module/{portal_module_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.PortalModules.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "portal_module_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::PortalModules",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.PortalModules.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "portal_module_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigPortalModule"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.PortalModules.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "portal_module_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigPortalModule"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.PortalModules.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "portal_module_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigPortalModule"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/portal_modules" : {
         "description" : "pf::UnifiedApi::Controller::Config::PortalModules",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.PortalModules.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigPortalModulesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/provisioning/{provisioning_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Provisionings.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "provisioning_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Provisionings\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Provisionings.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "provisioning_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigProvisioning"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Provisionings.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "provisioning_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigProvisioning"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Provisionings.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "provisioning_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigProvisioning"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/provisionings" : {
         "description" : "pf::UnifiedApi::Controller::Config::Provisionings\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Provisionings.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigProvisioningsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/radiusd/eap_profile/{eap_profile_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Radiusd.EAPProfiles.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "eap_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "Configure floating devices",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Radiusd.EAPProfiles.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "eap_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigRadiusdEAPProfile"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Radiusd.EAPProfiles.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "eap_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigRadiusdEAPProfile"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Radiusd.EAPProfiles.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "eap_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigRadiusdEAPProfile"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/radiusd/eap_profiles" : {
         "description" : "Configure floating devices",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Radiusd.EAPProfiles.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigRadiusdEAPProfilesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/radiusd/fast_profile/{fast_profile_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Radiusd.FastProfiles.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "fast_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "Configure floating devices",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Radiusd.FastProfiles.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "fast_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigRadiusdFastProfile"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Radiusd.FastProfiles.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "fast_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigRadiusdFastProfile"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Radiusd.FastProfiles.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "fast_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigRadiusdFastProfile"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/radiusd/fast_profiles" : {
         "description" : "Configure floating devices",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Radiusd.FastProfiles.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigRadiusdFastProfilesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/radiusd/ocsp_profile/{ocsp_profile_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Radiusd.OCSPProfiles.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ocsp_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "Configure floating devices",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Radiusd.OCSPProfiles.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ocsp_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigRadiusdOCSPProfile"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Radiusd.OCSPProfiles.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ocsp_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigRadiusdOCSPProfile"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Radiusd.OCSPProfiles.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ocsp_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigRadiusdOCSPProfile"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/radiusd/ocsp_profiles" : {
         "description" : "Configure floating devices",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Radiusd.OCSPProfiles.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigRadiusdOCSPProfilesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/radiusd/tls_profile/{tls_profile_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Radiusd.TLSProfiles.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "tls_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "Configure floating devices",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Radiusd.TLSProfiles.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "tls_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigRadiusdTLSProfile"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Radiusd.TLSProfiles.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "tls_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigRadiusdTLSProfile"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Radiusd.TLSProfiles.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "tls_profile_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigRadiusdTLSProfile"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/radiusd/tls_profiles" : {
         "description" : "Configure floating devices",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Radiusd.TLSProfiles.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigRadiusdTLSProfilesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/realm/{realm_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Realms.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "realm_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Realms",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Realms.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "realm_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigRealm"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Realms.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "realm_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigRealm"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Realms.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "realm_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigRealm"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/realms" : {
         "description" : "pf::UnifiedApi::Controller::Config::Realms",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Realms.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigRealmsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/role/{role_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Roles.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "role_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Roles",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Roles.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "role_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigRole"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Roles.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "role_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigRole"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Roles.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "role_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigRole"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/roles" : {
         "description" : "pf::UnifiedApi::Controller::Config::Roles",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Roles.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigRolesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/routed_network/{network_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.RoutedNetworks.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "network_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::RoutedNetworks\n\n  get_json\n    Override parent method to set the id to the network value as it is\n    required for validation in pf::UnifiedApi::Controller::Config\n\n  form\n    Override to add the network ID in the form args if its defined\n\n  cleanup_item\n    Override to remove the network key from the items in favor of id",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.RoutedNetworks.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "network_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigRoutedNetwork"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.RoutedNetworks.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "network_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigRoutedNetwork"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.RoutedNetworks.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "network_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigRoutedNetwork"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/routed_networks" : {
         "description" : "pf::UnifiedApi::Controller::Config::RoutedNetworks\n\n  get_json\n    Override parent method to set the id to the network value as it is\n    required for validation in pf::UnifiedApi::Controller::Config\n\n  form\n    Override to add the network ID in the form args if its defined\n\n  cleanup_item\n    Override to remove the network key from the items in favor of id",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.RoutedNetworks.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigRoutedNetworksList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/scan/{scan_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Scans.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "scan_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Scans",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Scans.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "scan_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigScan"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Scans.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "scan_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigScan"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Scans.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "scan_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigScan"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/scans" : {
         "description" : "pf::UnifiedApi::Controller::Config::Scans",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Scans.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigScansList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/security_event/{security_event_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.SecurityEvents.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "security_event_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::SecurityEvents\n\n  id_field_default\n    id_field_default\n\n  form_parameters\n    form_parameters",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.SecurityEvents.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "security_event_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSecurityEvent"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.SecurityEvents.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "security_event_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSecurityEvent"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.SecurityEvents.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "security_event_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSecurityEvent"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/security_events" : {
         "description" : "pf::UnifiedApi::Controller::Config::SecurityEvents\n\n  id_field_default\n    id_field_default\n\n  form_parameters\n    form_parameters",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.SecurityEvents.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSecurityEventsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/self_service/{self_service_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.SelfServices.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "self_service_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::SelfServices",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.SelfServices.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "self_service_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSelfService"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.SelfServices.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "self_service_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSelfService"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.SelfServices.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "self_service_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSelfService"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/self_services" : {
         "description" : "pf::UnifiedApi::Controller::Config::SelfServices",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.SelfServices.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSelfServicesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/source/{source_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Source.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "source_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Sources\n\n  test\n    test a source configuration\n\n  saml_metadata\n    saml_metadata\n\n  form_parameters\n    The form parameters should be overridded\n\n  type_meta_info\n    type_meta_info\n\n  field_default\n    Get the default value of a field\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Source.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "source_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSource"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Source.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "source_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSource"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Source.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "source_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSource"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/sources" : {
         "description" : "pf::UnifiedApi::Controller::Config::Sources\n\n  test\n    test a source configuration\n\n  saml_metadata\n    saml_metadata\n\n  form_parameters\n    The form parameters should be overridded\n\n  type_meta_info\n    type_meta_info\n\n  field_default\n    Get the default value of a field\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Source.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSourcesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/ssl_certificate/{ssl_certificate_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.SSLCertificates.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ssl_certificate_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "Configure floating devices",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.SSLCertificates.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ssl_certificate_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSSLCertificate"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.SSLCertificates.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ssl_certificate_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSSLCertificate"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.SSLCertificates.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ssl_certificate_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSSLCertificate"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/ssl_certificates" : {
         "description" : "Configure floating devices",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.SSLCertificates.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSSLCertificatesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/switch/{switch_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Switches.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "switch_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Switches\n\n  invalidate_cache\n    invalidate switch cache\n\n  standardPlaceholder\n    standardPlaceholder",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Switches.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "switch_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSwitch"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Switches.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "switch_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSwitch"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Switches.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "switch_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSwitch"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/switch_group/{switch_group_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.SwitchGroups.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "switch_group_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::SwitchGroups\n\n  members\n    members\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.SwitchGroups.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "switch_group_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSwitchGroup"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.SwitchGroups.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "switch_group_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSwitchGroup"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.SwitchGroups.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "switch_group_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSwitchGroup"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/switch_groups" : {
         "description" : "pf::UnifiedApi::Controller::Config::SwitchGroups\n\n  members\n    members\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.SwitchGroups.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSwitchGroupsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/switches" : {
         "description" : "pf::UnifiedApi::Controller::Config::Switches\n\n  invalidate_cache\n    invalidate switch cache\n\n  standardPlaceholder\n    standardPlaceholder",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Switches.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSwitchesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/syslog_forwarder/{syslog_forwarder_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.SyslogForwarders.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "syslog_forwarder_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::SyslogForwarders",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.SyslogForwarders.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "syslog_forwarder_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSyslogForwarder"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.SyslogForwarders.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "syslog_forwarder_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSyslogForwarder"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.SyslogForwarders.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "syslog_forwarder_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSyslogForwarder"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/syslog_forwarders" : {
         "description" : "pf::UnifiedApi::Controller::Config::SyslogForwarders",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.SyslogForwarders.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSyslogForwardersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/syslog_parser/{syslog_parser_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.SyslogParsers.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "syslog_parser_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::SyslogParsers\n\n  dry_run\n    Dry run a regex parser configuration",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.SyslogParsers.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "syslog_parser_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSyslogParser"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.SyslogParsers.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "syslog_parser_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSyslogParser"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.SyslogParsers.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "syslog_parser_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigSyslogParser"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/syslog_parsers" : {
         "description" : "pf::UnifiedApi::Controller::Config::SyslogParsers\n\n  dry_run\n    Dry run a regex parser configuration",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.SyslogParsers.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigSyslogParsersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/template_switch/{template_switch_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.TemplateSwitches.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "template_switch_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::TemplateSwitches",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.TemplateSwitches.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "template_switch_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigTemplateSwitch"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.TemplateSwitches.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "template_switch_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigTemplateSwitch"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.TemplateSwitches.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "template_switch_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigTemplateSwitch"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/template_switches" : {
         "description" : "pf::UnifiedApi::Controller::Config::TemplateSwitches",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.TemplateSwitches.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigTemplateSwitchesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/traffic_shaping_policies" : {
         "description" : "pf::UnifiedApi::Controller::Config::TrafficShapingPolicies",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.TrafficShapingPolicies.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigTrafficShapingPoliciesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/config/traffic_shaping_policy/{traffic_shaping_policy_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.TrafficShapingPolicies.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "traffic_shaping_policy_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::TrafficShapingPolicies",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.TrafficShapingPolicies.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "traffic_shaping_policy_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigTrafficShapingPolicy"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.TrafficShapingPolicies.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "traffic_shaping_policy_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigTrafficShapingPolicy"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.TrafficShapingPolicies.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "traffic_shaping_policy_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigTrafficShapingPolicy"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/configurator/config/base/{base_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.Bases.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "base_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::Bases\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.Bases.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "base_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigBase"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.Bases.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "base_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigBase"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.Bases.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "base_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigBase"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/configurator/config/bases" : {
         "description" : "pf::UnifiedApi::Controller::Config::Bases\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.Bases.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigBasesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/configurator/config/fingerbank_setting/{fingerbank_setting_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Config.FingerbankSettings.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "fingerbank_setting_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Deleted a config item"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Config::FingerbankSettings\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Config.FingerbankSettings.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "fingerbank_setting_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFingerbankSetting"
                        }
                     }
                  },
                  "description" : "Item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Config.FingerbankSettings.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "fingerbank_setting_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFingerbankSetting"
                     }
                  }
               }
            },
            "responses" : {
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Config.FingerbankSettings.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "fingerbank_setting_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/ConfigFingerbankSetting"
                     }
                  }
               }
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/configurator/config/fingerbank_settings" : {
         "description" : "pf::UnifiedApi::Controller::Config::FingerbankSettings\n\n  fields_to_mask\n    fields_to_mask",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Config.FingerbankSettings.list",
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/ConfigFingerbankSettingsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/configurator/user/{user_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Configurator.Users.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::User\n\n  create_data_update\n    create_data_update\n\n  cleanup_item\n    Remove the password field from the item\n\n  unassign_nodes\n    unassign user nodes\n\n  security_events\n    security_events\n\n  bulk_register\n    bulk_register\n\n  bulk_deregister\n    bulk_deregister\n\n  bulk_close_security_events\n    bulk_close_security_events\n\n  close_security_events\n    close_security_events\n\n  bulk_apply_security_event\n    bulk_apply_security_event\n\n  bulk_reevaluate_access\n    bulk_reevaluate_access\n\n  bulk_init_results\n    bulk_init_results\n\n  bulk_fingerbank_refresh\n    bulk_fingerbank_refresh\n\n  do_bulk_update_field\n    do_bulk_update_field\n\n  bulk_apply_role\n    bulk_apply_role\n\n  bulk_apply_bypass_role\n    bulk_apply_bypass_role\n\n  bulk_delete\n    bulk_delete\n\n  bulk_import\n    bulk_import",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Configurator.Users.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/User"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Configurator.Users.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/User"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Configurator.Users.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/User"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/configurator/user/{user_id}/node/{node_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Configurator.Users.resource.Users.Nodes.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "node_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Users::Nodes",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Configurator.Users.resource.Users.Nodes.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "node_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/UsersNode"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Configurator.Users.resource.Users.Nodes.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "node_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UsersNode"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Configurator.Users.resource.Users.Nodes.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "node_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UsersNode"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/configurator/user/{user_id}/nodes" : {
         "description" : "pf::UnifiedApi::Controller::Users::Nodes",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Configurator.Users.resource.Users.Nodes.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               },
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UsersNodesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Configurator.Users.resource.Users.Nodes.create",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UsersNode"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/configurator/user/{user_id}/nodes/search" : {
         "description" : "pf::UnifiedApi::Controller::Users::Nodes",
         "post" : {
            "operationId" : "api.v1.Configurator.Users.resource.Users.Nodes.search",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UsersNodesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/configurator/user/{user_id}/password" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Users.resource.Password.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Users::Password\n\n  cleanup_item\n    Remove the password field from the item\n\n  validate\n    validate",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Users.resource.Password.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/UsersPassword"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Users.resource.Password.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UsersPassword"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Users.resource.Password.create",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UsersPassword"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Users.resource.Password.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UsersPassword"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/configurator/users" : {
         "description" : "pf::UnifiedApi::Controller::User\n\n  create_data_update\n    create_data_update\n\n  cleanup_item\n    Remove the password field from the item\n\n  unassign_nodes\n    unassign user nodes\n\n  security_events\n    security_events\n\n  bulk_register\n    bulk_register\n\n  bulk_deregister\n    bulk_deregister\n\n  bulk_close_security_events\n    bulk_close_security_events\n\n  close_security_events\n    close_security_events\n\n  bulk_apply_security_event\n    bulk_apply_security_event\n\n  bulk_reevaluate_access\n    bulk_reevaluate_access\n\n  bulk_init_results\n    bulk_init_results\n\n  bulk_fingerbank_refresh\n    bulk_fingerbank_refresh\n\n  do_bulk_update_field\n    do_bulk_update_field\n\n  bulk_apply_role\n    bulk_apply_role\n\n  bulk_apply_bypass_role\n    bulk_apply_bypass_role\n\n  bulk_delete\n    bulk_delete\n\n  bulk_import\n    bulk_import",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Configurator.Users.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UsersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Configurator.Users.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/User"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/configurator/users/search" : {
         "description" : "pf::UnifiedApi::Controller::User\n\n  create_data_update\n    create_data_update\n\n  cleanup_item\n    Remove the password field from the item\n\n  unassign_nodes\n    unassign user nodes\n\n  security_events\n    security_events\n\n  bulk_register\n    bulk_register\n\n  bulk_deregister\n    bulk_deregister\n\n  bulk_close_security_events\n    bulk_close_security_events\n\n  close_security_events\n    close_security_events\n\n  bulk_apply_security_event\n    bulk_apply_security_event\n\n  bulk_reevaluate_access\n    bulk_reevaluate_access\n\n  bulk_init_results\n    bulk_init_results\n\n  bulk_fingerbank_refresh\n    bulk_fingerbank_refresh\n\n  do_bulk_update_field\n    do_bulk_update_field\n\n  bulk_apply_role\n    bulk_apply_role\n\n  bulk_apply_bypass_role\n    bulk_apply_bypass_role\n\n  bulk_delete\n    bulk_delete\n\n  bulk_import\n    bulk_import",
         "post" : {
            "operationId" : "api.v1.Configurator.Users.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UsersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/dhcp_option82/{dhcp_option82_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.DhcpOption82s.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dhcp_option82_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::DhcpOption82s",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.DhcpOption82s.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dhcp_option82_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/DhcpOption82"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.DhcpOption82s.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dhcp_option82_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/DhcpOption82"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.DhcpOption82s.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dhcp_option82_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/DhcpOption82"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/dhcp_option82s" : {
         "description" : "pf::UnifiedApi::Controller::DhcpOption82s",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.DhcpOption82s.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DhcpOption82sList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.DhcpOption82s.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/DhcpOption82"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/dhcp_option82s/search" : {
         "description" : "pf::UnifiedApi::Controller::DhcpOption82s",
         "post" : {
            "operationId" : "api.v1.DhcpOption82s.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DhcpOption82sList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/dns_audit_log/{dns_audit_log_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.DnsAuditLogs.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dns_audit_log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::DnsAutitLogs",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.DnsAuditLogs.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dns_audit_log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/DnsAuditLog"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.DnsAuditLogs.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dns_audit_log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/DnsAuditLog"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.DnsAuditLogs.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "dns_audit_log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/DnsAuditLog"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/dns_audit_logs" : {
         "description" : "pf::UnifiedApi::Controller::DnsAutitLogs",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.DnsAuditLogs.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DnsAuditLogsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.DnsAuditLogs.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/DnsAuditLog"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/dns_audit_logs/search" : {
         "description" : "pf::UnifiedApi::Controller::DnsAutitLogs",
         "post" : {
            "operationId" : "api.v1.DnsAuditLogs.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DnsAuditLogsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/ip4log/{ip4log_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Ip4logs.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ip4log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Ip4logs",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Ip4logs.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ip4log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/Ip4log"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Ip4logs.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ip4log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Ip4log"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Ip4logs.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ip4log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Ip4log"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/ip4logs" : {
         "description" : "pf::UnifiedApi::Controller::Ip4logs",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Ip4logs.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/Ip4logsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Ip4logs.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Ip4log"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/ip4logs/search" : {
         "description" : "pf::UnifiedApi::Controller::Ip4logs",
         "post" : {
            "operationId" : "api.v1.Ip4logs.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/Ip4logsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/ip6log/{ip6log_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Ip6logs.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ip6log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Ip6logs",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Ip6logs.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ip6log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/Ip6log"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Ip6logs.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ip6log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Ip6log"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Ip6logs.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "ip6log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Ip6log"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/ip6logs" : {
         "description" : "pf::UnifiedApi::Controller::Ip6logs",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Ip6logs.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/Ip6logsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Ip6logs.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Ip6log"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/ip6logs/search" : {
         "description" : "pf::UnifiedApi::Controller::Ip6logs",
         "post" : {
            "operationId" : "api.v1.Ip6logs.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/Ip6logsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/locationlog/{locationlog_id}" : {
         "description" : "pf::UnifiedApi::Controller::Locationlogs",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Locationlogs.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "locationlog_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/Locationlog"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/locationlogs" : {
         "description" : "pf::UnifiedApi::Controller::Locationlogs",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Locationlogs.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/LocationlogsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/locationlogs/search" : {
         "description" : "pf::UnifiedApi::Controller::Locationlogs",
         "post" : {
            "operationId" : "api.v1.Locationlogs.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/LocationlogsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/node/{node_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Nodes.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "node_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Nodes\n\n  register\n    register\n\n  deregister\n    deregister\n\n  bulk_register\n    bulk_register\n\n  bulk_init_results\n    bulk_init_results\n\n  bulk_deregister\n    bulk_deregister\n\n  fingerbank_info\n    fingerbank_info\n\n  fingerbank_refresh\n    fingerbank_refresh\n\n  bulk_close_security_events\n    bulk_close_security_events\n\n  close_security_event\n    close_security_event\n\n  create_error_msg\n    create_error_msg\n\n  bulk_reevaluate_access\n    bulk_reevaluate_access\n\n  bulk_fingerbank_refresh\n    bulk_fingerbank_refresh\n\n  post_update\n    post_update\n\n  bulk_restart_switchport\n    bulk_restart_switchport\n\n  bulk_apply_security_event\n    bulk_apply_security_event\n\n  apply_security_event\n    apply_security_event\n\n  bulk_apply_role\n    bulk_apply_role\n\n  bulk_apply_bypass_role\n    bulk_apply_bypass_role\n\n  bulk_apply_bypass_acls\n    bulk update bypass_acls\n\n  bulk_apply_bypass_vlan\n    bulk update bypass_vlan\n\n  do_bulk_update_field\n    do_bulk_update_field\n\n  do_bulk_update_field\n    do_bulk_update_field2\n\n  restart_switchport\n    restart_switchport\n\n  do_restart_switchport\n    do_restart_switchport\n\n  reevaluate_access\n    reevaluate_access\n\n  rapid7\n    rapid7\n\n  security_events\n    security_events\n\n  park\n    park\n\n  unpark\n    unpark\n\n  network_graph\n    network_graph\n\n  build_network_graph_info\n    build_network_graph_info\n\n  network_graph_search_builder\n    network_graph_search_builder\n\n  pf_network_graph_node\n    pf_network_graph_node\n\n  map_to_network_graph\n    map_to_network_graph\n\n  add_switch_to_network_graph\n    add_switch_to_network_graph\n\n  add_swith_group_to_network_graph\n    add_swith_group_to_network_graph\n\n  pf_network_graph_switch_info\n    pf_network_graph_switch_info\n\n  get_switch_data\n    get_switch_data\n\n  bulk_import\n    bulk_import\n\n  validate\n    validate\n\n  _do_remove\n    _do_remove\n\n  create_data_update\n    create_data_update",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Nodes.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "node_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/Node"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Nodes.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "node_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Node"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Nodes.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "node_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Node"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/node_categories" : {
         "description" : "pf::UnifiedApi::Controller::NodeCategories",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.NodeCategories.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/NodeCategoriesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/node_categories/search" : {
         "description" : "pf::UnifiedApi::Controller::NodeCategories",
         "post" : {
            "operationId" : "api.v1.NodeCategories.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/NodeCategoriesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/node_category/{node_category_id}" : {
         "description" : "pf::UnifiedApi::Controller::NodeCategories",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.NodeCategories.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "node_category_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/NodeCategory"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/nodes" : {
         "description" : "pf::UnifiedApi::Controller::Nodes\n\n  register\n    register\n\n  deregister\n    deregister\n\n  bulk_register\n    bulk_register\n\n  bulk_init_results\n    bulk_init_results\n\n  bulk_deregister\n    bulk_deregister\n\n  fingerbank_info\n    fingerbank_info\n\n  fingerbank_refresh\n    fingerbank_refresh\n\n  bulk_close_security_events\n    bulk_close_security_events\n\n  close_security_event\n    close_security_event\n\n  create_error_msg\n    create_error_msg\n\n  bulk_reevaluate_access\n    bulk_reevaluate_access\n\n  bulk_fingerbank_refresh\n    bulk_fingerbank_refresh\n\n  post_update\n    post_update\n\n  bulk_restart_switchport\n    bulk_restart_switchport\n\n  bulk_apply_security_event\n    bulk_apply_security_event\n\n  apply_security_event\n    apply_security_event\n\n  bulk_apply_role\n    bulk_apply_role\n\n  bulk_apply_bypass_role\n    bulk_apply_bypass_role\n\n  bulk_apply_bypass_acls\n    bulk update bypass_acls\n\n  bulk_apply_bypass_vlan\n    bulk update bypass_vlan\n\n  do_bulk_update_field\n    do_bulk_update_field\n\n  do_bulk_update_field\n    do_bulk_update_field2\n\n  restart_switchport\n    restart_switchport\n\n  do_restart_switchport\n    do_restart_switchport\n\n  reevaluate_access\n    reevaluate_access\n\n  rapid7\n    rapid7\n\n  security_events\n    security_events\n\n  park\n    park\n\n  unpark\n    unpark\n\n  network_graph\n    network_graph\n\n  build_network_graph_info\n    build_network_graph_info\n\n  network_graph_search_builder\n    network_graph_search_builder\n\n  pf_network_graph_node\n    pf_network_graph_node\n\n  map_to_network_graph\n    map_to_network_graph\n\n  add_switch_to_network_graph\n    add_switch_to_network_graph\n\n  add_swith_group_to_network_graph\n    add_swith_group_to_network_graph\n\n  pf_network_graph_switch_info\n    pf_network_graph_switch_info\n\n  get_switch_data\n    get_switch_data\n\n  bulk_import\n    bulk_import\n\n  validate\n    validate\n\n  _do_remove\n    _do_remove\n\n  create_data_update\n    create_data_update",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Nodes.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/NodesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Nodes.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Node"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/nodes/search" : {
         "description" : "pf::UnifiedApi::Controller::Nodes\n\n  register\n    register\n\n  deregister\n    deregister\n\n  bulk_register\n    bulk_register\n\n  bulk_init_results\n    bulk_init_results\n\n  bulk_deregister\n    bulk_deregister\n\n  fingerbank_info\n    fingerbank_info\n\n  fingerbank_refresh\n    fingerbank_refresh\n\n  bulk_close_security_events\n    bulk_close_security_events\n\n  close_security_event\n    close_security_event\n\n  create_error_msg\n    create_error_msg\n\n  bulk_reevaluate_access\n    bulk_reevaluate_access\n\n  bulk_fingerbank_refresh\n    bulk_fingerbank_refresh\n\n  post_update\n    post_update\n\n  bulk_restart_switchport\n    bulk_restart_switchport\n\n  bulk_apply_security_event\n    bulk_apply_security_event\n\n  apply_security_event\n    apply_security_event\n\n  bulk_apply_role\n    bulk_apply_role\n\n  bulk_apply_bypass_role\n    bulk_apply_bypass_role\n\n  bulk_apply_bypass_acls\n    bulk update bypass_acls\n\n  bulk_apply_bypass_vlan\n    bulk update bypass_vlan\n\n  do_bulk_update_field\n    do_bulk_update_field\n\n  do_bulk_update_field\n    do_bulk_update_field2\n\n  restart_switchport\n    restart_switchport\n\n  do_restart_switchport\n    do_restart_switchport\n\n  reevaluate_access\n    reevaluate_access\n\n  rapid7\n    rapid7\n\n  security_events\n    security_events\n\n  park\n    park\n\n  unpark\n    unpark\n\n  network_graph\n    network_graph\n\n  build_network_graph_info\n    build_network_graph_info\n\n  network_graph_search_builder\n    network_graph_search_builder\n\n  pf_network_graph_node\n    pf_network_graph_node\n\n  map_to_network_graph\n    map_to_network_graph\n\n  add_switch_to_network_graph\n    add_switch_to_network_graph\n\n  add_swith_group_to_network_graph\n    add_swith_group_to_network_graph\n\n  pf_network_graph_switch_info\n    pf_network_graph_switch_info\n\n  get_switch_data\n    get_switch_data\n\n  bulk_import\n    bulk_import\n\n  validate\n    validate\n\n  _do_remove\n    _do_remove\n\n  create_data_update\n    create_data_update",
         "post" : {
            "operationId" : "api.v1.Nodes.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/NodesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/radius_audit_log/{radius_audit_log_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.RadiusAuditLogs.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "radius_audit_log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::RadiusAuditLogs\n\n  cleanup_item\n    cleanup_item",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.RadiusAuditLogs.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "radius_audit_log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/RadiusAuditLog"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.RadiusAuditLogs.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "radius_audit_log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/RadiusAuditLog"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.RadiusAuditLogs.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "radius_audit_log_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/RadiusAuditLog"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/radius_audit_logs" : {
         "description" : "pf::UnifiedApi::Controller::RadiusAuditLogs\n\n  cleanup_item\n    cleanup_item",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.RadiusAuditLogs.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/RadiusAuditLogsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.RadiusAuditLogs.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/RadiusAuditLog"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/radius_audit_logs/search" : {
         "description" : "pf::UnifiedApi::Controller::RadiusAuditLogs\n\n  cleanup_item\n    cleanup_item",
         "post" : {
            "operationId" : "api.v1.RadiusAuditLogs.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/RadiusAuditLogsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/security_event/{security_event_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.SecurityEvents.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "security_event_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::SecurityEvents",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.SecurityEvents.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "security_event_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/SecurityEvent"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.SecurityEvents.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "security_event_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SecurityEvent"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.SecurityEvents.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "security_event_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SecurityEvent"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/security_events" : {
         "description" : "pf::UnifiedApi::Controller::SecurityEvents",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.SecurityEvents.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/SecurityEventsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.SecurityEvents.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SecurityEvent"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/security_events/search" : {
         "description" : "pf::UnifiedApi::Controller::SecurityEvents",
         "post" : {
            "operationId" : "api.v1.SecurityEvents.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/SecurityEventsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/sms_carrier/{sms_carrier_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.SMSCarriers.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "sms_carrier_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::SMSCarriers",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.SMSCarriers.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "sms_carrier_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/SMSCarrier"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.SMSCarriers.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "sms_carrier_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SMSCarrier"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.SMSCarriers.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "sms_carrier_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SMSCarrier"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/sms_carriers" : {
         "description" : "pf::UnifiedApi::Controller::SMSCarriers",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.SMSCarriers.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/SMSCarriersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.SMSCarriers.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SMSCarrier"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/sms_carriers/search" : {
         "description" : "pf::UnifiedApi::Controller::SMSCarriers",
         "post" : {
            "operationId" : "api.v1.SMSCarriers.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/SMSCarriersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/user/{user_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Users.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::User\n\n  create_data_update\n    create_data_update\n\n  cleanup_item\n    Remove the password field from the item\n\n  unassign_nodes\n    unassign user nodes\n\n  security_events\n    security_events\n\n  bulk_register\n    bulk_register\n\n  bulk_deregister\n    bulk_deregister\n\n  bulk_close_security_events\n    bulk_close_security_events\n\n  close_security_events\n    close_security_events\n\n  bulk_apply_security_event\n    bulk_apply_security_event\n\n  bulk_reevaluate_access\n    bulk_reevaluate_access\n\n  bulk_init_results\n    bulk_init_results\n\n  bulk_fingerbank_refresh\n    bulk_fingerbank_refresh\n\n  do_bulk_update_field\n    do_bulk_update_field\n\n  bulk_apply_role\n    bulk_apply_role\n\n  bulk_apply_bypass_role\n    bulk_apply_bypass_role\n\n  bulk_delete\n    bulk_delete\n\n  bulk_import\n    bulk_import",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Users.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/User"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Users.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/User"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Users.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/User"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/user/{user_id}/node/{node_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Users.resource.Users.Nodes.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "node_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Users::Nodes",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Users.resource.Users.Nodes.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "node_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/UsersNode"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Users.resource.Users.Nodes.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "node_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UsersNode"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Users.resource.Users.Nodes.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "node_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UsersNode"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/user/{user_id}/nodes" : {
         "description" : "pf::UnifiedApi::Controller::Users::Nodes",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Users.resource.Users.Nodes.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               },
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UsersNodesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Users.resource.Users.Nodes.create",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UsersNode"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/user/{user_id}/nodes/search" : {
         "description" : "pf::UnifiedApi::Controller::Users::Nodes",
         "post" : {
            "operationId" : "api.v1.Users.resource.Users.Nodes.search",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UsersNodesList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/user/{user_id}/password" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.Users.resource.Password.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::Users::Password\n\n  cleanup_item\n    Remove the password field from the item\n\n  validate\n    validate",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.Users.resource.Password.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/UsersPassword"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.Users.resource.Password.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UsersPassword"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Users.resource.Password.create",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UsersPassword"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.Users.resource.Password.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "in" : "path",
                  "name" : "user_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UsersPassword"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/users" : {
         "description" : "pf::UnifiedApi::Controller::User\n\n  create_data_update\n    create_data_update\n\n  cleanup_item\n    Remove the password field from the item\n\n  unassign_nodes\n    unassign user nodes\n\n  security_events\n    security_events\n\n  bulk_register\n    bulk_register\n\n  bulk_deregister\n    bulk_deregister\n\n  bulk_close_security_events\n    bulk_close_security_events\n\n  close_security_events\n    close_security_events\n\n  bulk_apply_security_event\n    bulk_apply_security_event\n\n  bulk_reevaluate_access\n    bulk_reevaluate_access\n\n  bulk_init_results\n    bulk_init_results\n\n  bulk_fingerbank_refresh\n    bulk_fingerbank_refresh\n\n  do_bulk_update_field\n    do_bulk_update_field\n\n  bulk_apply_role\n    bulk_apply_role\n\n  bulk_apply_bypass_role\n    bulk_apply_bypass_role\n\n  bulk_delete\n    bulk_delete\n\n  bulk_import\n    bulk_import",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.Users.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UsersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.Users.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/User"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/users/search" : {
         "description" : "pf::UnifiedApi::Controller::User\n\n  create_data_update\n    create_data_update\n\n  cleanup_item\n    Remove the password field from the item\n\n  unassign_nodes\n    unassign user nodes\n\n  security_events\n    security_events\n\n  bulk_register\n    bulk_register\n\n  bulk_deregister\n    bulk_deregister\n\n  bulk_close_security_events\n    bulk_close_security_events\n\n  close_security_events\n    close_security_events\n\n  bulk_apply_security_event\n    bulk_apply_security_event\n\n  bulk_reevaluate_access\n    bulk_reevaluate_access\n\n  bulk_init_results\n    bulk_init_results\n\n  bulk_fingerbank_refresh\n    bulk_fingerbank_refresh\n\n  do_bulk_update_field\n    do_bulk_update_field\n\n  bulk_apply_role\n    bulk_apply_role\n\n  bulk_apply_bypass_role\n    bulk_apply_bypass_role\n\n  bulk_delete\n    bulk_delete\n\n  bulk_import\n    bulk_import",
         "post" : {
            "operationId" : "api.v1.Users.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UsersList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/wrix_location/{wrix_location_id}" : {
         "delete" : {
            "description" : "Remove an item",
            "operationId" : "api.v1.WrixLocations.resource.remove",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "wrix_location_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "204" : {
                  "description" : "Item deleted"
               }
            }
         },
         "description" : "pf::UnifiedApi::Controller::WrixLocations",
         "get" : {
            "description" : "Get an item",
            "operationId" : "api.v1.WrixLocations.resource.get",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "wrix_location_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "description" : "Item",
                           "properties" : {
                              "item" : {
                                 "$ref" : "#/components/schemas/WrixLocation"
                              }
                           },
                           "type" : "object"
                        }
                     }
                  },
                  "description" : "Get item"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "patch" : {
            "description" : "Update an item",
            "operationId" : "api.v1.WrixLocations.resource.update",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "wrix_location_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/WrixLocation"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "put" : {
            "description" : "Replace an item",
            "operationId" : "api.v1.WrixLocations.resource.replace",
            "parameters" : [
               {
                  "in" : "path",
                  "name" : "wrix_location_id",
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/WrixLocation"
                     }
                  }
               }
            },
            "responses" : {
               "200" : {
                  "$ref" : "#/components/responses/Message"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/wrix_locations" : {
         "description" : "pf::UnifiedApi::Controller::WrixLocations",
         "get" : {
            "description" : "List items",
            "operationId" : "api.v1.WrixLocations.list",
            "parameters" : [
               {
                  "$ref" : "#/components/parameters/cursor"
               },
               {
                  "$ref" : "#/components/parameters/limit"
               },
               {
                  "$ref" : "#/components/parameters/fields"
               },
               {
                  "$ref" : "#/components/parameters/sort"
               }
            ],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/WrixLocationsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         },
         "post" : {
            "description" : "Create an item",
            "operationId" : "api.v1.WrixLocations.create",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/WrixLocation"
                     }
                  }
               },
               "description" : "Create item"
            },
            "responses" : {
               "201" : {
                  "$ref" : "#/components/responses/Created"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "409" : {
                  "$ref" : "#/components/responses/Duplicate"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      },
      "/wrix_locations/search" : {
         "description" : "pf::UnifiedApi::Controller::WrixLocations",
         "post" : {
            "operationId" : "api.v1.WrixLocations.search",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/Search"
                     }
                  }
               },
               "description" : "Search for items"
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/WrixLocationsList"
                        }
                     }
                  },
                  "description" : "List"
               },
               "400" : {
                  "$ref" : "#/components/responses/BadRequest"
               },
               "422" : {
                  "$ref" : "#/components/responses/UnprocessableEntity"
               }
            }
         }
      }
   },
   "security" : [
      {
         "bearerAuth" : []
      }
   ],
   "servers" : [
      {
         "description" : "Secure PacketFence API",
         "url" : "https://{hostname}:{port}/api/v1",
         "variables" : {
            "hostname" : {
               "default" : "localhost",
               "description" : "Hostname or IP address of the PacketFence API"
            },
            "port" : {
               "default" : 9999,
               "description" : "Port of the PacketFence API"
            }
         }
      },
      {
         "description" : "Insecure PacketFence API",
         "url" : "http://{hostname}:{port}/api/v1",
         "variables" : {
            "hostname" : {
               "default" : "localhost",
               "description" : "Hostname or IP address of the PacketFence API"
            },
            "port" : {
               "default" : 9999,
               "description" : "Port of the PacketFence API"
            }
         }
      }
   ]
}
