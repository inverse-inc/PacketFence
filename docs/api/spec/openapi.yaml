---
components:
  parameters:
    cursor:
      description: The cursor pointer to fetch the data (value should be taken from
        previousCursor and nextCursor)
      in: query
      name: cursor
      required: false
      schema:
        type: string
    fields:
      description: Comma delimited fields that should be added to the resource by
        performing joins. For example, in order to get the IP address of a node when
        calling the nodes endpoints, setting 'ip4log.ip' into this field will provide
        the latest IP address of the device in the 'ip4log.ip' field of every node
        that is returned.
      in: body
      name: fields
      required: false
      schema:
        example:
        - mac
        - pid
        - ip4log.ip
        items:
          type: string
        type: array
    ipset_name:
      description: The name of the ipset to manipulate
      in: path
      name: set_name
      required: true
      schema:
        type: string
    limit:
      description: The maximum amount of entries to get.
      in: query|body
      name: limit
      required: false
      schema:
        type: int
    local:
      description: The local is used to determine if the request should be forwarded
        to the rest of the cluster. A value of '0' forwards the request and either
        a missing or alternate value does not forward the request to the rest of the
        cluster.
      in: query
      name: local
      required: false
      schema:
        default: 0
        type: integer
    search_query:
      description: The JSON encoded search query following the Search schema defined
        in this spec
      in: body
      name: query
      required: true
      schema:
        $ref: '#/components/schemas/Search'
    sort:
      description: A list of fields to sort on along with the ordering way (ASC or
        DESC).
      in: body
      name: sort
      required: false
      schema:
        example:
        - iplog.ip DESC
        - node.detectdate ASC
        items:
          type: string
        type: array
    user_id:
      description: The user ID
      in: path
      name: user_id
      required: true
      schema:
        type: string
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
      description: Bad Request. One of the submitted parameters has an invalid format
    Created:
      description: A response that contains the location of a created resource
      headers:
        Location:
          description: The location of the created resource
          schema:
            type: string
    DhcpInterfaceInit:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DhcpInterfaceStats'
      description: A response that contains interface statistics after initialization
    DhcpInterfaceStats:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DhcpInterfaceStats'
      description: A response that contains interface statistics
    DhcpMacIp:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DhcpMacIp'
      description: A response that contains the relational MAC address and IPv4 address
    DhcpMacResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DhcpMacResponse'
      description: A response that contains a status on success or failure with the
        MAC address
    DhcpNetworkResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DhcpNetworkResponse'
      description: A response that contains a status on success or failure with the
        Network IPv4 address
    Duplicate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
      description: An attempt to add a duplicate entry was stopped. Entry already
        exists and should be modified instead of created.
    ErrorsWithMessage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsWithMessage'
      description: A response that contains a message along with explanatory error
        messages tied to fields
    Forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
      description: Forbidden access to the resource because of insufficient access
        rights
    IpsetIp:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IpsetIp'
      description: A response that contains a status along with the IPv4 address
    IpsetMac:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IpsetMac'
      description: A response that contains a status along with the MAC address
    Message:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
      description: A response that contains a simple message
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsWithMessage'
      description: Request cannot be processed because the resource could not be found.
    QueueStats:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QueueStats'
      description: A response that contains the pfqueue stats
    ServiceDisable:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceDisable'
      description: A response that contains a simple message
    ServiceEnable:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceEnable'
      description: A response that contains a simple message
    ServiceRestart:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceRestart'
      description: A response that contains a simple message
    ServiceStart:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceStart'
      description: A response that contains a simple message
    ServiceStop:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceStop'
      description: A response that contains a simple message
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
      description: Unauthorized access because of invalid credentials
    UnprocessableEntity:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsWithMessage'
      description: Request cannot be processed because the resource has failed validation
        after the modification.
  schemas:
    Class:
      properties:
        auto_enable:
          type: string
        button_text:
          type: string
        delay_by:
          type: integer
        description:
          type: string
        enabled:
          type: string
        external_command:
          type: string
        grace_period:
          type: integer
        max_enable_url:
          type: string
        max_enables:
          type: integer
        priority:
          type: integer
        redirect_url:
          type: string
        target_category:
          type: string
        template:
          type: string
        vclose:
          type: integer
        vid:
          type: integer
        vlan:
          type: string
        window:
          type: string
      type: object
    ClassesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: Items
            items:
              $ref: '#/components/schemas/Class'
            type: array
        type: object
    ClusterServer:
      properties:
        host:
          type: string
        management_ip:
          type: string
    ClusterServers:
      properties:
        items:
          description: Items
          items:
            $ref: '#/components/schemas/ClusterServer'
          type: array
      type: object
    ConfigAdminRole:
      properties:
        actions:
          description: Actions
          items:
            description: Action
            type: string
          type: array
        allowed_access_durations:
          description: A comma seperated list of access durations available to the
            admin user. If none are provided then the default access durations are
            used
          type: string
        allowed_access_levels:
          description: List of access levels available to the admin user. If none
            are provided then all access levels are available
          items:
            description: List of access levels available to the admin user. If none
              are provided then all access levels are available
            type: string
          type: array
        allowed_actions:
          description: List of actions available to the admin user. If none are provided
            then all actions are available
          items:
            description: List of actions available to the admin user. If none are
              provided then all actions are available
            type: string
          type: array
        allowed_node_roles:
          description: List of roles available to the admin user to assign to a node.
            If none are provided then all roles are available
          items:
            description: List of roles available to the admin user to assign to a
              node. If none are provided then all roles are available
            type: string
          type: array
        allowed_roles:
          description: List of roles available to the admin user to assign to a user.
            If none are provided then all roles are available
          items:
            description: List of roles available to the admin user to assign to a
              user. If none are provided then all roles are available
            type: string
          type: array
        allowed_unreg_date:
          description: The maximal unregistration date that can be set.
          type: string
        description:
          description: Description
          type: string
        id:
          description: Role Name
          type: string
      required:
      - id
      - description
      type: object
    ConfigAdminRolesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigAdminRole'
            type: array
        type: object
      description: List
    ConfigBase:
      discriminator:
        propertyName: type
      oneOf:
      - properties:
          pass:
            description: The webservices password
            type: string
          user:
            description: The webservices user name
            type: string
        type: object
      - properties:
          dhcpservers:
            description: Comma-delimited list of DHCP servers.
            type: string
          domain:
            description: Domain name of PacketFence system. Changing this requires
              to restart haproxy-portal.
            type: string
          hostname:
            description: Hostname of PacketFence system. This is concatenated with
              the domain in Apache rewriting rules and therefore must be resolvable
              by clients. Changing this requires to restart haproxy-portal.
            type: string
          timezone:
            description: System's timezone in string format. List generated from Perl
              library DataTime::TimeZoneWhen left empty, it will use the timezone
              of the server
            type: string
        type: object
      - properties:
          connection_type_change_detection:
            description: Will identify if a device switches from wired to wireless
              (or the opposite) and send an e-mail with these changes.This can help
              detect MAC spoofing.
            type: string
          dhcp_rate_limiting:
            description: Will rate-limit DHCP packets that contain the same information.For
              example, a DHCPREQUEST for the same MAC/IP will only be processed once
              in the timeframe configured below.This is independant of the DHCP server/relay
              handling the packet and is only based on the IP, MAC Address and DHCP
              type inside the packet.A value of 0 will disable the rate limitation.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          dhcpdetector:
            description: If enabled, PacketFence will monitor DHCP-specific items
              such as rogue DHCP services, DHCP-based OS fingerprinting, computername/hostname
              resolution, and (optionnally) option-82 location-based information.
              The monitored DHCP packets are DHCPDISCOVERs and DHCPREQUESTs - both
              are broadcasts, meaning a span port is not necessary.  This feature
              is highly recommended if the internal network is DHCP-based.
            type: string
          dhcpoption82logger:
            description: 'If enabled PacketFence will monitor DHCP option82 location-based
              information. This feature is only available if the dhcpdetector is activated.
              <a target="_blank" href="/static/doc/PacketFence_Installation_Guide.html#_dhcp_option_82"><i
              class="icon-question-circle-o"></i></a> '
            type: string
          force_listener_update_on_ack:
            description: This will only do the iplog update and other DHCP related
              task on a DHCPACK.You need to make sure the UDP reflector is in place
              so this works on the production network.This is implicitly activated
              on registration interfaces on which dhcpd runs.
            type: string
          hostname_change_detection:
            description: Will identify hostname changes and send an e-mail with these
              changes.This can help detect MAC spoofing.
            type: string
          interfaceSNAT:
            description: Choose interface(s) where you want to enable snat for passthrough
              (by default it's the management interface)
            type: string
          rogue_dhcp_detection:
            description: Tries to identify Rogue DHCP Servers and triggers the 1100010
              violation if one is found. This feature is only available if the dhcpdetector
              is activated.
            type: string
          rogueinterval:
            description: When rogue DHCP server detection is enabled, this parameter
              defines how often to email administrators.  With its default setting
              of 10, it will email administrators the details of the previous 10 DHCP
              offers.
            type: integer
        type: object
      - properties:
          interception_proxy:
            description: If enabled, we will intercept proxy request on the specified
              ports to forward to the captive portal.
            type: string
          interception_proxy_port:
            description: Comma-delimited list of port used by proxy interception.
            type: string
          isolation_passthrough:
            description: When enabled, PacketFence uses pfdns if you defined <i>Isolation
              Passthroughs</i> to allow trapped devices in isolation state to reach
              web sites.Modifying this parameter requires to restart pfdns and iptables
              to be fully effective.
            type: string
          isolation_passthroughs:
            description: 'Comma-delimited list of domains to allow access from the
              isolation VLAN.If no port is specified for the domain (ex: example.com),
              it opens TCP 80 and 443.You can specify a specific port to open (ex:
              example.com:tcp:25) which opens port 25 in TCP. When no protocol is
              specified (ex: example.com:25), this opens the port for both the UDP
              and TCP protocol.You can specify the same domain with a different port
              multiple times and they will be combined.The configuration parameter
              <i>isolation_passthrough</i> must be enabled for passthroughs to be
              effective.Modifying this parameter requires to restart pfdns to be effective.'
            type: string
          passthrough:
            description: 'When enabled, PacketFence uses pfdns if you defined <i>Passthroughs</i>
              or Apache mod-proxy if you defined <i>Proxy passthroughs</i> to allow
              trapped devices to reach web sites.Modifying this parameter requires
              to restart pfdns and iptables to be fully effective. <a target="_blank"
              href="/static/doc/PacketFence_Installation_Guide.html#_passthroughs_2"><i
              class="icon-question-circle-o"></i></a> '
            type: string
          passthroughs:
            description: 'Comma-delimited list of domains to allow access from the
              registration VLAN.If no port is specified for the domain (ex: example.com),
              it opens TCP 80 and 443.You can specify a specific port to open (ex:
              example.com:tcp:25) which opens port 25 in TCP. When no protocol is
              specified (ex: example.com:25), this opens the port for both the UDP
              and TCP protocol.You can specify the same domain with a different port
              multiple times and they will be combined.The configuration parameter
              <i>passthrough</i> must be enabled for passthroughs to be effective.These
              passthroughs are only effective in registration networks, for passthroughs
              in isolation, use fencing.isolation_passthroughs.Modifying this parameter
              requires to restart pfdns to be effective.'
            type: string
          proxy_passthroughs:
            description: 'Comma-delimited list of domains to be used with apache passthroughs.
              The configuration parameter <i>passthrough</i> must be enabled for passthroughs
              to be effective. <a target="_blank" href="/static/doc/PacketFence_Installation_Guide.html#_mod_proxy_passthroughs"><i
              class="icon-question-circle-o"></i></a> '
            type: string
          range:
            description: Address ranges/CIDR blocks that PacketFence will monitor/detect/trap
              on.  Gateway, network, and broadcast addresses are ignored. Comma-delimited
              entries should be of the form <ul><li>a.b.c.0/24</li><li>a.b.c.0-255</li><li>a.b.c.0-a.b.c.255</li><li>a.b.c.d</li></ul>
            type: string
          wait_for_redirect:
            description: How many seconds the webservice should wait before deassociating
              or reassigning VLAN. If we don't wait, the device may switch VLAN before
              it has a chance to load the redirection page.
            type: integer
          whitelist:
            description: Comma-delimited list of MAC addresses that are immune to
              isolation. In inline Level 2 enforcement, the firewall is opened for
              them as if they were registered. This <i>feature</i> will probably be
              reworked in the future.
            type: string
        type: object
      - properties:
          admin_csp_security_headers:
            description: (Experimental) Enforce Content-Security-Policy (CSP) HTTP
              response header in admin interface
            type: string
          disable_pf_domain_auth:
            description: Disable Active-Directory domain configuration from within
              PacketFence
            type: string
          hash_passwords:
            description: The algorithm used to hash the passwords in the database.This
              will only affect newly created or reset passwords.
            type: string
          hashing_cost:
            description: The cost factor to apply to the password hashing if applicable.Currently
              only applies to bcrypt.
            type: integer
          language:
            description: Language choice for the communication with administrators
            type: string
          ldap_attributes:
            description: List of LDAP attributes that can be used in the sources configuration
            type: string
          locationlog_close_on_accounting_stop:
            description: Close the locationlog for a node on accounting stop
            type: string
          multihost:
            description: Ability to manage all active devices from a same switch port
            type: string
          normalize_radius_machine_auth_username:
            description: Use the RADIUS username instead of the TLS certificate common
              name when doing machine authentication.
            type: string
          ntlm_redis_cache:
            description: Enables a Redis driven cache for NTLM authentication. In
              order for this to work, you need to setup proper NT hash syncronization
              between your PacketFence server and your AD.Refer to the Administration
              guide for more details.Applying this requires a restart of radiusd.
            type: string
          pffilter_processes:
            description: Amount of pffilter processes to start
            type: string
          portal_csp_security_headers:
            description: (Experimental) Enforce Content-Security-Policy (CSP) HTTP
              response header in captive portal interface
            type: string
          radius_attributes:
            description: List of RADIUS attributes that can be used in the sources
              configuration
            type: string
          record_accounting_in_sql:
            description: Record the accounting data in the SQL tables.Requires a restart
              of radiusd to be effective.
            type: string
          scan_on_accounting:
            description: advanced.scan_on_accounting
            type: string
          source_to_send_sms_when_creating_users:
            description: The source to use to send an SMS when creating a user
            type: string
          sso_on_access_reevaluation:
            description: Trigger Single-Sign-On (Firewall SSO) on access reevaluation
            type: string
          sso_on_accounting:
            description: Trigger Single-Sign-On (Firewall SSO) on accounting
            type: string
          sso_on_dhcp:
            description: Trigger Single-Sign-On (Firewall SSO) on dhcp
            type: string
          timing_stats_level:
            description: Level of timing stats to keep - 0 is the lowest - 10 the
              highest amount to logDo not change unless you know what you are doing
            type: integer
          update_iplog_with_accounting:
            description: Use the information included in the accounting to update
              the iplog
            type: string
        type: object
      - properties:
          access_duration_choices:
            description: List of all the choices offered in the access duration action
              of an authentication source.
            type: string
          default_access_duration:
            description: This is the default access duration value selected in the
              dropdown. The value must be part of the above list of access duration
              choices.
            type: string
          default_access_duration_add:
            description: Duration
            properties:
              day_base:
                description: Relative to the beginning of the day
                type: string
              duration:
                description: Duration
                properties:
                  interval:
                    description: Interval
                    type: integer
                  unit:
                    description: Unit
                    type: string
                type: object
              example:
                description: Example
                type: string
              extended_duration:
                description: and
                properties:
                  interval:
                    description: Interval
                    type: integer
                  operator:
                    description: Operator
                    type: string
                  unit:
                    description: Unit
                    type: string
                type: object
              period_base:
                description: Relative to the beginning of the period
                type: string
            type: object
        type: object
      - properties:
          enabled:
            description: Enable MSE
            type: string
          pass:
            description: Password for MSE service
            type: string
          url:
            description: URL of MSE service
            type: string
          user:
            description: Username for MSE service
            type: string
        type: object
      - properties:
          eap_authentication_types:
            description: Supported EAP Authentication Methods
            items:
              description: Supported EAP Authentication Methods
              type: string
            type: array
          eap_fast_authority_identity:
            description: EAP-FAST authority ID
            type: string
          eap_fast_opaque_key:
            description: EAP-FAST Opaque Key (32 randomized bytes)
            type: string
        type: object
      - properties:
          emailaddr:
            description: Email address to which notifications of rogue DHCP servers,
              violations with an action of <i>email</i>, or any other PacketFence-related
              message goes to.
            type: string
          fromaddr:
            description: Email address from which notifications of rogue DHCP servers,
              violations with an action of <i>email</i>, or any other PacketFence-related
              message are sent.Empty means <code>root@&lt;server-domain-name&gt;</code>.
            type: string
          smtp_encryption:
            description: Encryption style when connecting to the SMTP server.
            type: string
          smtp_password:
            description: The password used to connect to the SMTP server
            type: string
          smtp_port:
            description: 'The port of the SMTP server. If the port is set to 0 then
              port is calculated by the encryption type. none: 25, ssl: 465, starttls:
              587'
            type: string
          smtp_timeout:
            description: The timeout in seconds for sending an email
            type: string
          smtp_username:
            description: The username used to connect to the SMTP server
            type: string
          smtp_verifyssl:
            description: Verify SSL connection
            type: string
          smtpserver:
            description: Server through which to send messages to the above emailaddr.  The
              default is localhost - be sure you're running an SMTP host locally if
              you don't change it!
            type: string
          subjectprefix:
            description: Subject prefix for email notifications of rogue DHCP servers,
              violations with an action of <i>email</i>, or any other PacketFence-related
              message.
            type: string
        type: object
      - properties:
          bounce_duration:
            description: Delay to wait between the shut / no-shut on a port. Some
              OS need a higher value than others. Default should be reasonable for
              almost every OS but is too long for the usual proprietary OS.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          trap_limit:
            description: Controls whether or not the trap limit feature is enabled.
              Trap limiting is a way to limit the damage done by malicious users or
              misbehaving switch that sends too many traps to PacketFence causing
              it to be overloaded. Trap limiting is controlled by the trap limit threshold
              and trap limit action parameters. Default is enabled.
            type: string
          trap_limit_action:
            description: Action that PacketFence will take if the snmp_traps.trap_limit_threshold
              is reached. Defaults to none. email will send an email every hour if
              the limit's still reached. shut will shut the port on the switch and
              will also send an email even if email is not specified.
            items:
              description: Action that PacketFence will take if the snmp_traps.trap_limit_threshold
                is reached. Defaults to none. email will send an email every hour
                if the limit's still reached. shut will shut the port on the switch
                and will also send an email even if email is not specified.
              type: string
            type: array
          trap_limit_threshold:
            description: Maximum number of SNMP traps that a switchport can send to
              PacketFence within a minute without being flagged as DoS. Defaults to
              100.
            type: integer
        type: object
      - properties:
          category:
            description: Default category to assign to imported nodes.
            type: string
          pid:
            description: Default pid value to assign to imported nodes.
            type: string
          voip:
            description: By default is an imported node a Voice over IP device or
              not?
            type: string
        type: object
      - properties:
          detection_mecanism_bypass:
            description: Bypass the captive-portal detection mechanism of some browsers
              / end-points by proxying the detection request.
            type: string
          detection_mecanism_urls:
            description: Comma-delimited list of URLs known to be used by devices
              to detect the presence of a captive portal and trigger their captive
              portal mechanism.
            type: string
          image_path:
            description: This is the path where the gif is on the webserver to detect
              if the network accesshas been enabled.
            type: string
          loadbalancers_ip:
            description: 'If the captive portal is put behind load-balancer(s) that
              act at Layer 7 (HTTP level) effectively doing reverse proxying then
              the captive portal no longer sees the IP of the node trying to access
              the portal. In that case, the load-balancers must do SSL offloading
              and add a X-Forwarded-By header in the HTTP traffic they forward to
              PacketFence. Most do by default. Then in this parameter you must specify
              the IP of the various load balancers. This will instruct the captive
              portal to look for client IPs in the X-Forwarded-For instead of the
              actual TCP session when it matches an IP in the list. Format is a comma
              separated list of IPs. Note: Apache access log format is not changed
              to automatically log the X-Forwarded-By header. Modify conf/httpd.conf.d/captive-portal-common.conf
              to use load balanced combined instead of combined in CustomLog statement.'
            type: string
          network_detection:
            description: Enable the automatic network detection feature for registration
              auto-redirect
            type: string
          network_detection_initial_delay:
            description: The amount of time before network connectivity detection
              is started.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          network_detection_ip:
            description: This IP is used as the webserver who hosts the common/network-access-detection.gif
              which is used to detect if network access was enabled. It cannot be
              a domain name since it is used in registration or quarantine where DNS
              is blackholed. It is recommended that you allow your users to reach
              your PacketFence server and put your LAN's PacketFence IP. By default
              we will make this reach PacketFence's website as an easy solution.
            type: string
          network_detection_retry_delay:
            description: The amount of time between network connectivity detection
              checks.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          network_redirect_delay:
            description: How long to display the progress bar during trap release.
              Default value is based on VLAN enforcement techniques. Inline enforcement
              only users could lower the value.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          other_domain_names:
            description: Other domain names under which the captive portal responds.Requires
              to restart haproxy-portal to be fully effective.
            type: string
          rate_limiting:
            description: Temporarily deny access to a user that performs too many
              requests on the captive portal on invalid URLsRequires to restart haproxy-portal
              in order to apply the change.
            type: string
          rate_limiting_threshold:
            description: Amount of requests on invalid URLs after which the rate limiting
              will kick in for this device.Requires to restart haproxy-portal in order
              to apply the change.
            type: integer
          request_timeout:
            description: The amount of seconds before a request times out in the captive
              portal
            type: integer
          secure_redirect:
            description: Force the captive portal to use HTTPS for all portal clients.Note
              that clients will be forced to use HTTPS on all URLs.This requires a
              restart of the httpd.portal process to be fully effective.
            type: string
          status_only_on_production:
            description: When enabled the /status page will only be available on theproduction
              network. By default this is disabled
            type: string
          wispr_redirection:
            description: Enable or disable WISPr redirection capabilities on the captive-portal
            type: string
        type: object
      - properties:
          accounting:
            description: Should we handle accouting data for inline clients? This
              controls inline accouting tasks in pfcron.
            type: string
          interfaceSNAT:
            description: Comma-delimited list of interfaces used to SNAT inline level
              2 traffic
            type: string
          layer3_accounting_session_timeout:
            description: Accounting sessions created by pfbandwidthd that haven't
              been updated for more than this amount of seconds will be considered
              inactive. This should be higher than the interval at which pfcron runs
              Defaults to 300 - 5 minutes
            type: string
          layer3_accounting_sync_interval:
            description: Interval at which pfbandwidthd should dump collected information
              into the database. This should be lower than the interval at which pfcron
              runs. Defaults to 41 seconds
            type: string
          ports_redirect:
            description: Ports to intercept and redirect for trapped and unregistered
              systems.  Defaults to 80/tcp (HTTP), 443/tcp (HTTPS). Redirecting 443/tcp
              (SSL) will work, although users might get certificate errors if you
              didn't install a valid certificate or if you don't use DNS (although
              IP-based certificates supposedly exist). Redirecting 53/udp (DNS) seems
              to have issues and is also not recommended.
            type: string
          should_reauth_on_vlan_change:
            description: Should have to reauthenticate the node if vlan change
            type: string
        type: object
      - properties:
          lease_length:
            description: Lease length (in seconds) when a device is in parking
            type: integer
          place_in_dhcp_parking_group:
            description: Place the device in the DHCP parking group when it is detected
              doing parking
            type: string
          show_parking_portal:
            description: Show the parking portal to the device instead of the usual
              portal
            type: string
          threshold:
            description: The threshold (in seconds) after which a device will be placed
              in parking.A value of 0 deactivates the parking detection.The detection
              works by looking at the time in seconds a device has been in the registration
              role and comparing it with this threshold.
            type: integer
        type: object
      - properties:
          api-frontend:
            description: Should api-frontend be managed by PacketFence?
            type: string
          fingerbank-collector:
            description: Should the fingerbank-collector be managed by PacketFence?
            type: string
          haproxy-db:
            description: Should haproxy-db be started? Keep enabled unless you know
              what you're doing.
            type: string
          haproxy-portal:
            description: Should haproxy-portal be started? Keep enabled unless you
              know what you're doing.
            type: string
          httpd_aaa:
            description: Should httpd.aaa be started? Keep enabled unless you know
              what you're doing.
            type: string
          httpd_admin:
            description: Should httpd.admin be started? Keep enabled unless you know
              what you're doing.
            type: string
          httpd_collector:
            description: Should httpd.collector be started? Keep enabled unless you
              know what you're doing.
            type: string
          httpd_dispatcher:
            description: Should httpd.dispatcher be started? Keep enabled unless you
              know what you're doing.
            type: string
          httpd_parking:
            description: Should httpd.parking be started? Keep enabled unless you
              know what you're doing.
            type: string
          httpd_portal:
            description: Should httpd.portal be started? Keep enabled unless you know
              what you're doing.
            type: string
          httpd_proxy:
            description: Should httpd.proxy be started? Keep enabled unless you know
              what you're doing.
            type: string
          httpd_webservices:
            description: Should httpd.webservices be started? Keep enabled unless
              you know what you're doing.
            type: string
          iptables:
            description: Should iptables be managed by PacketFence? Keep enabled unless
              you know what you're doing.
            type: string
          keepalived:
            description: Should keepalived be started? Keep enabled unless you know
              what you're doing.
            type: string
          netdata:
            description: Should netdata be managed by PacketFence?
            type: string
          pfbandwidthd:
            description: Should pfbandwidthd be managed by PacketFence?
            type: string
          pfcron:
            description: Should pfcron be started? Keep enabled unless you know what
              you're doing.
            type: string
          pfdhcp:
            description: Should pfdhcp be managed by PacketFence?
            type: string
          pfdhcplistener:
            description: Should pfdhcplistener be started? Keep enabled unless you
              know what you're doing.
            type: string
          pfdhcplistener_packet_size:
            description: Set the max size of DHCP packetsDo not change unless you
              know what you are doing
            type: integer
          pfdns:
            description: Should pfdns be managed by PacketFence?
            type: string
          pffilter:
            description: Should pffilter be managed by PacketFence?
            type: string
          pfipset:
            description: Should pfipset be managed by PacketFence?
            type: string
          pfperl-api:
            description: Should pfperl-api be started? Keep enabled unless you know
              what you're doing.
            type: string
          pfqueue:
            description: Should pfqueue be started? Keep enabled unless you know what
              you're doing.
            type: string
          pfsso:
            description: Should pfsso be managed by PacketFence?
            type: string
          pfstats:
            description: Should pfstats be managed by PacketFence?
            type: string
          radiusd:
            description: Should radiusd be managed by PacketFence?
            type: string
          radsniff:
            description: Should radsniff be managed by PacketFence?
            type: string
          redis_cache:
            description: Should redis for caching be started? Keep enabled unless
              you know what you're doing.
            type: string
          redis_ntlm_cache:
            description: Should the redis NTLM cache be started? Use this if you are
              enabling an Active Directory NTLM cache.
            type: string
          redis_queue:
            description: Should redis be started? Keep enabled unless you know what
              you're doing.
            type: string
          routes:
            description: Should routes be managed by PacketFence?
            type: string
          snmptrapd:
            description: Should snmptrapd be started? Keep enabled unless you know
              what you're doing.
            type: string
          tc:
            description: Should traffic shaping be managed by PacketFence?
            type: string
          winbindd:
            description: Should winbindd be started? Keep enabled unless you know
              what you're doing.
            type: string
        type: object
      - properties:
          api_key:
            description: OPSWAT Metadefender Cloud Scanner API key
            type: string
          query_url_hash:
            description: OPSWAT Metadefender Cloud Scanner URL for hash queries
            type: string
        type: object
      - properties:
          autoconfig:
            description: Enable or Disable the generation of a pre-built XML mobile
              configuration profile for iPhone, iPad, or iPod users
            type: string
          category:
            description: Apply to node that are members of the following category
            type: string
          certificate:
            description: Path of the ca certificate
            type: string
          ssid:
            description: The hidden SSID where the user should connect to after registration
            type: string
        type: object
      - properties:
          db:
            description: Name of the MariaDB database used by PacketFence.
            type: string
          host:
            description: Server the MariaDB server is running on.
            type: string
          pass:
            description: Password for the MariaDB database used by PacketFence.
            type: string
          port:
            description: Port the MariaDB server is running on.
            type: integer
          user:
            description: Username of the account with access to the MariaDB database
              used by PacketFence.
            type: string
        type: object
      - properties:
          auth_on_management:
            description: Process RADIUS authentication requests on the management
              server (the current load balancer).Disabling it will make the management
              server only proxy requests to other servers.Useful if your load balancer
              cannot handle both tasks.Changing this requires to restart radiusd.
            type: string
          centralized_deauth:
            description: Centralize the deauthentication to the management node of
              the cluster.
            type: string
          conflict_resolution_threshold:
            description: Defines the amount of seconds after which pfcron attempts
              to resolve a configuration version conflict between cluster members.For
              example, if this is set to 5 minutes, then a resolution will be attempted
              when the members will be detected running a different version for more
              than 5 minutes.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          dns_on_vip_only:
            description: Set the name server option in DHCP replies to point only
              to the VIP in cluster mode rather than to all servers in the cluster.
            type: string
          galera_replication:
            description: Whether or not to activate galera cluster when using a cluster
            type: string
          galera_replication_password:
            description: Defines the replication password to be used for the MariaDB
              Galera cluster replication
            type: string
          galera_replication_username:
            description: Defines the replication username to be used for the MariaDB
              Galera cluster replication
            type: string
          password:
            description: Shared KEY for VRRP protocol (must be the same on all members).
            type: string
          virtual_router_id:
            description: The virtual router id for keepalive. Leave untouched unless
              you have another keepalive cluster in this network. Must be between
              1 and 255.
            type: string
          vrrp_unicast:
            description: Enable keepalived in unicast mode instead of multicast
            type: string
        type: object
      - properties:
          aaa:
            description: httpd listening port for AAA webservice
            type: string
          admin:
            description: Port the administrative interface listens on.
            type: string
          collector:
            description: Port of the collector webservice.
            type: string
          httpd_portal_modstatus:
            description: Port the mod_status for httpd.portal listens on.
            type: string
          soap:
            description: Port of the soap webservice.
            type: string
          unifiedapi:
            description: port to use for accessing the Unified API
            type: string
        type: object
      - properties:
          innodb_additional_mem_pool_size:
            description: The innodb_additional_mem_pool_size MariaDB configuration
              attribute (in MB). Only change if you know what you are doing. Will
              only affect a locally running MariaDB server.
            type: integer
          innodb_buffer_pool_size:
            description: The innodb_buffer_pool_size MariaDB configuration attribute
              (in MB). Only change if you know what you are doing. Will only affect
              a locally running MariaDB server.
            type: integer
          key_buffer_size:
            description: The key_buffer_size MariaDB configuration attribute (in MB).
              Only change if you know what you are doing. Will only affect a locally
              running MariaDB server.
            type: integer
          max_allowed_packet:
            description: The max_allowed_packet MariaDB configuration attribute (in
              MB). Only change if you know what you are doing. Will only affect a
              locally running MariaDB server.
            type: integer
          max_connections:
            description: The max_connections MariaDB configuration attribute. Only
              change if you know what you are doing. Will only affect a locally running
              MariaDB server.
            type: integer
          query_cache_size:
            description: The query_cache_size MariaDB configuration attribute. Only
              change if you know what you are doing. Will only affect a locally running
              MariaDB server.
            type: integer
          table_cache:
            description: The table_cache MariaDB configuration attribute. Only change
              if you know what you are doing. Will only affect a locally running MariaDB
              server.
            type: integer
          thread_cache_size:
            description: The thread_cache_size MariaDB configuration attribute. Only
              change if you know what you are doing. Will only affect a locally running
              MariaDB server.
            type: integer
          thread_concurrency:
            description: The thread_concurrency MariaDB configuration attribute. Only
              change if you know what you are doing. Will only affect a locally running
              MariaDB server.
            type: integer
        type: object
    ConfigBasesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigBase'
            type: array
        type: object
      description: List
    ConfigBillingTier:
      properties:
        access_duration:
          description: The access duration of the devices that use this tier.
          properties:
            interval:
              description: Interval
              type: integer
            unit:
              description: Unit
              type: string
          type: object
        description:
          description: A description of the billing tier
          type: string
        id:
          description: Billing Tier
          type: string
        name:
          description: The short name of the billing tier
          type: string
        price:
          description: The price that will be charged to the customer
          type: string
        role:
          description: The target role of the devices that use this tier.
          type: string
        use_time_balance:
          description: Check this box to have the access duration be a real time usage.<br/>This
            requires a working accounting configuration.
          type: string
      required:
      - id
      - name
      - description
      - price
      - role
      - access_duration
      type: object
    ConfigBillingTiersList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigBillingTier'
            type: array
        type: object
      description: List
    ConfigCertificate:
      properties:
        ca:
          description: The CA certficate for the resource (if applicable)
          type: string
        certificate:
          description: The server certficate for the resource in x509 PEM encoded
            format
          type: string
        intermediate_cas:
          description: The list of certificate authorities for the server certificate
          items:
            type: string
          type: array
        lets_encrypt:
          description: Whether or not Let's Encrypt is enabled for the certificate
            resource
          enum:
          - enabled
          - disabled
          type: string
        private_key:
          description: The RSA server key for the resource in PEM encoded format
          type: string
      type: object
    ConfigCertificateCSR:
      properties:
        common_name:
          description: The common name for the certificate
          type: string
        country:
          description: The country for the certificate
          type: string
        locality:
          description: The locality for the certificate
          type: string
        organization_name:
          description: The organization name for the certificate
          type: string
        state:
          description: The state for the certificate
          type: string
      type: object
    ConfigCertificateDetails:
      properties:
        common_name:
          description: The common name of the certificate
          type: string
        issuer:
          description: The issuer of the certificate
          type: string
        not_after:
          description: The date until which the certificate can be used
          type: string
        not_before:
          description: The start date at which the certificate can be used
          type: string
        serial:
          description: The serial of the certificate
          type: string
        subject:
          description: The subject of the certificate
          type: string
    ConfigCertificateInfo:
      properties:
        ca:
          $ref: '#/components/schemas/ConfigCertificateDetails'
          description: The CA certficate for the resource (if applicable)
          type: object
        cert_key_match:
          $ref: '#/components/schemas/ConfigCertificateReturnValue'
          description: Information about whether or not the certificate and private
            key match
          type: object
        certificate:
          $ref: '#/components/schemas/ConfigCertificateDetails'
          description: The server certficate for the resource
          type: object
        chain_is_valid:
          $ref: '#/components/schemas/ConfigCertificateReturnValue'
          description: Information about whether or not the certificate chain is valid
          type: object
        intermediate_cas:
          description: The list of certificate authorities for the server certificate
          items:
            $ref: '#/components/schemas/ConfigCertificateDetails'
          type: array
      type: object
    ConfigCertificateLetsEncrypt:
      properties:
        common_name:
          description: The common name for the certificate
          type: string
      type: object
    ConfigCertificateReturnValue:
      properties:
        result:
          description: The value (usually error or success message)
          type: string
        success:
          description: Whether or not the operation has succeeded
          type: boolean
    ConfigConnectionProfile:
      properties:
        access_registration_when_registered:
          description: This allows already registered users to be able to re-register
            their device by first accessing the status page and then accessing the
            portal. This is useful to allow users to extend their access even though
            they are already registered.
          type: string
        advanced_filter:
          description: Advanced filter
          type: string
        always_use_redirecturl:
          description: Under most circumstances we can redirect the user to the URL
            he originally intended to visit. However, you may prefer to force the
            captive portal to redirect the user to the redirection URL.
          type: string
        autoregister:
          description: This activates automatic registation of devices for the profile.
            Devices will not be shown a captive portal and RADIUS authentication credentials
            will be used to register the device. This option only makes sense in the
            context of an 802.1x authentication.
          type: string
        billing_tiers:
          description: Billing tiers
          items:
            description: Billing tier
            type: string
          type: array
        block_interval:
          description: The amount of time a user is blocked after reaching the defined
            limit for login, sms request and sms pin retry.
          properties:
            interval:
              description: Interval
              type: integer
            unit:
              description: Unit
              type: string
          type: object
        default_psk_key:
          description: This is the default PSK key when you enable DPSK on this connection
            profile. The minimum length is eight characters.
          type: string
        description:
          description: Profile Description
          type: string
        device_registration:
          description: Device registration
          type: string
        dot1x_recompute_role_from_portal:
          description: When enabled, PacketFence will not use the role initialy computed
            on the portal but will use the dot1x username to recompute the role.
          type: string
        dot1x_unset_on_unmatch:
          description: When enabled, PacketFence will unset the role of the device
            if no authentication sources returned one.
          type: string
        dpsk:
          description: This enables the Dynamic PSK feature on this connection profile.
            It means that the RADIUS server will answer requests with specific attributes
            like the PSK key to use to connect on the SSID.
          type: string
        filter:
          description: Filters
          items:
            description: Filter
            properties:
              match:
                description: Match
                type: string
              type:
                description: Type
                type: string
            type: object
          type: array
        filter_match_style:
          description: Filter match style
          type: string
        id:
          description: A profile id can only contain alphanumeric characters, dashes,
            period and or underscores.
          type: string
        locale:
          description: Locales
          items:
            description: Locale
            type: string
          type: array
        login_attempt_limit:
          description: Limit the number of login attempts. A value of 0 disables the
            limit.
          type: integer
        logo:
          description: Logo
          type: string
        mac_auth_recompute_role_from_portal:
          description: When enabled, PacketFence will not use the role initialy computed
            on the portal but will use an authorize source if defined to recompute
            the role.
          type: string
        preregistration:
          description: This activates preregistration on the connection profile. Meaning,
            instead of applying the access to the currently connected device, it displays
            a local account that is created while registering. Note that activating
            this disables the on-site registration on this connection profile. Also,
            make sure the sources on the connection profile have "Create local account"
            enabled.
          type: string
        provisioners:
          description: Provisioners
          items:
            description: Provisioner
            type: string
          type: array
        redirecturl:
          description: Default URL to redirect to on registration/mitigation release.
            This is only used if a per-violation redirect URL is not defined.
          type: string
        reuse_dot1x_credentials:
          description: This option emulates SSO when someone needs to face the captive
            portal after a successful 802.1x connection. 802.1x credentials are reused
            on the portal to match an authentication and get the appropriate actions.
            As a security precaution, this option will only reuse 802.1x credentials
            if there is an authentication source matching the provided realm. This
            means, if users use 802.1x credentials with a domain part (username@domain,
            domain\username), the domain part needs to be configured as a realm under
            the RADIUS section and an authentication source needs to be configured
            for that realm. If users do not use 802.1x credentials with a domain part,
            only the NULL realm will be match IF an authentication source is configured
            for it.
          type: string
        root_module:
          description: The Root Portal Module to use
          type: string
        scans:
          description: Scans
          items:
            description: Scan
            type: string
          type: array
        sms_pin_retry_limit:
          description: Maximum number of times a user can retry a SMS PIN before having
            to request another PIN. A value of 0 disables the limit.
          type: integer
        sms_request_limit:
          description: Maximum number of times a user can request a SMS PIN. A value
            of 0 disables the limit.
          type: integer
        sources:
          description: Sources
          items:
            description: Source
            type: string
          type: array
        status:
          description: Enable profile
          type: string
        unreg_on_acct_stop:
          description: This activates automatic deregistation of devices for the profile
            if PacketFence receives a RADIUS accounting stop.
          type: string
        vlan_pool_technique:
          description: 'The algorithm used to calculate the VLAN in a VLAN pool. <a
            target="_blank" href="/static/doc/PacketFence_Installation_Guide.html#_roles_management"><i
            class="icon-question-circle-o"></i></a> '
          type: string
      required:
      - id
      - root_module
      type: object
    ConfigConnectionProfilesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigConnectionProfile'
            type: array
        type: object
      description: List
    ConfigDeviceRegistration:
      properties:
        allowed_devices:
          description: List of OS which will be allowed to be register via the self
            service portal.
          items:
            description: List of OS which will be allowed to be register via the self
              service portal.
            type: string
          type: array
        category:
          description: The role to assign to devices registered from the specific
            portal. If none is specified, the role of the registrant is used.
          type: string
        description:
          description: Description
          type: string
        id:
          description: Profile Name
          type: string
      required:
      - id
      type: object
    ConfigDeviceRegistrationsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigDeviceRegistration'
            type: array
        type: object
      description: List
    ConfigDomain:
      properties:
        ad_server:
          description: The IP address or DNS name of your Active Directory server
          type: string
        bind_dn:
          description: The username of a Domain Admin to use to join the server to
            the domain
          type: string
        bind_pass:
          description: The password of a Domain Admin to use to join the server to
            the domain. Will not be stored permanently and is only used while joining
            the domain.
          type: string
        dns_name:
          description: The DNS name (FQDN) of the domain.
          type: string
        dns_servers:
          description: The IP address(es) of the DNS server(s) for this domain. Comma
            delimited if multiple.
          type: string
        id:
          description: Specify a unique identifier for your configuration.<br/>This
            doesn't have to be related to your domain
          type: string
        ntlm_cache:
          description: Should the NTLM cache be enabled for this domain?
          type: string
        ntlm_cache_batch:
          description: When this is enabled, all users matching the LDAP filter will
            be inserted in the cache via a background job (maintenance.populate_ntlm_redis_cache_interval
            controls the interval).
          type: string
        ntlm_cache_batch_one_at_a_time:
          description: Whether or not to fetch users on your AD one by one instead
            of doing a single batch fetch. This is useful when your AD is loaded or
            experiencing issues during the sync. Note that this makes the batch job
            much longer and is about 4 times slower when enabled.
          type: string
        ntlm_cache_expiry:
          description: The amount of seconds an entry should be cached. This should
            be adjusted to twice the value of maintenance.populate_ntlm_redis_cache_interval
            if using the batch mode.
          type: integer
        ntlm_cache_filter:
          description: An LDAP query to filter out the users that should be cached.
          type: string
        ntlm_cache_on_connection:
          description: When this is enabled, an async job will cache the NTLM credentials
            of the user every time he connects.
          type: string
        ntlm_cache_source:
          description: The source to use to connect to your Active Directory server
            for NTLM caching.
          type: string
        ou:
          description: Precreate the computer account in a specific OU. The OU string
            read from top to bottom without RDNs and delimited by a '/'. E.g. "Computers/Servers/Unix"
          type: string
        registration:
          description: If this option is enabled, the device will be able to reach
            the Active Directory from the registration VLAN.
          type: string
        server_name:
          description: This server's name (account name) in your Active Directory.
            Use '%h' to automatically use this server hostname
          type: string
        sticky_dc:
          description: This is used to specify a sticky domain controller to connect
            to. If not specified, default '*' will be used to connect to any available
            domain controller
          type: string
        workgroup:
          description: Workgroup
          type: string
      required:
      - id
      - workgroup
      - ad_server
      - dns_servers
      - server_name
      - sticky_dc
      - dns_name
      - ou
      type: object
    ConfigDomainsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigDomain'
            type: array
        type: object
      description: List
    ConfigFirewall:
      discriminator:
        propertyName: type
      oneOf:
      - properties:
          cache_timeout:
            description: Adjust the "Cache timeout" to half the expiration delay in
              your firewall.<br/>Your DHCP renewal interval should match this value.
            type: integer
          cache_updates:
            description: Enable this to debounce updates to the Firewall.<br/>By default,
              PacketFence will send a SSO on every DHCP request for every device.
              Enabling this enables "sleep" periods during which the update is not
              sent if the informations stay the same.
            type: string
          categories:
            description: Nodes with the selected roles will be affected
            items:
              description: Nodes with the selected roles will be affected
              type: string
            type: array
          default_realm:
            description: The default realm to be used while formatting the username
              when no realm can be extracted from the username.
            type: string
          id:
            description: Hostname or IP Address
            type: string
          networks:
            description: 'Comma delimited list of networks on which the SSO applies.<br/>Format
              : 192.168.0.0/24'
            type: string
          password:
            description: Password
            type: string
          port:
            description: If you use an alternative port, please specify
            type: integer
          type:
            description: Type
            type: string
          uid:
            description: UID type
            type: string
          username:
            description: Username
            type: string
          username_format:
            description: Defines how to format the username that is sent to your firewall.
              $username represents the username and $realm represents the realm of
              your user if applicable. $pf_username represents the unstripped username
              as it is stored in the PacketFence database. If left empty, it will
              use the username as stored in PacketFence (value of $pf_username).
            type: string
        required:
        - id
        - password
        - username
        type: object
      - properties:
          cache_timeout:
            description: Adjust the "Cache timeout" to half the expiration delay in
              your firewall.<br/>Your DHCP renewal interval should match this value.
            type: integer
          cache_updates:
            description: Enable this to debounce updates to the Firewall.<br/>By default,
              PacketFence will send a SSO on every DHCP request for every device.
              Enabling this enables "sleep" periods during which the update is not
              sent if the informations stay the same.
            type: string
          categories:
            description: Nodes with the selected roles will be affected
            items:
              description: Nodes with the selected roles will be affected
              type: string
            type: array
          default_realm:
            description: The default realm to be used while formatting the username
              when no realm can be extracted from the username.
            type: string
          id:
            description: Hostname or IP Address
            type: string
          networks:
            description: 'Comma delimited list of networks on which the SSO applies.<br/>Format
              : 192.168.0.0/24'
            type: string
          password:
            description: If using the HTTP transport, specify the password for the
              Palo Alto API
            type: string
          port:
            description: If you use an alternative port, please specify. This parameter
              is ignored when the Syslog transport is selected.
            type: integer
          transport:
            description: Transport
            type: string
          type:
            description: Type
            type: string
          uid:
            description: UID type
            type: string
          username_format:
            description: Defines how to format the username that is sent to your firewall.
              $username represents the username and $realm represents the realm of
              your user if applicable. $pf_username represents the unstripped username
              as it is stored in the PacketFence database. If left empty, it will
              use the username as stored in PacketFence (value of $pf_username).
            type: string
          vsys:
            description: Please define the Virtual System number. This only has an
              effect when used with the HTTP transport.
            type: integer
        required:
        - id
        type: object
      - properties:
          cache_timeout:
            description: Adjust the "Cache timeout" to half the expiration delay in
              your firewall.<br/>Your DHCP renewal interval should match this value.
            type: integer
          cache_updates:
            description: Enable this to debounce updates to the Firewall.<br/>By default,
              PacketFence will send a SSO on every DHCP request for every device.
              Enabling this enables "sleep" periods during which the update is not
              sent if the informations stay the same.
            type: string
          categories:
            description: Nodes with the selected roles will be affected
            items:
              description: Nodes with the selected roles will be affected
              type: string
            type: array
          default_realm:
            description: The default realm to be used while formatting the username
              when no realm can be extracted from the username.
            type: string
          id:
            description: Hostname or IP Address
            type: string
          networks:
            description: 'Comma delimited list of networks on which the SSO applies.<br/>Format
              : 192.168.0.0/24'
            type: string
          password:
            description: Secret
            type: string
          port:
            description: If you use an alternative port, please specify
            type: integer
          type:
            description: Type
            type: string
          uid:
            description: UID type
            type: string
          username_format:
            description: Defines how to format the username that is sent to your firewall.
              $username represents the username and $realm represents the realm of
              your user if applicable. $pf_username represents the unstripped username
              as it is stored in the PacketFence database. If left empty, it will
              use the username as stored in PacketFence (value of $pf_username).
            type: string
        required:
        - id
        - password
        type: object
      - properties:
          cache_timeout:
            description: Adjust the "Cache timeout" to half the expiration delay in
              your firewall.<br/>Your DHCP renewal interval should match this value.
            type: integer
          cache_updates:
            description: Enable this to debounce updates to the Firewall.<br/>By default,
              PacketFence will send a SSO on every DHCP request for every device.
              Enabling this enables "sleep" periods during which the update is not
              sent if the informations stay the same.
            type: string
          categories:
            description: Nodes with the selected roles will be affected
            items:
              description: Nodes with the selected roles will be affected
              type: string
            type: array
          default_realm:
            description: The default realm to be used while formatting the username
              when no realm can be extracted from the username.
            type: string
          id:
            description: Hostname or IP Address
            type: string
          networks:
            description: 'Comma delimited list of networks on which the SSO applies.<br/>Format
              : 192.168.0.0/24'
            type: string
          password:
            description: Secret or Key
            type: string
          port:
            description: If you use an alternative port, please specify
            type: integer
          type:
            description: Type
            type: string
          uid:
            description: UID type
            type: string
          username_format:
            description: Defines how to format the username that is sent to your firewall.
              $username represents the username and $realm represents the realm of
              your user if applicable. $pf_username represents the unstripped username
              as it is stored in the PacketFence database. If left empty, it will
              use the username as stored in PacketFence (value of $pf_username).
            type: string
        required:
        - id
        - password
        type: object
      - properties:
          cache_timeout:
            description: Adjust the "Cache timeout" to half the expiration delay in
              your firewall.<br/>Your DHCP renewal interval should match this value.
            type: integer
          cache_updates:
            description: Enable this to debounce updates to the Firewall.<br/>By default,
              PacketFence will send a SSO on every DHCP request for every device.
              Enabling this enables "sleep" periods during which the update is not
              sent if the informations stay the same.
            type: string
          categories:
            description: Nodes with the selected roles will be affected
            items:
              description: Nodes with the selected roles will be affected
              type: string
            type: array
          default_realm:
            description: The default realm to be used while formatting the username
              when no realm can be extracted from the username.
            type: string
          id:
            description: Hostname or IP Address
            type: string
          networks:
            description: 'Comma delimited list of networks on which the SSO applies.<br/>Format
              : 192.168.0.0/24'
            type: string
          password:
            description: Secret or Key
            type: string
          port:
            description: If you use an alternative port, please specify
            type: integer
          type:
            description: Type
            type: string
          uid:
            description: UID type
            type: string
          username_format:
            description: Defines how to format the username that is sent to your firewall.
              $username represents the username and $realm represents the realm of
              your user if applicable. $pf_username represents the unstripped username
              as it is stored in the PacketFence database. If left empty, it will
              use the username as stored in PacketFence (value of $pf_username).
            type: string
        required:
        - id
        - password
        type: object
      - properties:
          cache_timeout:
            description: Adjust the "Cache timeout" to half the expiration delay in
              your firewall.<br/>Your DHCP renewal interval should match this value.
            type: integer
          cache_updates:
            description: Enable this to debounce updates to the Firewall.<br/>By default,
              PacketFence will send a SSO on every DHCP request for every device.
              Enabling this enables "sleep" periods during which the update is not
              sent if the informations stay the same.
            type: string
          categories:
            description: Nodes with the selected roles will be affected
            items:
              description: Nodes with the selected roles will be affected
              type: string
            type: array
          default_realm:
            description: The default realm to be used while formatting the username
              when no realm can be extracted from the username.
            type: string
          id:
            description: Hostname or IP Address
            type: string
          nac_name:
            description: Should match the NAC name from the Iboss configuration
            type: string
          networks:
            description: 'Comma delimited list of networks on which the SSO applies.<br/>Format
              : 192.168.0.0/24'
            type: string
          password:
            description: Change the default key if necessary
            type: string
          port:
            description: If you use an alternative port, please specify
            type: integer
          type:
            description: Type
            type: string
          uid:
            description: UID type
            type: string
          username_format:
            description: Defines how to format the username that is sent to your firewall.
              $username represents the username and $realm represents the realm of
              your user if applicable. $pf_username represents the unstripped username
              as it is stored in the PacketFence database. If left empty, it will
              use the username as stored in PacketFence (value of $pf_username).
            type: string
        required:
        - id
        - password
        type: object
      - properties:
          cache_timeout:
            description: Adjust the "Cache timeout" to half the expiration delay in
              your firewall.<br/>Your DHCP renewal interval should match this value.
            type: integer
          cache_updates:
            description: Enable this to debounce updates to the Firewall.<br/>By default,
              PacketFence will send a SSO on every DHCP request for every device.
              Enabling this enables "sleep" periods during which the update is not
              sent if the informations stay the same.
            type: string
          categories:
            description: Nodes with the selected roles will be affected
            items:
              description: Nodes with the selected roles will be affected
              type: string
            type: array
          default_realm:
            description: The default realm to be used while formatting the username
              when no realm can be extracted from the username.
            type: string
          id:
            description: Hostname or IP Address
            type: string
          networks:
            description: 'Comma delimited list of networks on which the SSO applies.<br/>Format
              : 192.168.0.0/24'
            type: string
          password:
            description: Secret or Key
            type: string
          port:
            description: If you use an alternative port, please specify
            type: integer
          type:
            description: Type
            type: string
          uid:
            description: UID type
            type: string
          username:
            description: Username
            type: string
          username_format:
            description: Defines how to format the username that is sent to your firewall.
              $username represents the username and $realm represents the realm of
              your user if applicable. $pf_username represents the unstripped username
              as it is stored in the PacketFence database. If left empty, it will
              use the username as stored in PacketFence (value of $pf_username).
            type: string
        required:
        - id
        - password
        - username
        type: object
    ConfigFirewallsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigFirewall'
            type: array
        type: object
      description: List
    ConfigFloatingDevice:
      properties:
        id:
          description: MAC Address
          type: string
        ip:
          description: IP Address
          type: string
        pvid:
          description: VLAN in which PacketFence should put the port
          type: integer
        taggedVlan:
          description: Comma separated list of VLANs. If the port is a multi-vlan,
            these are the VLANs that have to be tagged on the port.
          type: string
        trunkPort:
          description: The port must be configured as a muti-vlan port
          type: string
      required:
      - id
      - pvid
      type: object
    ConfigFloatingDevicesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigFloatingDevice'
            type: array
        type: object
      description: List
    ConfigInterfaceBase:
      properties:
        dhcpd_enabled:
          description: Whether or not DHCP is enabled for this interface
          enum:
          - enabled
          - disabled
          type: string
        dns:
          description: The DNS server of the network tied to the interface.
          type: string
        high_availability:
          description: The RSA server key for the resource in PEM encoded format
          enum:
          - 1
          - 0
          type: string
        ipaddress:
          description: The IP address of the interface
          type: string
        name:
          description: The name of the interface
          type: string
        nat_enabled:
          description: Whether or not NAT is enabled for this interface
          enum:
          - 1
          - 0
          type: string
        netmask:
          description: The netmask of the interface
          type: string
        network:
          description: The network associated to the interface
          type: string
        network_iseditable:
          description: Whether or not the network is editable
          type: boolean
        reg_network:
          description: Registration IP Address CIDR format
          type: string
        split_network:
          description: Whether or not to perform network split by role
          enum: ~
          type: string
        type:
          description: The network type of the interface
          type: string
        vip:
          description: The virtual IP address of the interface (only for active/passive
            clusters)
          type: string
      type: object
    ConfigInterfaceCreate:
      allOf:
      - $ref: '#/components/schemas/ConfigInterfaceBase'
      - $ref: '#/components/schemas/ConfigInterfaceVlan'
    ConfigInterfaceGet:
      allOf:
      - $ref: '#/components/schemas/ConfigInterfaceBase'
      - properties:
          hwaddr:
            description: The MAC address of the interface
            type: string
          ifindex:
            description: The ifindex
            type: string
          is_running:
            description: Whether or not the interface is running (up)
            type: boolean
          master:
            description: The physical interface associated to a VLAN interface when
              applicable
            type: string
        type: object
    ConfigInterfaceUpdate:
      $ref: '#/components/schemas/ConfigInterfaceBase'
    ConfigInterfaceVlan:
      properties:
        vlan:
          description: The VLAN for the interface if applicable
          type: string
      type: object
    ConfigInterfacesList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ConfigInterfaceGet'
          type: array
      type: object
    ConfigMaintenanceTask:
      discriminator:
        propertyName: type
      oneOf:
      - properties:
          delete_window:
            description: How long can an unregistered node be inactive on the network
              before being deleted.<br>This shouldn't be used if you are using port-security
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          type:
            description: Type
            type: string
          unreg_window:
            description: How long can a registered node be inactive on the network
              before it becomes unregistered
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
        required:
        - id
        - type
        type: object
      - properties:
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - type
        type: object
      - properties:
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - type
        type: object
      - properties:
          certificates:
            description: SSL certificate(s) to monitor. Comma-delimited list
            type: string
          delay:
            description: Minimum gap before certificate expiration date (will the
              certificate expires in ...)
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - type
        type: object
      - properties:
          batch:
            description: Amount of items that will be processed in each batch of this
              task. Batches are executed until there is no more items to process or
              until the timeout is reached.
            type: integer
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          timeout:
            description: Maximum amount of time this task can run.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          type:
            description: Type
            type: string
          window:
            description: Window to apply the job to. In the case of a deletion, setting
              this to 7 days would delete affected data older than 7 days.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
        required:
        - id
        - type
        type: object
      - properties:
          batch:
            description: Amount of items that will be processed in each batch of this
              task. Batches are executed until there is no more items to process or
              until the timeout is reached.
            type: integer
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          timeout:
            description: Maximum amount of time this task can run.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          type:
            description: Type
            type: string
          window:
            description: Window to apply the job to. In the case of a deletion, setting
              this to 7 days would delete affected data older than 7 days.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
        required:
        - id
        - type
        type: object
      - properties:
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          process_switchranges:
            description: Whether or not a switch range should be expanded to process
              each of its IPs
            type: string
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - type
        type: object
      - properties:
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - type
        type: object
      - properties:
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - type
        type: object
      - properties:
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - type
        type: object
      - properties:
          batch:
            description: Amount of items that will be processed in each batch of this
              task. Batches are executed until there is no more items to process or
              until the timeout is reached.
            type: integer
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          rotate:
            description: Enable or disable ip6log rotation (moving ip6log_history
              records to ip6log_archive)<br>If disabled, this task will delete from
              the ip6log_history table rather than the ip6log_archive.
            type: string
          rotate_batch:
            description: Amount of items that will be processed in each batch of this
              task. Batches are executed until there is no more items to process or
              until the timeout is reached.
            type: integer
          rotate_timeout:
            description: Maximum amount of time this task can run.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          rotate_window:
            description: How long to keep ip6log history entry before rotating it
              to ip6log archive.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          timeout:
            description: Maximum amount of time this task can run.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          type:
            description: Type
            type: string
          window:
            description: How long to keep a ip6log archive entry before deleting it
              (or ip6log history if rotation is disabled)
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
        required:
        - id
        - type
        type: object
      - properties:
          batch:
            description: Amount of items that will be processed in each batch of this
              task. Batches are executed until there is no more items to process or
              until the timeout is reached.
            type: integer
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          timeout:
            description: Maximum amount of time this task can run.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          type:
            description: Type
            type: string
          window:
            description: Window
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
        required:
        - id
        - type
        type: object
      - properties:
          batch:
            description: Amount of items that will be processed in each batch of this
              task. Batches are executed until there is no more items to process or
              until the timeout is reached.
            type: integer
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          timeout:
            description: Maximum amount of time this task can run.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          type:
            description: Type
            type: string
        required:
        - id
        - type
        type: object
      - properties:
          batch:
            description: Amount of items that will be processed in each batch of this
              task. Batches are executed until there is no more items to process or
              until the timeout is reached.
            type: integer
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          timeout:
            description: Maximum amount of time this task can run.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          type:
            description: Type
            type: string
        required:
        - id
        - type
        type: object
      - properties:
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - type
        type: object
      - properties:
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - type
        type: object
      - properties:
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - type
        type: object
      - properties:
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - type
        type: object
      - properties:
          batch:
            description: Amount of items that will be processed in each batch of this
              task. Batches are executed until there is no more items to process or
              until the timeout is reached.
            type: integer
          id:
            description: Pfcron Name
            type: string
          interval:
            description: Interval (frequency) at which the task is executed.<br>Requires
              a restart of pfcron to be fully effective. Otherwise, it will be taken
              in consideration next time the tasks runs.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          rotate:
            description: Enable or disable ip4log rotation (moving ip4log_history
              records to ip4log_archive)<br>If disabled, this task will delete from
              the ip4log_history table rather than the ip4log_archive.
            type: string
          rotate_batch:
            description: Amount of items that will be processed in each batch of this
              task. Batches are executed until there is no more items to process or
              until the timeout is reached.
            type: integer
          rotate_timeout:
            description: Maximum amount of time this task can run.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          rotate_window:
            description: How long to keep ip4log history entry before rotating it
              to ip4log archive.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          status:
            description: Whether or not this task is enabled.<br>Requires a restart
              of pfcron to be effective.
            type: string
          timeout:
            description: Maximum amount of time this task can run.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          type:
            description: Type
            type: string
          window:
            description: How long to keep a ip4log archive entry before deleting it
              (or ip4log history if rotation is disabled)
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
        required:
        - id
        - type
        type: object
    ConfigMaintenanceTasksList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigMaintenanceTask'
            type: array
        type: object
      description: List
    ConfigPkiProvider:
      discriminator:
        propertyName: type
      oneOf:
      - properties:
          ca_cert_path:
            description: Path of the CA certificate that will generate your certificates
            type: string
          cn_attribute:
            description: Defines what attribute of the node to use as the common name
              during the certificate generation
            type: string
          cn_format:
            description: Defines how the common name will be formated. %s will expand
              to the defined Common Name Attribute value
            type: string
          country:
            description: Country for the certificate
            type: string
          host:
            description: Host which hosts the PacketFence PKI
            type: string
          id:
            description: The unique ID of the PKI provider
            type: string
          organization:
            description: Organization for the certificate
            type: string
          password:
            description: Password for the username filled in above
            type: string
          port:
            description: Port on which to contact the PacketFence PKI API
            type: string
          profile:
            description: Profile used for the generation of certificate
            type: string
          proto:
            description: Protocol to use to contact the PacketFence PKI API
            type: string
          revoke_on_unregistration:
            description: Check this box to have the certificate revoke when the node
              using it is unregistered.<br/>Do not use if multiple devices share the
              same certificate
            type: string
          server_cert_path:
            description: Path of the RADIUS server authentication certificate
            type: string
          state:
            description: State for the certificate
            type: string
          type:
            description: PKI Provider type
            type: string
          username:
            description: Username to connect to the PKI
            type: string
        required:
        - id
        - type
        - ca_cert_path
        - server_cert_path
        type: object
      - properties:
          ca_cert_path:
            description: Path of the CA certificate used to generate client certificate/key
              combination
            type: string
          client_cert_path:
            description: Path of the client cert that will be used to generate the
              p12
            type: string
          client_key_path:
            description: Path of the client key that will be used to generate the
              p12
            type: string
          id:
            description: The unique ID of the PKI provider
            type: string
          server_cert_path:
            description: Path of the RADIUS server authentication certificate
            type: string
          type:
            description: PKI Provider type
            type: string
        required:
        - id
        - type
        - client_cert_path
        - client_key_path
        - ca_cert_path
        - server_cert_path
        type: object
      - properties:
          ca_cert_path:
            description: Path of the CA that will generate your certificates
            type: string
          cn_attribute:
            description: Defines what attribute of the node to use as the common name
              during the certificate generation.
            type: string
          cn_format:
            description: Defines how the common name will be formated. %s will expand
              to the defined Common Name Attribute value
            type: string
          country:
            description: Country for the certificate
            type: string
          id:
            description: The unique id of the PKI provider
            type: string
          locality:
            description: Locality for the certificate
            type: string
          organization:
            description: Organization for the certificate
            type: string
          organizational_unit:
            description: Organizational unit for the certificate
            type: string
          password:
            description: Password for the username filled in above
            type: string
          server_cert_path:
            description: Path of the RADIUS server authentication certificate
            type: string
          state:
            description: State for the certificate
            type: string
          type:
            description: Type
            type: string
          url:
            description: The url used to connect to the SCEP PKI service
            type: string
          username:
            description: Username to connect to the SCEP PKI Service
            type: string
        required:
        - id
        - type
        - ca_cert_path
        - server_cert_path
        type: object
    ConfigPkiProvidersList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigPkiProvider'
            type: array
        type: object
      description: List
    ConfigPortalModule:
      discriminator:
        propertyName: type
      oneOf:
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          multi_source_ids:
            description: Multi source ids
            items:
              description: Multi source id
              type: string
            type: array
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          username:
            description: Defines the username used for all authentications
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - signup_template
        - username
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          landing_template:
            description: The template to use for the signup
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - landing_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - signup_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - signup_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          landing_template:
            description: The template to use for the signup
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - landing_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          id:
            description: Identifier
            type: string
          message:
            description: The message that will be displayed to the user. Use with
              caution as the HTML contained in this field will NOT be escaped.
            type: string
          skipable:
            description: Whether or not, this message can be skipped
            type: string
          template:
            description: The template to use to display the message
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - message
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          modules:
            description: Modules
            items:
              description: Module
              type: string
            type: array
          multi_source_auth_classes:
            description: The sources of these authentication classes and part of the
              connection profile will be added to the available sources
            type: string
          multi_source_ids:
            description: Multi source ids
            items:
              description: Multi source id
              type: string
            type: array
          multi_source_object_classes:
            description: The sources inheriting from these classes and part of the
              connection profile will be added to the available sources
            type: string
          multi_source_types:
            description: The sources of these types and part of the connection profile
              will be added to the available sources
            type: string
          show_first_module_on_default:
            description: Show first module when none is selected
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          template:
            description: The template to use to display the choices
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          forced_sponsor:
            description: Defines the sponsor email used. Leave empty so that the user
              has to specify a sponsor.
            type: string
          id:
            description: Identifier
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - signup_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          landing_template:
            description: The template to use for the signup
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - landing_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          landing_template:
            description: The template to use for the signup
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - landing_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          landing_template:
            description: The template to use for the signup
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - landing_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          id:
            description: Identifier
            type: string
          skipable:
            description: Whether or not, the provisioning can be skipped
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          id:
            description: Identifier
            type: string
          stone_roles:
            description: Nodes with the selected roles will be affected
            items:
              description: Nodes with the selected roles will be affected
              type: string
            type: array
          type:
            description: Type
            type: string
        required:
        - id
        - description
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          id:
            description: Identifier
            type: string
          skipable:
            description: Whether or not, this redirection can be skipped.
            type: string
          type:
            description: Type
            type: string
          url:
            description: The URL on which the user should be redirected.
            type: string
        required:
        - id
        - description
        - url
        type: object
      - properties:
          description:
            description: The description that will be displayed to users
            type: string
          id:
            description: Identifier
            type: string
          modules:
            description: Modules
            items:
              description: Module
              type: string
            type: array
          type:
            description: Type
            type: string
        required:
        - id
        - description
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - signup_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - signup_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          landing_template:
            description: The template to use for the signup
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - landing_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          landing_template:
            description: The template to use for the signup
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - landing_template
        type: object
      - properties:
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          multi_source_ids:
            description: Multi source ids
            items:
              description: Multi source id
              type: string
            type: array
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          admin_role:
            description: Which roles should have access to this module to select the
              role
            items:
              description: Which roles should have access to this module to select
                the role
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          id:
            description: Identifier
            type: string
          list_role:
            description: Which roles can be select
            items:
              description: Which roles can be select
              type: string
            type: array
          template:
            description: The template to use
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          landing_template:
            description: The template to use for the signup
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - landing_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          landing_template:
            description: The template to use for the signup
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - landing_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          id:
            description: Identifier
            type: string
          survey_id:
            description: The survey to use in this portal module. Surveys are defined
              in survey.conf
            type: string
          template:
            description: The template to use to display the message
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          id:
            description: Identifier
            type: string
          modules:
            description: Modules
            items:
              description: Module
              type: string
            type: array
          show_first_module_on_default:
            description: Show first module when none is selected
            type: string
          template:
            description: The template to use to display the choices
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - signup_template
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          landing_template:
            description: The template to use for the signup
            type: string
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - landing_template
        type: object
      - properties:
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          template:
            description: The template to use
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          id:
            description: Identifier
            type: string
          modules:
            description: Modules
            items:
              description: Module
              type: string
            type: array
          type:
            description: Type
            type: string
        required:
        - id
        - description
        type: object
      - properties:
          actions:
            description: Actions
            items:
              description: Action
              properties:
                arguments:
                  description: Arguments
                  type: string
                type:
                  description: Type
                  type: string
              type: object
            type: array
          aup_template:
            description: The template to use for the AUP
            type: string
          custom_fields:
            description: The additionnal fields that should be required for registration
            items:
              description: The additionnal fields that should be required for registration
              type: string
            type: array
          description:
            description: The description that will be displayed to users
            type: string
          fields_to_save:
            description: These fields will be saved through the registration process
            items:
              description: These fields will be saved through the registration process
              type: string
            type: array
          id:
            description: Identifier
            type: string
          multi_source_ids:
            description: Multi source ids
            items:
              description: Multi source id
              type: string
            type: array
          pid_field:
            description: Which field should be used as the PID.
            type: string
          signup_template:
            description: The template to use for the signup
            type: string
          source_id:
            description: The sources to use in the module. If no sources are specified,
              all the sources on the Connection Profile will be used
            type: string
          type:
            description: Type
            type: string
          with_aup:
            description: Require the user to accept the AUP
            type: string
        required:
        - id
        - description
        - aup_template
        - signup_template
        type: object
    ConfigPortalModulesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigPortalModule'
            type: array
        type: object
      description: List
    ConfigProvisioning:
      properties:
        category:
          description: Nodes with the selected roles will be affected
          items:
            description: Nodes with the selected roles will be affected
            type: string
          type: array
        description:
          description: Description
          type: string
        id:
          description: Provisioning ID
          type: string
        non_compliance_violation:
          description: Which violation should be raised when non compliance is detected
          type: string
        oses:
          description: Nodes with the selected OS will be affected
          items:
            description: Nodes with the selected OS will be affected
            type: string
          type: array
        pki_provider:
          description: PKI Provider
          type: string
        type:
          description: Provisioning type
          type: string
      required:
      - id
      - type
      type: object
    ConfigProvisioningsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ConfigProvisioning'
            type: array
        type: object
    ConfigRealm:
      properties:
        admin_strip_username:
          description: Should the usernames matching this realm be stripped when used
            on the administration interface
          type: string
        domain:
          description: The domain to use for the authentication in that realm
          type: string
        id:
          description: Realm
          type: string
        options:
          description: You can add FreeRADIUS options in the realm definition
          type: string
        portal_strip_username:
          description: Should the usernames matching this realm be stripped when used
            on the captive portal
          type: string
        radius_strip_username:
          description: Should the usernames matching this realm be stripped when used
            in the authorization phase of 802.1x. Note that this doesn't control the
            stripping in FreeRADIUS, use the options above for that.
          type: string
      required:
      - id
      type: object
    ConfigRealmsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigRealm'
            type: array
        type: object
      description: List
    ConfigRole:
      properties:
        id:
          description: Name
          type: string
        max_nodes_per_pid:
          description: The maximum number of nodes a user having this role can register.
          type: integer
        notes:
          description: Description
          type: string
      required:
      - id
      - max_nodes_per_pid
      type: object
    ConfigRolesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigRole'
            type: array
        type: object
      description: List
    ConfigScan:
      discriminator:
        propertyName: type
      oneOf:
      - properties:
          categories:
            description: Nodes with the selected roles will be affected
            items:
              description: Nodes with the selected roles will be affected
              type: string
            type: array
          domain:
            description: Domain
            type: string
          duration:
            description: Approximate duration of a scan. User being scanned on registration
              are presented a progress bar for this duration, afterwards the browser
              refreshes until scan is complete.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          id:
            description: Name
            type: string
          oses:
            description: Nodes with the selected OS will be affected
            items:
              description: Nodes with the selected OS will be affected
              type: string
            type: array
          password:
            description: Password
            type: string
          post_registration:
            description: If this option is enabled, the PF system will scan host after
              on the production vlan.
            type: string
          pre_registration:
            description: If this option is enabled, the PF system will scan host before
              the registration.
            type: string
          registration:
            description: If this option is enabled, the PF system will scan each host
              after registration is complete.
            type: string
          type:
            description: Type
            type: string
          username:
            description: Username
            type: string
          wmi_policy:
            description: Name of the policy to use
            type: string
          wmi_rules:
            description: Wmi rules
            items:
              description: Wmi rule
              type: string
            type: array
        required:
        - id
        - username
        - password
        - domain
        type: object
      - properties:
          categories:
            description: Nodes with the selected roles will be affected
            items:
              description: Nodes with the selected roles will be affected
              type: string
            type: array
          duration:
            description: Approximate duration of a scan. User being scanned on registration
              are presented a progress bar for this duration, afterwards the browser
              refreshes until scan is complete.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          id:
            description: Name
            type: string
          ip:
            description: Hostname or IP Address
            type: string
          openvas_configid:
            description: ID of the scanning configuration on the OpenVAS server
            type: string
          openvas_reportformatid:
            description: ID of the .CSV report format on the OpenVAS server
            type: string
          openvas_portlistid:
            description: ID of the port list format on the OpenVAS server
            type: string
          oses:
            description: Nodes with the selected OS will be affected
            items:
              description: Nodes with the selected OS will be affected
              type: string
            type: array
          password:
            description: Password
            type: string
          port:
            description: If you use an alternative port, please specify
            type: integer
          post_registration:
            description: If this option is enabled, the PF system will scan host after
              on the production vlan.
            type: string
          pre_registration:
            description: If this option is enabled, the PF system will scan host before
              the registration.
            type: string
          registration:
            description: If this option is enabled, the PF system will scan each host
              after registration is complete.
            type: string
          type:
            description: Type
            type: string
          username:
            description: Username
            type: string
        required:
        - id
        - username
        - password
        - ip
        type: object
      - properties:
          categories:
            description: Nodes with the selected roles will be affected
            items:
              description: Nodes with the selected roles will be affected
              type: string
            type: array
          duration:
            description: Approximate duration of a scan. User being scanned on registration
              are presented a progress bar for this duration, afterwards the browser
              refreshes until scan is complete.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          id:
            description: Name
            type: string
          ip:
            description: Hostname or IP Address
            type: string
          nessus_clientpolicy:
            description: Name of the policy to use on the nessus server
            type: string
          oses:
            description: Nodes with the selected OS will be affected
            items:
              description: Nodes with the selected OS will be affected
              type: string
            type: array
          password:
            description: Password
            type: string
          port:
            description: If you use an alternative port, please specify
            type: integer
          post_registration:
            description: If this option is enabled, the PF system will scan host after
              on the production vlan.
            type: string
          pre_registration:
            description: If this option is enabled, the PF system will scan host before
              the registration.
            type: string
          registration:
            description: If this option is enabled, the PF system will scan each host
              after registration is complete.
            type: string
          type:
            description: Type
            type: string
          username:
            description: Username
            type: string
        required:
        - id
        - username
        - password
        - ip
        type: object
      - properties:
          categories:
            description: Nodes with the selected roles will be affected
            items:
              description: Nodes with the selected roles will be affected
              type: string
            type: array
          duration:
            description: Approximate duration of a scan. User being scanned on registration
              are presented a progress bar for this duration, afterwards the browser
              refreshes until scan is complete.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          id:
            description: Name
            type: string
          ip:
            description: Hostname or IP Address
            type: string
          nessus_clientpolicy:
            description: Name of the policy to use on the nessus server
            type: string
          oses:
            description: Nodes with the selected OS will be affected
            items:
              description: Nodes with the selected OS will be affected
              type: string
            type: array
          password:
            description: Password
            type: string
          port:
            description: If you use an alternative port, please specify
            type: integer
          post_registration:
            description: If this option is enabled, the PF system will scan host after
              on the production vlan.
            type: string
          pre_registration:
            description: If this option is enabled, the PF system will scan host before
              the registration.
            type: string
          registration:
            description: If this option is enabled, the PF system will scan each host
              after registration is complete.
            type: string
          scannername:
            description: Name of the scanner to use on the nessus server
            type: string
          type:
            description: Type
            type: string
          username:
            description: Username
            type: string
          verify_hostname:
            description: Verify hostname of server
            type: string
        required:
        - id
        - username
        - password
        - ip
        type: object
    ConfigScansList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigScan'
            type: array
        type: object
      description: List
    ConfigSource:
      discriminator:
        propertyName: type
      oneOf:
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          description:
            description: Description
            type: string
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          message:
            description: SMS text message ($pin will be replaced by the PIN number)
            type: string
          pin_code_length:
            description: The amount of digits of the PIN number.
            type: integer
          sms_activation_timeout:
            description: This is the delay given to a guest who registered by SMS
              confirmation to fill the PIN code.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          sms_carriers:
            description: List of phone carriers available to the user
            items:
              description: List of phone carriers available to the user
              type: string
            type: array
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - sms_activation_timeout
        - pin_code_length
        type: object
      - properties:
          access_token_param:
            description: Access Token Parameter
            type: string
          access_token_path:
            description: API Token Path
            type: string
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authorize_path:
            description: API Authorize Path
            type: string
          client_id:
            description: API ID
            type: string
          client_secret:
            description: API Secret
            type: string
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          description:
            description: Description
            type: string
          domains:
            description: Comma separated list of domains that will be resolve with
              the correct IP addresses.
            type: string
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          protected_resource_url:
            description: API URL of logged user
            type: string
          redirect_url:
            description: The hostname must be the one of your captive portal.
            type: string
          site:
            description: API URL
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - client_id
        - client_secret
        - site
        - authorize_path
        - access_token_path
        - access_token_param
        - protected_resource_url
        - redirect_url
        - domains
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          description:
            description: Description
            type: string
          id:
            description: Name
            type: string
          realms:
            description: Realms that will be associated with this source
            items:
              description: Realms that will be associated with this source
              type: string
            type: array
          type:
            description: Type
            type: string
        required:
        - id
        - description
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authorization_source_id:
            description: The source to use for authorization (rule matching)
            type: string
          description:
            description: Description
            type: string
          id:
            description: Name
            type: string
          idp_ca_cert_path:
            description: If your Identity Provider uses a self-signed certificate,
              put the path to its certificate here instead.
            type: string
          idp_cert_path:
            description: Path to Identity Provider cert (x509)
            type: string
          idp_entity_id:
            description: Identity Provider entity ID
            type: string
          idp_metadata_path:
            description: Path to Identity Provider metadata
            type: string
          sp_cert_path:
            description: Path to Service Provider cert (x509)
            type: string
          sp_entity_id:
            description: Service Provider entity ID
            type: string
          sp_key_path:
            description: Path to Service Provider key (x509)
            type: string
          type:
            description: Type
            type: string
          username_attribute:
            description: Attribute of the username in the SAML response
            type: string
        required:
        - id
        - description
        - sp_entity_id
        - sp_key_path
        - sp_cert_path
        - idp_entity_id
        - idp_metadata_path
        - idp_cert_path
        - idp_ca_cert_path
        - authorization_source_id
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          cert_file:
            description: The path to the certificate you submitted to Paypal.
            type: string
          cert_id:
            description: Cert id
            type: string
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          currency:
            description: Currency
            type: string
          description:
            description: Description
            type: string
          domains:
            description: Comma separated list of domains that will be resolve with
              the correct IP addresses.
            type: string
          email_address:
            description: The email address associated to your paypal account.
            type: string
          id:
            description: Name
            type: string
          identity_token:
            description: Identity token
            type: string
          key_file:
            description: The path to the associated key of the certificate you submitted
              to Paypal.
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          payment_type:
            description: The type of transactions this source will do (donations or
              sales).
            type: string
          paypal_cert_file:
            description: The path to the Paypal certificate you downloaded.
            type: string
          send_email_confirmation:
            description: Send billing confirmation
            type: string
          test_mode:
            description: Test mode
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - identity_token
        - cert_id
        - cert_file
        - key_file
        - paypal_cert_file
        - email_address
        - payment_type
        - domains
        type: object
      - properties:
          access_token_param:
            description: Access Token Parameter
            type: string
          access_token_path:
            description: Graph API Token Path
            type: string
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authorize_path:
            description: API Authorize Path
            type: string
          client_id:
            description: App ID
            type: string
          client_secret:
            description: App Secret
            type: string
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          description:
            description: Description
            type: string
          domains:
            description: Comma separated list of domains that will be resolve with
              the correct IP addresses.
            type: string
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          protected_resource_url:
            description: Graph API URL of logged user
            type: string
          redirect_url:
            description: The hostname must be the one of your captive portal.
            type: string
          scope:
            description: The permissions the application requests.
            type: string
          site:
            description: Graph API URL
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - client_id
        - client_secret
        - site
        - authorize_path
        - access_token_path
        - access_token_param
        - scope
        - protected_resource_url
        - redirect_url
        - domains
        type: object
      - properties:
          access_token_path:
            description: API Token Path
            type: string
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authorize_path:
            description: API Authorize Path
            type: string
          client_id:
            description: API ID
            type: string
          client_secret:
            description: API Secret
            type: string
          description:
            description: Description
            type: string
          domains:
            description: Comma separated list of domains that will be resolve with
              the correct IP addresses.
            type: string
          id:
            description: Name
            type: string
          protected_resource_url:
            description: API URL of logged user
            type: string
          redirect_url:
            description: The hostname must be the one of your captive portal.
            type: string
          site:
            description: API URL
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - client_id
        - client_secret
        - site
        - authorize_path
        - access_token_path
        - protected_resource_url
        - redirect_url
        - domains
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authenticate_realm:
            description: Realm to use to authenticate
            type: string
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          description:
            description: Description
            type: string
          host:
            description: Host
            type: string
          id:
            description: Name
            type: string
          realms:
            description: Realms that will be associated with this source
            items:
              description: Realms that will be associated with this source
              type: string
            type: array
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - host
        - authenticate_realm
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          description:
            description: Description
            type: string
          id:
            description: Name
            type: string
          path:
            description: File Path
            type: string
          realms:
            description: Realms that will be associated with this source
            items:
              description: Realms that will be associated with this source
              type: string
            type: array
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - path
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          description:
            description: Description
            type: string
          id:
            description: Name
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        type: object
      - properties:
          access_token_param:
            description: Access Token Parameter
            type: string
          access_token_path:
            description: Graph API Token Path
            type: string
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          client_id:
            description: App ID
            type: string
          client_secret:
            description: App Secret
            type: string
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          description:
            description: Description
            type: string
          domains:
            description: Comma separated list of domains that will be resolve with
              the correct IP addresses.
            type: string
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          protected_resource_url:
            description: Graph API URL of logged user
            type: string
          redirect_url:
            description: The hostname must be the one of your captive portal.
            type: string
          scope:
            description: The permissions the application requests.
            type: string
          site:
            description: Graph API URL
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - client_id
        - client_secret
        - site
        - access_token_path
        - access_token_param
        - scope
        - protected_resource_url
        - redirect_url
        - domains
        type: object
      - properties:
          access_token_param:
            description: Access Token Parameter
            type: string
          access_token_path:
            description: Graph API Token Path
            type: string
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          client_id:
            description: App ID
            type: string
          client_secret:
            description: App Secret
            type: string
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          description:
            description: Description
            type: string
          domains:
            description: Comma separated list of domains that will be resolve with
              the correct IP addresses.
            type: string
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          protected_resource_url:
            description: Graph API URL of logged user
            type: string
          redirect_url:
            description: The hostname must be the one of your captive portal.
            type: string
          scope:
            description: The permissions the application requests.
            type: string
          site:
            description: Graph API URL
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - client_id
        - client_secret
        - site
        - access_token_path
        - access_token_param
        - scope
        - protected_resource_url
        - redirect_url
        - domains
        type: object
      - properties:
          access_token_param:
            description: Access Token Parameter
            type: string
          access_token_path:
            description: API Token Path
            type: string
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authorize_path:
            description: API Authorize Path
            type: string
          client_id:
            description: API ID
            type: string
          client_secret:
            description: API Secret
            type: string
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          description:
            description: Description
            type: string
          domains:
            description: Comma separated list of domains that will be resolve with
              the correct IP addresses.
            type: string
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          protected_resource_url:
            description: API URL of logged user
            type: string
          redirect_url:
            description: The hostname must be the one of your captive portal.
            type: string
          scope:
            description: The permissions the application requests.
            type: string
          site:
            description: API URL
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - client_id
        - client_secret
        - site
        - authorize_path
        - access_token_path
        - access_token_param
        - scope
        - protected_resource_url
        - redirect_url
        - domains
        type: object
      - properties:
          activation_domain:
            description: Set this value if you want to change the hostname in the
              validation link. Changing this requires to restart haproxy to be fully
              effective.
            type: string
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          allow_localdomain:
            description: Accept self-registration with email address from the local
              domain
            type: string
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          description:
            description: Description
            type: string
          email_activation_timeout:
            description: This is the delay given to a guest who registered by email
              confirmation to log into his email and click the activation link.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - email_activation_timeout
        type: object
      - properties:
          access_token_path:
            description: API Token Path
            type: string
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authorize_path:
            description: API Authorize Path
            type: string
          client_id:
            description: App ID
            type: string
          client_secret:
            description: App Secret
            type: string
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          description:
            description: Description
            type: string
          domains:
            description: Comma-separated list of domains that will be resolved with
              the correct IP addresses.
            type: string
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          protected_resource_url:
            description: API URL of logged user
            type: string
          redirect_url:
            description: The hostname must match your hostname and domain parameters
              set in System Configuration > Main Configuration > General Configuration.
            type: string
          scope:
            description: The permissions the application requests.
            type: string
          site:
            description: API URL
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - client_id
        - client_secret
        - site
        - access_token_path
        - authorize_path
        - scope
        - protected_resource_url
        - redirect_url
        - domains
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          basedn:
            description: Base DN
            type: string
          binddn:
            description: Leave this field empty if you want to perform an anonymous
              bind.
            type: string
          cache_match:
            description: Will cache results of matching a rule
            type: string
          connection_timeout:
            description: LDAP connection Timeout
            type: string
          description:
            description: Description
            type: string
          email_attribute:
            description: LDAP attribute name that stores the email address against
              which the filter will match.
            type: string
          encryption:
            description: Encryption
            type: string
          host:
            description: Host
            type: string
          id:
            description: Name
            type: string
          monitor:
            description: Do you want to monitor this source?
            type: string
          password:
            description: Password
            type: string
          port:
            description: Port
            type: integer
          read_timeout:
            description: LDAP response timeout
            type: string
          realms:
            description: Realms that will be associated with this source
            items:
              description: Realms that will be associated with this source
              type: string
            type: array
          scope:
            description: Scope
            type: string
          shuffle:
            description: Randomly choose LDAP server to query
            type: string
          type:
            description: Type
            type: string
          usernameattribute:
            description: Username Attribute
            type: string
          write_timeout:
            description: LDAP request timeout
            type: string
        required:
        - id
        - description
        - encryption
        - basedn
        - scope
        - usernameattribute
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_url:
            description: 'Note : The URL is always prefixed by a slash (/)'
            type: string
          authorization_url:
            description: 'Note : The URL is always prefixed by a slash (/)'
            type: string
          description:
            description: Description
            type: string
          host:
            description: Host
            type: string
          id:
            description: Name
            type: string
          password:
            description: API password (basic auth)
            type: string
          port:
            description: Port
            type: integer
          protocol:
            description: Encryption
            type: string
          realms:
            description: Realms that will be associated with this source
            items:
              description: Realms that will be associated with this source
              type: string
            type: array
          type:
            description: Type
            type: string
          username:
            description: API username (basic auth)
            type: string
        required:
        - id
        - description
        - protocol
        - authentication_url
        - authorization_url
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          base_url:
            description: Iframe Base url
            type: string
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          currency:
            description: Currency
            type: string
          description:
            description: Description
            type: string
          direct_base_url:
            description: Direct Base url
            type: string
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          merchant_id:
            description: Merchant ID
            type: string
          send_email_confirmation:
            description: Send billing confirmation
            type: string
          service_fqdn:
            description: Service FQDN
            type: string
          shared_secret:
            description: MKEY for the iframe
            type: string
          shared_secret_direct:
            description: MKEY for Mirapay Direct
            type: string
          terminal_group_id:
            description: Terminal Group ID for Mirapay Direct
            type: string
          terminal_id:
            description: Terminal ID for Mirapay Direct
            type: string
          test_mode:
            description: Test mode
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - base_url
        - direct_base_url
        - terminal_id
        - shared_secret_direct
        - shared_secret
        - merchant_id
        type: object
      - properties:
          access_token_param:
            description: Access Token Parameter
            type: string
          access_token_path:
            description: API Token Path
            type: string
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authorize_path:
            description: API Authorize Path
            type: string
          client_id:
            description: App ID
            type: string
          client_secret:
            description: App Secret
            type: string
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          description:
            description: Description
            type: string
          domains:
            description: Comma separated list of domains that will be resolve with
              the correct IP addresses.
            type: string
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          protected_resource_url:
            description: API URL of logged user
            type: string
          redirect_url:
            description: The hostname must be the one of your captive portal.
            type: string
          scope:
            description: The permissions the application requests.
            type: string
          site:
            description: App URL
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - client_id
        - client_secret
        - site
        - authorize_path
        - access_token_path
        - access_token_param
        - scope
        - protected_resource_url
        - redirect_url
        - domains
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          description:
            description: Description
            type: string
          group_header:
            description: Group header
            type: string
          id:
            description: Name
            type: string
          proxy_addresses:
            description: A comma seperated list of IP Address
            type: string
          type:
            description: Type
            type: string
          user_header:
            description: User header
            type: string
        required:
        - id
        - description
        - proxy_addresses
        - user_header
        - group_header
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          api_login_id:
            description: API login ID
            type: string
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          currency:
            description: Currency
            type: string
          description:
            description: Description
            type: string
          domains:
            description: Comma separated list of domains that will be resolve with
              the correct IP addresses.
            type: string
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          public_client_key:
            description: Public Client Key
            type: string
          send_email_confirmation:
            description: Send billing confirmation
            type: string
          test_mode:
            description: Test mode
            type: string
          transaction_key:
            description: Transaction key
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - api_login_id
        - transaction_key
        - public_client_key
        - domains
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          api_key:
            description: Kickbox.io API key.
            type: string
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          description:
            description: Description
            type: string
          email_required:
            description: Email required
            type: string
          id:
            description: Name
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - api_key
        type: object
      - properties:
          account_sid:
            description: Twilio Account SID
            type: string
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          auth_token:
            description: Twilio Auth Token
            type: string
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          description:
            description: Description
            type: string
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          message:
            description: SMS text message ($pin will be replaced by the PIN number)
            type: string
          pin_code_length:
            description: The length of the PIN code to be sent over SMS
            type: integer
          twilio_phone_number:
            description: Twilio provided phone number which will show as the sender
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - account_sid
        - auth_token
        - twilio_phone_number
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          auth_listening_port:
            description: PacketFence Eduroam RADIUS virtual server authentication
              listening port
            type: integer
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          description:
            description: Description
            type: string
          id:
            description: Name
            type: string
          local_realm:
            description: Realms that will be authenticate locally
            items:
              description: Realms that will be authenticate locally
              type: string
            type: array
          monitor:
            description: Do you want to monitor this source?
            type: string
          radius_secret:
            description: Eduroam RADIUS secret
            type: string
          reject_realm:
            description: Realms that will be rejected
            items:
              description: Realms that will be rejected
              type: string
            type: array
          server1_address:
            description: Eduroam server 1 address
            type: string
          server1_port:
            description: Eduroam server 1 port
            type: integer
          server2_address:
            description: Eduroam server 2 address
            type: string
          server2_port:
            description: Eduroam server 2 port
            type: integer
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - server1_address
        - server2_address
        - radius_secret
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          currency:
            description: Currency
            type: string
          description:
            description: Description
            type: string
          domains:
            description: Comma separated list of domains that will be resolve with
              the correct IP addresses.
            type: string
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          publishable_key:
            description: Publishable key
            type: string
          secret_key:
            description: Secret key
            type: string
          send_email_confirmation:
            description: Send billing confirmation
            type: string
          style:
            description: The type of payment the user will make. Charge is a one time
              fee, subscription will be a recurring fee.
            type: string
          test_mode:
            description: Test mode
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - domains
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          description:
            description: Description
            type: string
          email_required:
            description: Email required
            type: string
          id:
            description: Name
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          description:
            description: Description
            type: string
          host:
            description: Host
            type: string
          id:
            description: Name
            type: string
          monitor:
            description: Do you want to monitor this source?
            type: string
          port:
            description: Port
            type: integer
          realms:
            description: Realms that will be associated with this source
            items:
              description: Realms that will be associated with this source
              type: string
            type: array
          secret:
            description: Secret
            type: string
          timeout:
            description: Timeout
            type: integer
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - host
        - port
        - secret
        - timeout
        type: object
      - properties:
          activation_domain:
            description: Set this value if you want to change the hostname in the
              validation link. Changing this requires to restart haproxy to be fully
              effective.
            type: string
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          allow_localdomain:
            description: Accept self-registration with email address from the local
              domain
            type: string
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          description:
            description: Description
            type: string
          email_activation_timeout:
            description: Delay given to a sponsor to click the activation link.
            properties:
              interval:
                description: Interval
                type: integer
              unit:
                description: Unit
                type: string
            type: object
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          sponsorship_bcc:
            description: Sponsors requesting access and access confirmation emails
              are BCC'ed to this address. Multiple destinations can be comma separated.
            type: string
          type:
            description: Type
            type: string
          validate_sponsor:
            description: Force sponsor to authenticate when validating a guest request.
            type: string
        required:
        - id
        - description
        - email_activation_timeout
        type: object
      - properties:
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          basedn:
            description: Base DN
            type: string
          binddn:
            description: Leave this field empty if you want to perform an anonymous
              bind.
            type: string
          cache_match:
            description: Will cache results of matching a rule
            type: string
          connection_timeout:
            description: LDAP connection Timeout
            type: string
          description:
            description: Description
            type: string
          email_attribute:
            description: LDAP attribute name that stores the email address against
              which the filter will match.
            type: string
          encryption:
            description: Encryption
            type: string
          host:
            description: Host
            type: string
          id:
            description: Name
            type: string
          monitor:
            description: Do you want to monitor this source?
            type: string
          password:
            description: Password
            type: string
          port:
            description: Port
            type: integer
          read_timeout:
            description: LDAP response timeout
            type: string
          realms:
            description: Realms that will be associated with this source
            items:
              description: Realms that will be associated with this source
              type: string
            type: array
          scope:
            description: Scope
            type: string
          shuffle:
            description: Randomly choose LDAP server to query
            type: string
          type:
            description: Type
            type: string
          usernameattribute:
            description: Username Attribute
            type: string
          write_timeout:
            description: LDAP request timeout
            type: string
        required:
        - id
        - description
        - encryption
        - basedn
        - scope
        - usernameattribute
        type: object
      - properties:
          access_token_param:
            description: Access Token Parameter
            type: string
          access_token_path:
            description: API Token Path
            type: string
          administration_rules:
            description: Administration Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authentication_rules:
            description: Authentication Rules
            items:
              description: Rule - New (  )
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      type:
                        description: Type
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                conditions:
                  description: Conditions
                  items:
                    description: Condition
                    properties:
                      attribute:
                        description: Attribute
                        type: string
                      operator:
                        description: Operator
                        type: string
                      value:
                        description: Value
                        type: string
                    type: object
                  type: array
                description:
                  description: Description
                  type: string
                id:
                  description: Name
                  type: string
                match:
                  description: Matches
                  type: string
              type: object
            type: array
          authorize_path:
            description: API Authorize Path
            type: string
          client_id:
            description: API ID
            type: string
          client_secret:
            description: API Secret
            type: string
          create_local_account:
            description: Create a local account on the PacketFence system based on
              the username provided.
            type: string
          description:
            description: Description
            type: string
          domains:
            description: Comma separated list of domains that will be resolve with
              the correct IP addresses.
            type: string
          id:
            description: Name
            type: string
          local_account_logins:
            description: The amount of times, the local account can be used after
              its created. 0 means infinite.
            type: integer
          protected_resource_url:
            description: API URL of logged user
            type: string
          redirect_url:
            description: The hostname must be the one of your captive portal.
            type: string
          scope:
            description: The permissions the application requests.
            type: string
          site:
            description: API URL
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - description
        - client_id
        - client_secret
        - site
        - authorize_path
        - access_token_path
        - access_token_param
        - scope
        - protected_resource_url
        - redirect_url
        - domains
        type: object
    ConfigSourcesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigSource'
            type: array
        type: object
      description: List
    ConfigSwitch:
      properties:
        AccessListMap:
          description: Role by access list
          type: string
        ExternalPortalEnforcement:
          description: Enable external portal enforcement when supported by network
            equipment
          type: string
        RoleMap:
          description: Role by Switch Role
          type: string
        SNMPAuthPasswordRead:
          description: Auth Password Read
          type: string
        SNMPAuthPasswordTrap:
          description: Auth Password Trap
          type: string
        SNMPAuthPasswordWrite:
          description: Auth Password Write
          type: string
        SNMPAuthProtocolRead:
          description: Auth Protocol Read
          type: string
        SNMPAuthProtocolTrap:
          description: Auth Protocol Trap
          type: string
        SNMPAuthProtocolWrite:
          description: Auth Protocol Write
          type: string
        SNMPCommunityRead:
          description: Community Read
          type: string
        SNMPCommunityTrap:
          description: Community Trap
          type: string
        SNMPCommunityWrite:
          description: Community Write
          type: string
        SNMPEngineID:
          description: Engine ID
          type: string
        SNMPPrivPasswordRead:
          description: Priv Password Read
          type: string
        SNMPPrivPasswordTrap:
          description: Priv Password Trap
          type: string
        SNMPPrivPasswordWrite:
          description: Priv Password Write
          type: string
        SNMPPrivProtocolRead:
          description: Priv Protocol Read
          type: string
        SNMPPrivProtocolTrap:
          description: Priv Protocol Trap
          type: string
        SNMPPrivProtocolWrite:
          description: Priv Protocol Write
          type: string
        SNMPUserNameRead:
          description: User Name Read
          type: string
        SNMPUserNameTrap:
          description: User Name Trap
          type: string
        SNMPUserNameWrite:
          description: User Name Write
          type: string
        SNMPVersion:
          description: Version
          type: string
        SNMPVersionTrap:
          description: Version Trap
          type: string
        UrlMap:
          description: Role by Web Auth URL
          type: string
        VlanMap:
          description: Role by VLAN ID
          type: string
        VoIPCDPDetect:
          description: Detect VoIP with a SNMP request in the CDP MIB
          type: string
        VoIPDHCPDetect:
          description: Detect VoIP with the DHCP Fingerprint
          type: string
        VoIPEnabled:
          description: VoIP
          type: string
        VoIPLLDPDetect:
          description: Detect VoIP with a SNMP request in the LLDP MIB
          type: string
        always_trigger:
          description: Always trigger
          type: string
        cliAccess:
          description: Allow this switch to use PacketFence as a radius server for
            CLI access
          type: string
        cliEnablePwd:
          description: Enable Password
          type: string
        cliPwd:
          description: Password
          type: string
        cliTransport:
          description: Transport
          type: string
        cliUser:
          description: Username
          type: string
        coaPort:
          description: For CoA request, if we have to send to another port
          type: integer
        controllerIp:
          description: Use instead this IP address for de-authentication requests.
            Normally used for Wi-Fi only
          type: string
        deauthMethod:
          description: Deauthentication Method
          type: string
        description:
          description: Description
          type: string
        disconnectPort:
          description: For Disconnect request, if we have to send to another port
          type: integer
        group:
          description: Changing the group requires to save to see the new default
            values
          type: string
        id:
          description: IP Address/MAC Address/Range (CIDR)
          type: string
        inlineTrigger:
          description: InlineTrigger
          items:
            description: InlineTrigger
            properties:
              type:
                description: Type
                type: string
              value:
                description: Value
                type: string
            type: object
          type: array
        macSearchesMaxNb:
          description: Maximum number of MAC addresses retrived from a port
          type: integer
        macSearchesSleepInterval:
          description: Sleep interval between queries of MAC addresses
          type: integer
        mac_trigger:
          description: Mac trigger
          type: string
        mode:
          description: Mode
          type: string
        port_trigger:
          description: Port trigger
          type: integer
        radiusSecret:
          description: Secret Passphrase
          type: string
        ssid_trigger:
          description: Ssid trigger
          type: string
        type:
          description: Type
          type: string
        uplink:
          description: Comma-separated list of the switch uplinks
          type: string
        uplink_dynamic:
          description: Dynamically lookup uplinks
          type: string
        useCoA:
          description: Use CoA when available to deauthenticate the user. When disabled,
            RADIUS Disconnect will be used instead if it is available.
          type: string
        wsPwd:
          description: Password
          type: string
        wsTransport:
          description: Transport
          type: string
        wsUser:
          description: Username
          type: string
      required:
      - id
      type: object
    ConfigSwitchGroup:
      properties:
        AccessListMap:
          description: Role by access list
          type: string
        ExternalPortalEnforcement:
          description: Enable external portal enforcement when supported by network
            equipment
          type: string
        REJECTAccessList:
          description: REJECT
          type: string
        REJECTRole:
          description: REJECT
          type: string
        REJECTUrl:
          description: REJECT
          type: string
        REJECTVlan:
          description: REJECT
          type: string
        RoleMap:
          description: Role by Switch Role
          type: string
        SNMPAuthPasswordRead:
          description: Auth Password Read
          type: string
        SNMPAuthPasswordTrap:
          description: Auth Password Trap
          type: string
        SNMPAuthPasswordWrite:
          description: Auth Password Write
          type: string
        SNMPAuthProtocolRead:
          description: Auth Protocol Read
          type: string
        SNMPAuthProtocolTrap:
          description: Auth Protocol Trap
          type: string
        SNMPAuthProtocolWrite:
          description: Auth Protocol Write
          type: string
        SNMPCommunityRead:
          description: Community Read
          type: string
        SNMPCommunityTrap:
          description: Community Trap
          type: string
        SNMPCommunityWrite:
          description: Community Write
          type: string
        SNMPEngineID:
          description: Engine ID
          type: string
        SNMPPrivPasswordRead:
          description: Priv Password Read
          type: string
        SNMPPrivPasswordTrap:
          description: Priv Password Trap
          type: string
        SNMPPrivPasswordWrite:
          description: Priv Password Write
          type: string
        SNMPPrivProtocolRead:
          description: Priv Protocol Read
          type: string
        SNMPPrivProtocolTrap:
          description: Priv Protocol Trap
          type: string
        SNMPPrivProtocolWrite:
          description: Priv Protocol Write
          type: string
        SNMPUserNameRead:
          description: User Name Read
          type: string
        SNMPUserNameTrap:
          description: User Name Trap
          type: string
        SNMPUserNameWrite:
          description: User Name Write
          type: string
        SNMPVersion:
          description: Version
          type: string
        SNMPVersionTrap:
          description: Version Trap
          type: string
        UrlMap:
          description: Role by Web Auth URL
          type: string
        VlanMap:
          description: Role by VLAN ID
          type: string
        VoIPCDPDetect:
          description: Detect VoIP with a SNMP request in the CDP MIB
          type: string
        VoIPDHCPDetect:
          description: Detect VoIP with the DHCP Fingerprint
          type: string
        VoIPEnabled:
          description: VoIP
          type: string
        VoIPLLDPDetect:
          description: Detect VoIP with a SNMP request in the LLDP MIB
          type: string
        always_trigger:
          description: Always trigger
          type: string
        cliAccess:
          description: Allow this switch to use PacketFence as a radius server for
            CLI access
          type: string
        cliEnablePwd:
          description: Enable Password
          type: string
        cliPwd:
          description: Password
          type: string
        cliTransport:
          description: Transport
          type: string
        cliUser:
          description: Username
          type: string
        coaPort:
          description: For CoA request, if we have to send to another port
          type: integer
        controllerIp:
          description: Use instead this IP address for de-authentication requests.
            Normally used for Wi-Fi only
          type: string
        deauthMethod:
          description: Deauthentication Method
          type: string
        defaultAccessList:
          description: default
          type: string
        defaultRole:
          description: default
          type: string
        defaultUrl:
          description: default
          type: string
        defaultVlan:
          description: default
          type: string
        description:
          description: Description
          type: string
        disconnectPort:
          description: For Disconnect request, if we have to send to another port
          type: integer
        gamingAccessList:
          description: gaming
          type: string
        gamingRole:
          description: gaming
          type: string
        gamingUrl:
          description: gaming
          type: string
        gamingVlan:
          description: gaming
          type: string
        group:
          description: Group
          type: string
        guestAccessList:
          description: guest
          type: string
        guestRole:
          description: guest
          type: string
        guestUrl:
          description: guest
          type: string
        guestVlan:
          description: guest
          type: string
        id:
          description: Group name
          type: string
        inlineAccessList:
          description: inline
          type: string
        inlineRole:
          description: inline
          type: string
        inlineTrigger:
          description: InlineTrigger
          items:
            description: InlineTrigger
            properties:
              type:
                description: Type
                type: string
              value:
                description: Value
                type: string
            type: object
          type: array
        inlineUrl:
          description: inline
          type: string
        inlineVlan:
          description: inline
          type: string
        isolationAccessList:
          description: isolation
          type: string
        isolationRole:
          description: isolation
          type: string
        isolationUrl:
          description: isolation
          type: string
        isolationVlan:
          description: isolation
          type: string
        macSearchesMaxNb:
          description: Maximum number of MAC addresses retrived from a port
          type: integer
        macSearchesSleepInterval:
          description: Sleep interval between queries of MAC addresses
          type: integer
        mac_trigger:
          description: Mac trigger
          type: string
        mode:
          description: Mode
          type: string
        port_trigger:
          description: Port trigger
          type: integer
        radiusSecret:
          description: Secret Passphrase
          type: string
        registrationAccessList:
          description: registration
          type: string
        registrationRole:
          description: registration
          type: string
        registrationUrl:
          description: registration
          type: string
        registrationVlan:
          description: registration
          type: string
        ssid_trigger:
          description: Ssid trigger
          type: string
        type:
          description: Type
          type: string
        uplink:
          description: Comma-separated list of the switch uplinks
          type: string
        uplink_dynamic:
          description: Dynamically lookup uplinks
          type: string
        useCoA:
          description: Use CoA when available to deauthenticate the user. When disabled,
            RADIUS Disconnect will be used instead if it is available.
          type: string
        voiceAccessList:
          description: voice
          type: string
        voiceRole:
          description: voice
          type: string
        voiceUrl:
          description: voice
          type: string
        voiceVlan:
          description: voice
          type: string
        wsPwd:
          description: Password
          type: string
        wsTransport:
          description: Transport
          type: string
        wsUser:
          description: Username
          type: string
      required:
      - id
      type: object
    ConfigSwitchGroupsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigSwitchGroup'
            type: array
        type: object
      description: List
    ConfigSwitchesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigSwitch'
            type: array
        type: object
      description: List
    ConfigSyslogParser:
      discriminator:
        propertyName: type
      oneOf:
      - properties:
          id:
            description: Detector
            type: string
          path:
            description: Alert pipe
            type: string
          status:
            description: Enabled
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - path
        - type
        type: object
      - properties:
          id:
            description: Detector
            type: string
          path:
            description: Alert pipe
            type: string
          status:
            description: Enabled
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - path
        - type
        type: object
      - properties:
          id:
            description: Detector
            type: string
          loglines:
            description: Loglines
            type: string
          path:
            description: Alert pipe
            type: string
          rules:
            description: Rules
            items:
              description: Rule - New
              properties:
                actions:
                  description: Actions
                  items:
                    description: Action
                    properties:
                      api_method:
                        description: Api method
                        type: string
                      api_parameters:
                        description: Api parameters
                        type: string
                    type: object
                  type: array
                ip_mac_translation:
                  description: Perform automatic translation of IPs to MACs and the
                    other way around
                  type: string
                last_if_match:
                  description: Stop processing rules if this rule matches
                  type: string
                name:
                  description: Name
                  type: string
                regex:
                  description: Regex
                  type: string
              type: object
            type: array
          status:
            description: Enabled
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - path
        - type
        type: object
      - properties:
          id:
            description: Detector
            type: string
          path:
            description: Alert pipe
            type: string
          status:
            description: Enabled
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - path
        - type
        type: object
      - properties:
          id:
            description: Detector
            type: string
          path:
            description: Alert pipe
            type: string
          status:
            description: Enabled
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - path
        - type
        type: object
      - properties:
          id:
            description: Detector
            type: string
          path:
            description: Alert pipe
            type: string
          status:
            description: Enabled
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - path
        - type
        type: object
      - properties:
          id:
            description: Detector
            type: string
          path:
            description: Alert pipe
            type: string
          status:
            description: Enabled
            type: string
          type:
            description: Type
            type: string
        required:
        - id
        - path
        - type
        type: object
    ConfigSyslogParserDryRun:
      properties:
        line:
          description: Line
          type: string
        matches:
          description: The array of matches
          items:
            $ref: '#/components/schemas/ConfigSyslogParserDryRunMatch'
          type: array
      type: object
    ConfigSyslogParserDryRunAction:
      description: Action
      properties:
        api_method:
          description: Api method
          type: string
        api_parameters:
          description: Api parameters
          type: string
      type: object
    ConfigSyslogParserDryRunList:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ConfigSyslogParserDryRun'
          type: array
      type: object
    ConfigSyslogParserDryRunMatch:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ConfigSyslogParserDryRunAction'
          type: array
        rule:
          $ref: '#/components/schemas/ConfigSyslogParserDryRunRule'
        success:
          type: integer
      type: object
    ConfigSyslogParserDryRunRule:
      description: Rule
      properties:
        actions:
          description: Actions
          items:
            description: Action
            properties:
              api_method:
                description: Api method
                type: string
              api_parameters:
                description: Api parameters
                type: string
            type: object
          type: array
        ip_mac_translation:
          description: Perform automatic translation of IPs to MACs and the other
            way around
          type: string
        last_if_match:
          description: Stop processing rules if this rule matches
          type: string
        name:
          description: Name
          type: string
        regex:
          description: Regex
          type: string
      type: object
    ConfigSyslogParsersList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigSyslogParser'
            type: array
        type: object
      description: List
    ConfigTrafficShapingPoliciesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigTrafficShapingPolicy'
            type: array
        type: object
      description: List
    ConfigTrafficShapingPolicy:
      properties:
        download:
          description: Bandwidth must be in the following format 'nXY' where XY is
            one of the following KB,MB,GB,TB,PB
          type: string
        id:
          description: Role
          type: string
        upload:
          description: Bandwidth must be in the following format 'nXY' where XY is
            one of the following KB,MB,GB,TB,PB
          type: string
      required:
      - id
      type: object
    ConfigWMIRule:
      properties:
        action:
          description: Add an action based on the result of the request
          type: string
        id:
          description: Name
          type: string
        namespace:
          description: Namespace
          type: string
        on_tab:
          description: Scan this WMI element while editing a node
          type: string
        request:
          description: Request
          type: string
      required:
      - id
      - request
      - namespace
      - action
      type: object
    ConfigWMIRulesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: List
            items:
              $ref: '#/components/schemas/ConfigWMIRule'
            type: array
        type: object
      description: List
    DhcpInterfaceStats:
      description: The schema used for a collection of interface initialization and
        statistics
      items:
        description: Statistics of the DHCP scope
        properties:
          category:
            description: Associated role of the DHCP scope
            type: string
          free:
            description: Available number of IPv4 addresses in the DHCP scope
            type: integer
          interface:
            description: Network interface name where the DHCP scope is provided
            type: string
          members:
            description: A collection of MAC address and IPv4 address pairs
            items:
              description: A MAC address and IPv4 address pair
              properties:
                ip:
                  description: The MAC address of the DHCP member
                  type: string
                mac:
                  description: The IPv4 address of the DHCP member
                  type: string
              type: object
            type: array
          network:
            description: Network address
            type: string
          options:
            description: Dhcp options of the DHCP scope
            properties:
              optionDomainName:
                description: Domain name
                type: string
              optionDomainNameServer:
                description: DNS IPv4 addresses
                type: string
              optionIPAddressLeaseTime:
                description: Lease time
                type: string
              optionRouter:
                description: Gateway IPv4 addresses
                type: string
              optionSubnetMask:
                description: Netmask
                type: string
            type: object
          status:
            description: Status of the DHCP scope
            enum:
            - Normal
            - Calculated available IP X is different than what we have available in
              the pool Y
            - Init Lease success
            type: string
        type: object
      type: array
    DhcpMacIp:
      description: The schema used when returning a DHCP MAC address and IPv4 address
        pair
      properties:
        ip:
          description: The IPv4 address
          type: string
        mac:
          description: The MAC address
          type: string
      type: object
    DhcpMacResponse:
      description: The schema used when options are added or deleted from a MAC address
      properties:
        mac:
          description: The MAC address
          type: string
        status:
          description: Whether the request succeeded "ACK", or failed "NAK"
          enum:
          - ACK
          - NAK
          type: string
      type: object
    DhcpNetworkResponse:
      description: The schema used when options are added or deleted from a Network
      properties:
        network:
          description: The networks IPv4 address
          type: string
        status:
          description: Whether the request succeeded "ACK", or failed "NAK"
          enum:
          - ACK
          - NAK
          type: string
      type: object
    DhcpOption82:
      properties:
        circuit_id_string:
          type: string
        created_at:
          type: string
        host:
          type: string
        mac:
          type: string
        module:
          type: string
        option82_switch:
          type: string
        port:
          type: string
        switch_id:
          type: string
        vlan:
          type: string
      type: object
    DhcpOption82sList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: Items
            items:
              $ref: '#/components/schemas/DhcpOption82'
            type: array
        type: object
    DynamicReport:
      properties:
        base_conditions:
          description: 'Comma delimited conditions that should be applied to the report.
            This can be used to filter the report without using the search in the
            administration interface to provide the proper unsearched view. Conditions
            should match the following format : field:operator:value (ex: auth_log.source:=:sms,auth_log.status:!=:completed).'
          type: string
        base_conditions_operator:
          description: Whether the base conditions should be matched using an all
            or any logic. Accepted values are all and any.
          type: string
        base_table:
          description: The base SQL table that will be used to create the view
          type: string
        columns:
          description: 'The columns to select from the table(s) '
          type: string
        date_field:
          description: The field to use for date filtering. Will also be used as default
            sorting field unless order_fields is set in the report.
          type: string
        description:
          description: The user friendly description that will display for this report
          type: string
        group_field:
          description: The field to group the entries by. No grouping is done if this
            field is omitted or empty.
          type: string
        joins:
          description: 'The tables to join to the base table and how to join them. '
          type: string
        node_fields:
          description: The fields in your report that represent a node in the PacketFence
            database. Field values in this field will be clickable and will allow
            to view/modify the values of the node in question. The fields must be
            listed with the name they have in the report header without any quotes
            and are comma delimited.
          type: string
        order_fields:
          description: 'Comma delimited fields for the ordering of the report. The
            field should be prefixed of - if the sort should be made in descending
            order for the field '
          type: string
        person_fields:
          description: The fields in your report that represent a user in the PacketFence
            database. Field values in this field will be clickable and will allow
            to view/modify the values of the user in question. The fields must be
            listed with the name they have in the report header without any quotes
            and are comma delimited.
          type: string
        searches:
          description: 'Comma delimited searches that should be available on the report.
            Should match the following format type:Display Name:field (ex: string:Username:auth_log.pid).'
          type: string
        type:
          description: Determines what type of report this is. Setting type=built-in
            will make this report appear in "Other reports", omitting it will display
            it in "Custom reports" when viewing it in the administration interface.
            When in doubt, simply omit this parameter.
          type: string
      type: object
    DynamicReportSearch:
      properties:
        cursor:
          description: The cursor pointer to fetch the data (value should be taken
            from previousCursor and nextCursor)
          type: string
        fields:
          description: Comma delimited fields that should be added to the resource
            by performing joins. For example, in order to get the IP address of a
            node when calling the nodes endpoints, setting 'ip4log.ip' into this field
            will provide the latest IP address of the device in the 'ip4log.ip' field
            of every node that is returned.
          type: string
        limit:
          description: The maximum amount of entries to get.
          type: string
        query:
          $ref: '#/components/schemas/Query'
        sort:
          description: A list of fields to sort on along with the ordering way (ASC
            or DESC).
          type: string
      type: object
    DynamicReportSearchResult:
      properties:
        items:
          description: Items
          items:
            type: object
          type: array
        nextCursor:
          description: The cursor to access the data after the one returned in the
            response
          type: integer
        previousCursor:
          description: The cursor to access the data before the one returned in the
            response
          type: integer
        type: object
      type: object
    ErrorsWithMessage:
      properties:
        errors:
          items:
            type: object
          type: array
        message:
          type: string
      type: object
    Ip4log:
      properties:
        end_time:
          type: string
        ip:
          type: string
        mac:
          type: string
        start_time:
          type: string
        tenant_id:
          type: integer
      type: object
    Ip4logsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: Items
            items:
              $ref: '#/components/schemas/Ip4log'
            type: array
        type: object
    Ip6log:
      properties:
        end_time:
          type: string
        ip:
          type: string
        mac:
          type: string
        start_time:
          type: string
        tenant_id:
          type: integer
        type:
          type: string
      type: object
    Ip6logsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: Items
            items:
              $ref: '#/components/schemas/Ip6log'
            type: array
        type: object
    IpsetIp:
      properties:
        ip:
          description: The IPv4 address of the client
          type: string
      type: object
    IpsetMac:
      properties:
        mac:
          description: 'The clients MAC address. example: 01:23:45:67:89:AB'
          type: string
      type: object
    IpsetNetwork:
      properties:
        network:
          description: The IPv4 network identifier
          type: string
      type: object
    IpsetPort:
      properties:
        port:
          description: 'The port to allow through. Can be prefixed with a protocol
            `tcp:` or `udp:`. When the protocol is omited, then the port will be opened
            for both protocols. example: tcp:65535'
          type: string
      type: object
    IpsetRoleId:
      properties:
        role_id:
          description: The client's node
          type: integer
      type: object
    IpsetStatus:
      properties:
        type:
          description: The response status.
          enum:
          - ACK
          - NAK
          type: string
      type: object
    IpsetType:
      properties:
        type:
          description: The Ipset type.
          enum:
          - Reg
          - Unreg
          type: string
      type: object
    Iterable:
      properties:
        nextCursor:
          description: The cursor to access the data after the one returned in the
            response
          type: string
        previousCursor:
          description: The cursor to access the data before the one returned in the
            response
          type: string
        total_count:
          description: The total count of the query
          type: int
      type: object
    Locationlog:
      properties:
        connection_sub_type:
          type: string
        connection_type:
          type: string
        dot1x_username:
          type: string
        end_time:
          type: string
        id:
          type: integer
        ifDesc:
          type: string
        mac:
          type: string
        port:
          type: string
        realm:
          type: string
        role:
          type: string
        session_id:
          type: string
        ssid:
          type: string
        start_time:
          type: string
        stripped_user_name:
          type: string
        switch:
          type: string
        switch_ip:
          type: string
        switch_mac:
          type: string
        tenant_id:
          type: integer
        vlan:
          type: string
      type: object
    LocationlogsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: Items
            items:
              $ref: '#/components/schemas/Locationlog'
            type: array
        type: object
    Message:
      properties:
        message:
          description: A meaninful user readable message about what happened
          type: string
      type: object
    Node:
      properties:
        autoreg:
          type: string
        bandwidth_balance:
          type: integer
        bypass_role_id:
          type: integer
        bypass_vlan:
          type: string
        category_id:
          type: integer
        computername:
          type: string
        detect_date:
          type: string
        device_class:
          type: string
        device_manufacturer:
          type: string
        device_score:
          type: integer
        device_type:
          type: string
        device_version:
          type: string
        dhcp6_enterprise:
          type: string
        dhcp6_fingerprint:
          type: string
        dhcp_fingerprint:
          type: string
        dhcp_vendor:
          type: string
        last_arp:
          type: string
        last_dhcp:
          type: string
        last_seen:
          type: string
        lastskip:
          type: string
        mac:
          type: string
        machine_account:
          type: string
        notes:
          type: string
        pid:
          type: string
        regdate:
          type: string
        sessionid:
          type: string
        status:
          type: string
        tenant_id:
          type: integer
        time_balance:
          type: integer
        unregdate:
          type: string
        user_agent:
          type: string
        voip:
          type: string
      type: object
    NodeCategoriesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: Items
            items:
              $ref: '#/components/schemas/NodeCategory'
            type: array
        type: object
    NodeCategory:
      properties:
        category_id:
          type: integer
        max_nodes_per_pid:
          type: integer
        name:
          type: string
        notes:
          type: string
      type: object
    NodesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: Items
            items:
              $ref: '#/components/schemas/Node'
            type: array
        type: object
    Password:
      properties:
        access_duration:
          description: The access duration that should be given to a node when this
            account is used is used to register a device
          type: string
        access_level:
          description: The administrative access level that should be given to the
            user when he logs into the administration interface
          type: string
        category:
          description: The node category ID that should be given to a node when this
            account is used to register a device
          type: integer
        expiration:
          description: The date at which the password expires (becomes invalid)
          type: string
        login_remaining:
          description: The amount of logins that the user has remaining. When null,
            the user has unlimited logins
          type: integer
        password:
          description: The password of the local account. When encrypted, it is prefixed
            by the encryption type surrounded by brackets. For example "{ntlm}iosnuiofsauionsfdioun"
          type: string
        pid:
          description: The username of the local account
          type: string
        sponsor:
          description: Whether or not this account can be used to sponsor other users
            via a SponsorEmail source
          type: boolean
        unregdate:
          description: The unregistration date that should be given to a node when
            this account is used to register a device
          type: string
        valid_from:
          description: The date at which the password becomes valid
          type: string
      type: object
    Preference:
      properties:
        id:
          type: string
        value:
          type: string
      type: object
    PreferencesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: Items
            items:
              $ref: '#/components/schemas/Preference'
            type: array
        type: object
    Query:
      example:
        op: and
        values:
        - field: detect_date
          op: between
          values:
          - '2017-01-01 '
          - '2017-01-02 '
        - op: or
          values:
          - field: mac
            op: ends_with
            value: ab:cd
          - field: pid
            op: equals
            value: lzammit
      properties:
        field:
          description: 'The field to perform the search on. It is possible to specify
            fields from other API endpoints (ex: ip4log.ip)'
          type: string
        op:
          description: The operator to use against the value of the field. Can be
            `and`, `or`, `is`, `is_not`, `match`, `not_match`, `contains`, `not_contains`,
            `between` and `not_between`
          type: string
        value:
          description: The search term to use when performing the search using on
            the specified field. This field must be used when the operator performs
            the condition against a single string value.
          type: string
        values:
          description: An array of simple/complex searches to use with the provided
            operator. To be used when the operator expects complex values as arguments.
            Refer to the examples for how to use this efficiently. This field must
            follow the same structure as this schema.
          items:
            type: object
          type: array
      type: object
    QueueStats:
      description: The schema used for a collection of queue stats
      items:
        description: Statistics of the queue
        properties:
          queue:
            description: The name of the queue
            type: string
          stats:
            description: The statistics for the queue
            properties:
              count:
                description: The queue count
                type: integer
              expired:
                description: The collection of expired task counters
                items:
                  description: An expired task
                  properties:
                    count:
                      description: The expired task counter
                      type: integer
                    name:
                      description: The name of the expired task
                      type: string
                  type: object
                type: array
              outstanding:
                description: The collection of outstanding task counters
                items:
                  description: An outstanding task
                  properties:
                    count:
                      description: The outstanding task counter
                      type: integer
                    name:
                      description: The name of the outstanding task
                      type: string
                  type: object
                type: array
            type: object
        type: object
      type: array
    RadiusAuditLog:
      properties:
        auth_status:
          type: string
        auth_type:
          type: string
        auto_reg:
          type: string
        called_station_id:
          type: string
        calling_station_id:
          type: string
        computer_name:
          type: string
        connection_type:
          type: string
        created_at:
          type: string
        eap_type:
          type: string
        event_type:
          type: string
        id:
          type: integer
        ifindex:
          type: string
        ip:
          type: string
        is_phone:
          type: string
        mac:
          type: string
        nas_identifier:
          type: string
        nas_ip_address:
          type: string
        nas_port:
          type: string
        nas_port_id:
          type: string
        nas_port_type:
          type: string
        node_status:
          type: string
        pf_domain:
          type: string
        profile:
          type: string
        radius_reply:
          type: string
        radius_request:
          type: string
        radius_source_ip_address:
          type: string
        realm:
          type: string
        reason:
          type: string
        request_time:
          type: integer
        role:
          type: string
        source:
          type: string
        ssid:
          type: string
        stripped_user_name:
          type: string
        switch_id:
          type: string
        switch_ip_address:
          type: string
        switch_mac:
          type: string
        tenant_id:
          type: integer
        user_name:
          type: string
        uuid:
          type: string
      type: object
    RadiusAuditLogsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: Items
            items:
              $ref: '#/components/schemas/RadiusAuditLog'
            type: array
        type: object
    ReportsActive:
      properties:
        computername:
          description: The hostname of the machine.
          type: string
        detect_date:
          description: The date at which the node was discovered by PacketFence.
          type: date
        last_arp:
          description: The last time PacketFence saw an ARP request for this node.
          type: date
        last_dhcp:
          description: The last time PacketFence saw a DHCP request for this node.
          type: date
        lastskip:
          description: Deprecated parameter.
          type: string
        mac:
          description: The MAC address.
          type: string
        notes:
          description: Custom notes on the node.
          type: string
        os:
          description: The name of the device as detected by Fingerbank.
          type: string
        pid:
          description: The person ID (owner) of the node.
          type: string
        regdate:
          description: The date at which the node was registered.
          type: string
        start_time:
          description: The date/time the node was first seen.
          type: string
        status:
          description: 'The node status (eg: reg|unreg|pending).'
          type: string
        user_agent:
          description: The HTTP user agent of the device as seen by Fingerbank.
          type: string
      type: object
    ReportsActiveList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsActive'
            type: array
        type: object
    ReportsAuthenticationComputername:
      properties:
        computer_name:
          description: The computer name from the radius request.
          type: string
        count:
          description: The individual count for this item.
          type: integer
        percent:
          description: The count weighted against the total of all items expressed
            in percent.
          type: float
      type: object
    ReportsAuthenticationComputernameList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsAuthenticationComputername'
            type: array
        type: object
    ReportsAuthenticationMac:
      properties:
        count:
          description: The individual count for this item.
          type: integer
        mac:
          description: The MAC address.
          type: string
        percent:
          description: The count weighted against the total of all items expressed
            in percent.
          type: float
      type: object
    ReportsAuthenticationMacList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsAuthenticationMac'
            type: array
        type: object
    ReportsAuthenticationSsid:
      properties:
        count:
          description: The individual count for this item.
          type: integer
        percent:
          description: The count weighted against the total of all items expressed
            in percent.
          type: float
        ssid:
          description: The SSID name.
          type: string
      type: object
    ReportsAuthenticationSsidList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsAuthenticationSsid'
            type: array
        type: object
    ReportsAuthenticationUsername:
      properties:
        count:
          description: The individual count for this item.
          type: integer
        percent:
          description: The count weighted against the total of all items expressed
            in percent.
          type: float
        user_name:
          description: The user name from the radius request.
          type: string
      type: object
    ReportsAuthenticationUsernameList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsAuthenticationUsername'
            type: array
        type: object
    ReportsConnectionTypeActiveList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsConnectionTypeCommon'
            type: array
        type: object
    ReportsConnectionTypeCommon:
      properties:
        connection_type:
          description: The client connection type.
          type: string
        connections:
          description: The number of client connections.
          type: integer
        percent:
          description: The number of client connections weighted against the total
            of all items expressed in percent.
          type: float
      type: object
    ReportsConnectionTypeList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsConnectionTypeCommon'
            type: array
        type: object
    ReportsConnectionTypeRegActiveList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsConnectionTypeCommon'
            type: array
        type: object
    ReportsConnectionTypeRegList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsConnectionTypeCommon'
            type: array
        type: object
    ReportsConnectionTypeUnregActiveList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsConnectionTypeCommon'
            type: array
        type: object
    ReportsConnectionTypeUnregList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsConnectionTypeCommon'
            type: array
        type: object
    ReportsInactiveList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsNodeCommon'
            type: array
        type: object
    ReportsNodeBandwidth:
      properties:
        acctinputoctets:
          description: The number in input octets.
          type: integer
        acctoutputoctets:
          description: The number of output octets.
          type: integer
        accttotaloctets:
          description: The sum of input and output octets.
          type: integer
        callingstationid:
          description: The MAC address.
          type: string
      type: object
    ReportsNodeBandwidthList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsNodeBandwidth'
            type: array
        type: object
    ReportsNodeCommon:
      properties:
        computername:
          description: The hostname of the machine.
          type: string
        detect_date:
          description: The date at which the node was discovered by PacketFence.
          type: date
        last_arp:
          description: The last time PacketFence saw an ARP request for this node.
          type: date
        last_dhcp:
          description: The last time PacketFence saw a DHCP request for this node.
          type: date
        lastskip:
          description: Deprecated parameter.
          type: string
        mac:
          description: The MAC address.
          type: string
        notes:
          description: Custom notes on the node.
          type: string
        os:
          description: The name of the device as detected by Fingerbank.
          type: string
        pid:
          description: The person ID (owner) of the node.
          type: string
        regdate:
          description: The date at which the node was registered.
          type: string
        status:
          description: 'The node status (eg: reg|unreg|pending).'
          type: string
        user_agent:
          description: The HTTP user agent of the device as seen by Fingerbank.
          type: string
      type: object
    ReportsOpenViolationsActiveList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsOpenViolationsCommon'
            type: array
        type: object
    ReportsOpenViolationsCommon:
      properties:
        mac:
          description: The MAC address.
          type: string
        owner:
          description: The person ID (owner) of the node.
          type: string
        start_date:
          description: The date/time when the violation was opened.
          type: date
        status:
          description: The status of the violation.
          type: string
        violation:
          description: The name of the violation class.
          type: string
      type: object
    ReportsOpenViolationsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsOpenViolationsCommon'
            type: array
        type: object
    ReportsOs:
      properties:
        count:
          description: The individual count for this item.
          type: integer
        description:
          description: The name of the device as detected by Fingerbank.
          type: string
        dhcp_fingerprint:
          description: The DHCP Option82 fingerprint as detected by Fingerbank.
          type: string
        percent:
          description: The count weighted against the total of all items expressed
            in percent.
          type: float
      type: object
    ReportsOsClass:
      properties:
        count:
          description: The individual count for this item.
          type: integer
        description:
          description: The class of the device as detected by Fingerbank.
          type: string
        percent:
          description: The count weighted against the total of all items expressed
            in percent.
          type: float
      type: object
    ReportsOsClassBandwidth:
      properties:
        accttotaloctets:
          description: The total number of octects transfered (in+out).
          type: string
        dhcp_fingerprint:
          description: The class of the device as detected by Fingerbank.
          type: string
        percent:
          description: The number of octects transfered weighted against the total
            of all items expressed in percent.
          type: float
      type: object
    ReportsOsClassBandwidthList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsOsClassBandwidth'
            type: array
        type: object
    ReportsOsClassList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsOsClass'
            type: array
        type: object
    ReportsOsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsOs'
            type: array
        type: object
    ReportsRegisteredActiveList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsNodeCommon'
            type: array
        type: object
    ReportsRegisteredList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsNodeCommon'
            type: array
        type: object
    ReportsSsidActiveList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsSsidCommon'
            type: array
        type: object
    ReportsSsidCommon:
      properties:
        nodes:
          description: The number of nodes connected.
          type: string
        percent:
          description: The number of nodes weighted against the total of all items
            expressed in percent.
          type: float
        ssid:
          description: The SSID name.
          type: string
      type: object
    ReportsSsidList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsSsidCommon'
            type: array
        type: object
    ReportsStaticsActiveList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsStaticsCommon'
            type: array
        type: object
    ReportsStaticsCommon:
      properties:
        autoreg:
          description: Whether or not the node was autoregistered (i.e. didn't go
            through the captive-portal) (yes|no).
          type: string
        bandwidth_balance:
          description: The amount of bandwidth the device has left on the network.
            This is used only for bandwidth balance access that relies on the accounting
            data.
          type: string
        bypass_role_id:
          description: The category ID (role ID) that acts as an override to the defined
            role in the `category_id` field.
          type: string
        bypass_vlan:
          description: The VLAN to apply on the device to override the one that would
            be defined in the switch configuration for this role.
          type: string
        category_id:
          description: The category ID (role ID) of the node.
          type: string
        computername:
          description: The hostname of the machine.
          type: string
        detect_date:
          description: The date at which the node was discovered by PacketFence.
          type: date
        device_class:
          description: The class of the device as detected by Fingerbank.
          type: string
        device_score:
          description: The confidence level (0 to 100) that Fingerbank has on the
            profiling it did for this node.
          type: integer
        device_type:
          description: The name of the device as detected by Fingerbank.
          type: string
        device_version:
          description: The OS version of the device as detected by Fingerbank.
          type: string
        dhcp6_enterprise:
          description: The DHCPv6 enterprise ID as seen by Fingerbank (used for device
            profiling).
          type: string
        dhcp6_fingerprint:
          description: The DHCPv6 Option82 fingerprint as detected by Fingerbank.
          type: string
        dhcp_fingerprint:
          description: The DHCP Option82 fingerprint as detected by Fingerbank.
          type: string
        dhcp_vendor:
          description: The DHCP vendor as seen by Fingerbank (used for device profiling).
          type: string
        last_arp:
          description: The last time PacketFence saw an ARP request for this node.
          type: date
        last_dhcp:
          description: The last time PacketFence saw a DHCP request for this node.
          type: date
        last_seen:
          description: The last time PacketFence saw this node.
          type: date
        lastskip:
          description: Deprecated parameter.
          type: string
        mac:
          description: The MAC address.
          type: string
        machine_account:
          description: The machine username of this node if it ever did machine authentication
            (only works for Windows hosts or usernames that start with `host/`).
          type: string
        notes:
          description: Custom notes on the node.
          type: string
        pid:
          description: The person ID (owner) of the node.
          type: string
        regdate:
          description: The date at which the node was registered.
          type: string
        sessionid:
          description: The session ID of the device (used for certain switches).
          type: string
        status:
          description: 'The node status (eg: reg|unreg|pending).'
          type: string
        time_balance:
          description: The amount of time the device has left on the network before
            being unregistered. This is used only for time balance access that relies
            on the accounting data.
          type: string
        unregdate:
          description: The date at which the node will be deregistered.
          type: string
        user_agent:
          description: The HTTP user agent of the device as seen by Fingerbank.
          type: string
        voip:
          description: Whether or not the node is a VoIP device for PacketFence (yes|no).
          type: string
      type: object
    ReportsStaticsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsStaticsCommon'
            type: array
        type: object
    ReportsUnknownprintsActiveList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsUnknownprintsCommon'
            type: array
        type: object
    ReportsUnknownprintsCommon:
      properties:
        computername:
          description: The hostname of the machine.
          type: string
        dhcp_fingerprint:
          description: The DHCP Option82 fingerprint as detected by Fingerbank.
          type: string
        mac:
          description: The MAC address.
          type: string
        user_agent:
          description: The HTTP user agent of the device as seen by Fingerbank.
          type: string
      type: object
    ReportsUnknownprintsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsUnknownprintsCommon'
            type: array
        type: object
    ReportsUnregisteredActiveList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsNodeCommon'
            type: array
        type: object
    ReportsUnregisteredList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ReportsNodeCommon'
            type: array
        type: object
    Search:
      properties:
        cursor:
          description: The cursor pointer to fetch the data (value should be taken
            from previousCursor and nextCursor)
          type: string
        fields:
          description: Comma delimited fields that should be added to the resource
            by performing joins. For example, in order to get the IP address of a
            node when calling the nodes endpoints, setting 'ip4log.ip' into this field
            will provide the latest IP address of the device in the 'ip4log.ip' field
            of every node that is returned.
          type: string
        limit:
          description: The maximum amount of entries to get.
          type: string
        query:
          $ref: '#/components/schemas/Query'
        sort:
          description: A list of fields to sort on along with the ordering way (ASC
            or DESC).
          type: string
        with_total_count:
          description: The total count of the query will be returned
          type: boolean
      type: object
    Service:
      properties:
        alive:
          description: Whether the service is alive or not.
          type: integer
        enabled:
          description: Whether the service is enabled or not.
          type: integer
        managed:
          description: Whether the service is managed or not.
          type: integer
        pid:
          description: The service PID.
          type: integer
      type: object
    ServiceDisable:
      properties:
        start:
          description: Whether the service was disabled or not.
          type: integer
      type: object
    ServiceEnable:
      properties:
        start:
          description: Whether the service was enabled or not.
          type: integer
      type: object
    ServiceName:
      type: string
    ServiceRestart:
      properties:
        pid:
          description: The service PID.
          type: integer
        restart:
          description: Whether the service was restarted or not.
          type: integer
      type: object
    ServiceStart:
      properties:
        pid:
          description: The service PID.
          type: integer
        start:
          description: Whether the service was started or not.
          type: integer
      type: object
    ServiceStop:
      properties:
        stop:
          description: Whether the service was stopped or not.
          type: integer
      type: object
    ServicesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/ServiceName'
            type: array
        type: object
    Tenant:
      properties:
        domain_name:
          type: string
        id:
          type: integer
        name:
          type: string
        portal_domain_name:
          type: string
      type: object
    TenantsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: Items
            items:
              $ref: '#/components/schemas/Tenant'
            type: array
        type: object
    User:
      properties:
        address:
          type: string
        anniversary:
          type: string
        apartment_number:
          type: string
        birthday:
          type: string
        building_number:
          type: string
        cell_phone:
          type: string
        company:
          type: string
        custom_field_1:
          type: string
        custom_field_2:
          type: string
        custom_field_3:
          type: string
        custom_field_4:
          type: string
        custom_field_5:
          type: string
        custom_field_6:
          type: string
        custom_field_7:
          type: string
        custom_field_8:
          type: string
        custom_field_9:
          type: string
        email:
          type: string
        firstname:
          type: string
        gender:
          type: string
        lang:
          type: string
        lastname:
          type: string
        nickname:
          type: string
        notes:
          type: string
        pid:
          type: string
        portal:
          type: string
        potd:
          type: string
        psk:
          type: string
        room_number:
          type: string
        source:
          type: string
        sponsor:
          type: string
        telephone:
          type: string
        tenant_id:
          type: integer
        title:
          type: string
        work_phone:
          type: string
      type: object
    UserWithLinks:
      allOf:
      - $ref: '#/components/schemas/User'
      - properties:
          nodes_url:
            description: link to the nodes of this user
            type: string
          password_url:
            description: link to the password (local account) of this user. If there
              is none, the value will be empty.
            type: string
        type: object
    UsersList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: Items
            items:
              $ref: '#/components/schemas/User'
            type: array
        type: object
    UsersNode:
      properties:
        autoreg:
          type: string
        bandwidth_balance:
          type: integer
        bypass_role_id:
          type: integer
        bypass_vlan:
          type: string
        category_id:
          type: integer
        computername:
          type: string
        detect_date:
          type: string
        device_class:
          type: string
        device_manufacturer:
          type: string
        device_score:
          type: integer
        device_type:
          type: string
        device_version:
          type: string
        dhcp6_enterprise:
          type: string
        dhcp6_fingerprint:
          type: string
        dhcp_fingerprint:
          type: string
        dhcp_vendor:
          type: string
        last_arp:
          type: string
        last_dhcp:
          type: string
        last_seen:
          type: string
        lastskip:
          type: string
        mac:
          type: string
        machine_account:
          type: string
        notes:
          type: string
        pid:
          type: string
        regdate:
          type: string
        sessionid:
          type: string
        status:
          type: string
        tenant_id:
          type: integer
        time_balance:
          type: integer
        unregdate:
          type: string
        user_agent:
          type: string
        voip:
          type: string
      type: object
    UsersNodesList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: Items
            items:
              $ref: '#/components/schemas/UsersNode'
            type: array
        type: object
    UsersNodesLocationlog:
      properties:
        connection_sub_type:
          type: string
        connection_type:
          type: string
        dot1x_username:
          type: string
        end_time:
          type: string
        id:
          type: integer
        ifDesc:
          type: string
        mac:
          type: string
        port:
          type: string
        realm:
          type: string
        role:
          type: string
        session_id:
          type: string
        ssid:
          type: string
        start_time:
          type: string
        stripped_user_name:
          type: string
        switch:
          type: string
        switch_ip:
          type: string
        switch_mac:
          type: string
        tenant_id:
          type: integer
        vlan:
          type: string
      type: object
    UsersNodesLocationlogsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: Items
            items:
              $ref: '#/components/schemas/UsersNodesLocationlog'
            type: array
        type: object
    UsersPassword:
      properties:
        access_duration:
          type: string
        access_level:
          type: string
        category:
          type: integer
        expiration:
          type: string
        login_remaining:
          type: integer
        password:
          type: string
        pid:
          type: string
        sponsor:
          type: integer
        tenant_id:
          type: integer
        unregdate:
          type: string
        valid_from:
          type: string
      type: object
    UsersPasswordList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            description: Items
            items:
              $ref: '#/components/schemas/UsersPassword'
            type: array
        type: object
    WrixLocation:
      properties:
        Client_Support:
          type: string
        Coverage_Area:
          type: string
        English_Location_City:
          type: string
        English_Location_Name:
          type: string
        Latitude:
          type: string
        Location_Address1:
          type: string
        Location_Address2:
          type: string
        Location_Country_Name:
          type: string
        Location_Identifier:
          type: string
        Location_Phone_Number:
          type: string
        Location_State_Province_Name:
          type: string
        Location_Type:
          type: string
        Location_URL:
          type: string
        Location_Zip_Postal_Code:
          type: string
        Longitude:
          type: string
        MAC_Address:
          type: string
        Open_Friday:
          type: string
        Open_Monday:
          type: string
        Open_Saturday:
          type: string
        Open_Sunday:
          type: string
        Open_Thursday:
          type: string
        Open_Tuesday:
          type: string
        Open_Wednesday:
          type: string
        Provider_Identifier:
          type: string
        Restricted_Access:
          type: string
        SSID_1X:
          type: string
        SSID_1X_Broadcasted:
          type: string
        SSID_Broadcasted:
          type: string
        SSID_Open_Auth:
          type: string
        Security_Protocol_1X:
          type: string
        Service_Provider_Brand:
          type: string
        Sub_Location_Type:
          type: string
        UTC_Timezone:
          type: string
        WEP_Key:
          type: string
        WEP_Key_Entry_Method:
          type: string
        WEP_Key_Size:
          type: string
        id:
          type: string
      required: []
      type: object
    WrixLocationsList:
      allOf:
      - $ref: '#/components/schemas/Iterable'
      - properties:
          items:
            items:
              $ref: '#/components/schemas/WrixLocation'
            type: array
        type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  description: A JSON HTTP API to access and manipulate the PacketFence resources.
    Backward compatibility is currently not 100% guaranteed although we will do our
    best effort to keep API calls as described here.
  title: PacketFence API
  version: 1.0.0
openapi: 3.0.0
paths:
  /class/{class_id}:
    description: pf::UnifiedApi::Controller::Classes
    get:
      description: Get an item
      operationId: api.v1.Classes.get
      parameters:
      - in: path
        name: class_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  item:
                    $ref: '#/components/schemas/Class'
                type: object
          description: Get item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /classes:
    description: pf::UnifiedApi::Controller::Classes
    get:
      description: List items
      operationId: api.v1.Classes.list
      parameters:
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/sort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /classes/search:
    description: pf::UnifiedApi::Controller::Classes
    post:
      operationId: api.v1.Classes.search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /cluster/servers:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterServers'
          description: List of the servers in the cluster
      summary: Returns a list of the servers in the cluster
  /config/admin_role/{admin_role_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::AdminRoles.remove
      parameters:
      - in: path
        name: admin_role_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::AdminRoles
    get:
      description: Get an item
      operationId: api.v1.Config::AdminRoles.get
      parameters:
      - in: path
        name: admin_role_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigAdminRole'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::AdminRoles.update
      parameters:
      - in: path
        name: admin_role_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigAdminRole'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::AdminRoles.replace
      parameters:
      - in: path
        name: admin_role_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigAdminRole'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/admin_roles:
    description: pf::UnifiedApi::Controller::Config::AdminRoles
    get:
      description: List items
      operationId: api.v1.Config::AdminRoles.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigAdminRolesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/base/{base_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::Bases.remove
      parameters:
      - in: path
        name: base_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::Bases
    get:
      description: Get an item
      operationId: api.v1.Config::Bases.get
      parameters:
      - in: path
        name: base_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigBase'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::Bases.update
      parameters:
      - in: path
        name: base_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigBase'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::Bases.replace
      parameters:
      - in: path
        name: base_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigBase'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/bases:
    description: pf::UnifiedApi::Controller::Config::Bases
    get:
      description: List items
      operationId: api.v1.Config::Bases.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigBasesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/billing_tier/{billing_tier_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::BillingTiers.remove
      parameters:
      - in: path
        name: billing_tier_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::BillingTiers
    get:
      description: Get an item
      operationId: api.v1.Config::BillingTiers.get
      parameters:
      - in: path
        name: billing_tier_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigBillingTier'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::BillingTiers.update
      parameters:
      - in: path
        name: billing_tier_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigBillingTier'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::BillingTiers.replace
      parameters:
      - in: path
        name: billing_tier_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigBillingTier'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/billing_tiers:
    description: pf::UnifiedApi::Controller::Config::BillingTiers
    get:
      description: List items
      operationId: api.v1.Config::BillingTiers.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigBillingTiersList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/certificate/{certificate_id}:
    description: pf::UnifiedApi::Controller::Config::Certificates
    get:
      description: Get an item
      operationId: api.v1.Config::Certificates.get
      parameters:
      - in: path
        name: certificate_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigCertificate'
          description: Item
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::Certificates.replace
      parameters:
      - in: path
        name: certificate_id
        schema:
          type: string
      - in: query
        name: check_chain
        schema:
          enum:
          - enabled
          - disabled
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigCertificate'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/certificate/{certificate_id}/generate_csr:
    description: pf::UnifiedApi::Controller::Config::Certificates
    put:
      description: Generate a CSR for a certificate resource
      operationId: api.v1.Config::Certificates.generate_csr
      parameters:
      - in: path
        name: certificate_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigCertificateCSR'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/certificate/{certificate_id}/info:
    description: pf::UnifiedApi::Controller::Config::Certificates
    get:
      description: Get an item
      operationId: api.v1.Config::Certificates.get
      parameters:
      - in: path
        name: certificate_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigCertificateInfo'
          description: Item
  /config/certificate/{certificate_id}/lets_encrypt:
    description: pf::UnifiedApi::Controller::Config::Certificates
    put:
      description: Configure Let's Encrypt for a certificate resource
      operationId: api.v1.Config::Certificates.lets_encrypt_update
      parameters:
      - in: path
        name: certificate_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigCertificateLetsEncrypt'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/certificates/lets_encrypt/test:
    description: pf::UnifiedApi::Controller::Config::Certificates
    get:
      description: Test if a specific domain is available for a Let's Encrypt HTTP
        challenge through PacketFence
      operationId: api.v1.Config::Certificates.lets_encrypt_test
      parameters:
      - in: query
        name: domain
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigCertificateReturnValue'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/connection_profile/{connection_profile_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::ConnectionProfiles.remove
      parameters:
      - in: path
        name: connection_profile_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::ConnectionProfiles
    get:
      description: Get an item
      operationId: api.v1.Config::ConnectionProfiles.get
      parameters:
      - in: path
        name: connection_profile_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigConnectionProfile'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::ConnectionProfiles.update
      parameters:
      - in: path
        name: connection_profile_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigConnectionProfile'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::ConnectionProfiles.replace
      parameters:
      - in: path
        name: connection_profile_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigConnectionProfile'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/connection_profiles:
    description: pf::UnifiedApi::Controller::Config::ConnectionProfiles
    get:
      description: List items
      operationId: api.v1.Config::ConnectionProfiles.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigConnectionProfilesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/device_registration/{device_registration_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::DeviceRegistrations.remove
      parameters:
      - in: path
        name: device_registration_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::DeviceRegistrations
    get:
      description: Get an item
      operationId: api.v1.Config::DeviceRegistrations.get
      parameters:
      - in: path
        name: device_registration_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDeviceRegistration'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::DeviceRegistrations.update
      parameters:
      - in: path
        name: device_registration_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigDeviceRegistration'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::DeviceRegistrations.replace
      parameters:
      - in: path
        name: device_registration_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigDeviceRegistration'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/device_registrations:
    description: pf::UnifiedApi::Controller::Config::DeviceRegistrations
    get:
      description: List items
      operationId: api.v1.Config::DeviceRegistrations.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDeviceRegistrationsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/domain/{domain_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::Domains.remove
      parameters:
      - in: path
        name: domain_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::Domains
    get:
      description: Get an item
      operationId: api.v1.Config::Domains.get
      parameters:
      - in: path
        name: domain_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDomain'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::Domains.update
      parameters:
      - in: path
        name: domain_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigDomain'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::Domains.replace
      parameters:
      - in: path
        name: domain_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigDomain'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/domains:
    description: pf::UnifiedApi::Controller::Config::Domains
    get:
      description: List items
      operationId: api.v1.Config::Domains.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDomainsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/firewall/{firewall_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::Firewalls.remove
      parameters:
      - in: path
        name: firewall_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::Firewalls
    get:
      description: Get an item
      operationId: api.v1.Config::Firewalls.get
      parameters:
      - in: path
        name: firewall_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigFirewall'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::Firewalls.update
      parameters:
      - in: path
        name: firewall_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigFirewall'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::Firewalls.replace
      parameters:
      - in: path
        name: firewall_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigFirewall'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/firewalls:
    description: pf::UnifiedApi::Controller::Config::Firewalls
    get:
      description: List items
      operationId: api.v1.Config::Firewalls.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigFirewallsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/floating_device/{floating_device_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::FloatingDevices.remove
      parameters:
      - in: path
        name: floating_device_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: Configure floating devices
    get:
      description: Get an item
      operationId: api.v1.Config::FloatingDevices.get
      parameters:
      - in: path
        name: floating_device_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigFloatingDevice'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::FloatingDevices.update
      parameters:
      - in: path
        name: floating_device_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigFloatingDevice'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::FloatingDevices.replace
      parameters:
      - in: path
        name: floating_device_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigFloatingDevice'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/floating_devices:
    description: Configure floating devices
    get:
      description: List items
      operationId: api.v1.Config::FloatingDevices.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigFloatingDevicesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/interface/{interface_id}:
    delete:
      description: Remove a virtual interface
      parameters:
      - in: path
        name: interface_id
        schema:
          type: string
      responses:
        '200':
          description: Deleted an interface
        '412':
          allOf:
          - $ref: '#/components/responses/Message'
          - description: Failed to respect precondition to delete interface
    get:
      description: Get an item
      parameters:
      - in: path
        name: interface_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigInterfaceGet'
          description: Item
    put:
      description: Update the configuration of an interface
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigInterfaceUpdate'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/interface/{interface_id}/down:
    post:
      description: Put an interface down
      parameters:
      - in: path
        name: interface_id
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '412':
          allOf:
          - $ref: '#/components/responses/Message'
          - description: Failed to respect precondition to put interface down
  /config/interface/{interface_id}/up:
    post:
      description: Put an interface up
      parameters:
      - in: path
        name: interface_id
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '412':
          allOf:
          - $ref: '#/components/responses/Message'
          - description: Failed to respect precondition to put interface up
  /config/interfaces:
    get:
      description: List all interfaces
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigInterfacesList'
          description: Item
    post:
      description: Create a virtual interface
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigInterfaceCreate'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/maintenance_task/{maintenance_task_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::MaintenanceTasks.remove
      parameters:
      - in: path
        name: maintenance_task_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::MaintenanceTasks
    get:
      description: Get an item
      operationId: api.v1.Config::MaintenanceTasks.get
      parameters:
      - in: path
        name: maintenance_task_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigMaintenanceTask'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::MaintenanceTasks.update
      parameters:
      - in: path
        name: maintenance_task_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigMaintenanceTask'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::MaintenanceTasks.replace
      parameters:
      - in: path
        name: maintenance_task_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigMaintenanceTask'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/maintenance_tasks:
    description: pf::UnifiedApi::Controller::Config::MaintenanceTasks
    get:
      description: List items
      operationId: api.v1.Config::MaintenanceTasks.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigMaintenanceTasksList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/pki_provider/{pki_provider_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::PkiProviders.remove
      parameters:
      - in: path
        name: pki_provider_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::PkiProviders
    get:
      description: Get an item
      operationId: api.v1.Config::PkiProviders.get
      parameters:
      - in: path
        name: pki_provider_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigPkiProvider'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::PkiProviders.update
      parameters:
      - in: path
        name: pki_provider_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigPkiProvider'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::PkiProviders.replace
      parameters:
      - in: path
        name: pki_provider_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigPkiProvider'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/pki_providers:
    description: pf::UnifiedApi::Controller::Config::PkiProviders
    get:
      description: List items
      operationId: api.v1.Config::PkiProviders.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigPkiProvidersList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/portal_module/{portal_module_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::PortalModules.remove
      parameters:
      - in: path
        name: portal_module_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::PortalModules
    get:
      description: Get an item
      operationId: api.v1.Config::PortalModules.get
      parameters:
      - in: path
        name: portal_module_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigPortalModule'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::PortalModules.update
      parameters:
      - in: path
        name: portal_module_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigPortalModule'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::PortalModules.replace
      parameters:
      - in: path
        name: portal_module_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigPortalModule'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/portal_modules:
    description: pf::UnifiedApi::Controller::Config::PortalModules
    get:
      description: List items
      operationId: api.v1.Config::PortalModules.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigPortalModulesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/provisioning/{provisioning_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::Provisionings.remove
      parameters:
      - in: path
        name: provisioning_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::Provisionings
    get:
      description: Get an item
      operationId: api.v1.Config::Provisionings.get
      parameters:
      - in: path
        name: provisioning_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigProvisioning'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::Provisionings.update
      parameters:
      - in: path
        name: provisioning_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigProvisioning'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::Provisionings.replace
      parameters:
      - in: path
        name: provisioning_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigProvisioning'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/provisionings:
    description: pf::UnifiedApi::Controller::Config::Provisionings
    get:
      description: List items
      operationId: api.v1.Config::Provisionings.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigProvisioningsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/realm/{realm_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::Realms.remove
      parameters:
      - in: path
        name: realm_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::Realms
    get:
      description: Get an item
      operationId: api.v1.Config::Realms.get
      parameters:
      - in: path
        name: realm_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigRealm'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::Realms.update
      parameters:
      - in: path
        name: realm_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigRealm'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::Realms.replace
      parameters:
      - in: path
        name: realm_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigRealm'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/realms:
    description: pf::UnifiedApi::Controller::Config::Realms
    get:
      description: List items
      operationId: api.v1.Config::Realms.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigRealmsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/role/{role_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::Roles.remove
      parameters:
      - in: path
        name: role_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::Roles
    get:
      description: Get an item
      operationId: api.v1.Config::Roles.get
      parameters:
      - in: path
        name: role_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigRole'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::Roles.update
      parameters:
      - in: path
        name: role_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigRole'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::Roles.replace
      parameters:
      - in: path
        name: role_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigRole'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/roles:
    description: pf::UnifiedApi::Controller::Config::Roles
    get:
      description: List items
      operationId: api.v1.Config::Roles.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigRolesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/scan/{scan_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::Scans.remove
      parameters:
      - in: path
        name: scan_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::Scans
    get:
      description: Get an item
      operationId: api.v1.Config::Scans.get
      parameters:
      - in: path
        name: scan_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigScan'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::Scans.update
      parameters:
      - in: path
        name: scan_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigScan'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::Scans.replace
      parameters:
      - in: path
        name: scan_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigScan'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/scans:
    description: pf::UnifiedApi::Controller::Config::Scans
    get:
      description: List items
      operationId: api.v1.Config::Scans.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigScansList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/source/{source_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::Sources.remove
      parameters:
      - in: path
        name: source_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::Sources
    get:
      description: Get an item
      operationId: api.v1.Config::Sources.get
      parameters:
      - in: path
        name: source_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSource'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::Sources.update
      parameters:
      - in: path
        name: source_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigSource'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::Sources.replace
      parameters:
      - in: path
        name: source_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigSource'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/sources:
    description: pf::UnifiedApi::Controller::Config::Sources
    get:
      description: List items
      operationId: api.v1.Config::Sources.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSourcesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/sources/test:
    description: pf::UnifiedApi::Controller::Config::Sources
    post:
      description: Test Source
      operationId: api.v1.Config::Sources.test
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigSource'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/switch/{switch_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::Switches.remove
      parameters:
      - in: path
        name: switch_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: "pf::UnifiedApi::Controller::Config::Switches\n\n  invalidate_cache\n
      \   invalidate switch cache"
    get:
      description: Get an item
      operationId: api.v1.Config::Switches.get
      parameters:
      - in: path
        name: switch_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSwitch'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::Switches.update
      parameters:
      - in: path
        name: switch_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigSwitch'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::Switches.replace
      parameters:
      - in: path
        name: switch_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigSwitch'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/switch_group/{switch_group_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::SwitchGroups.remove
      parameters:
      - in: path
        name: switch_group_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::SwitchGroups
    get:
      description: Get an item
      operationId: api.v1.Config::SwitchGroups.get
      parameters:
      - in: path
        name: switch_group_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSwitchGroup'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::SwitchGroups.update
      parameters:
      - in: path
        name: switch_group_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigSwitchGroup'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::SwitchGroups.replace
      parameters:
      - in: path
        name: switch_group_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigSwitchGroup'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/switch_groups:
    description: pf::UnifiedApi::Controller::Config::SwitchGroups
    get:
      description: List items
      operationId: api.v1.Config::SwitchGroups.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSwitchGroupsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/switches:
    description: "pf::UnifiedApi::Controller::Config::Switches\n\n  invalidate_cache\n
      \   invalidate switch cache"
    get:
      description: List items
      operationId: api.v1.Config::Switches.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSwitchesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/syslog_parser/{syslog_parser_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::SyslogParsers.remove
      parameters:
      - in: path
        name: syslog_parser_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::SyslogParsers
    get:
      description: Get an item
      operationId: api.v1.Config::SyslogParsers.get
      parameters:
      - in: path
        name: syslog_parser_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSyslogParser'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::SyslogParsers.update
      parameters:
      - in: path
        name: syslog_parser_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigSyslogParser'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::SyslogParsers.replace
      parameters:
      - in: path
        name: syslog_parser_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigSyslogParser'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/syslog_parsers:
    description: pf::UnifiedApi::Controller::Config::SyslogParsers
    get:
      description: List items
      operationId: api.v1.Config::SyslogParsers.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSyslogParsersList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/syslog_parsers/dry_run:
    description: pf::UnifiedApi::Controller::Config::SyslogParsers
    post:
      description: List items
      operationId: api.v1.Config::SyslogParsers.list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigSyslogParser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSyslogParserDryRunList'
          description: Dry run list
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/traffic_shaping_policies:
    description: pf::UnifiedApi::Controller::Config::TrafficShapingPolicies
    get:
      description: List items
      operationId: api.v1.Config::TrafficShapingPolicies.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigTrafficShapingPoliciesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/traffic_shaping_policy/{traffic_shaping_policy_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config::TrafficShapingPolicies.remove
      parameters:
      - in: path
        name: traffic_shaping_policy_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: pf::UnifiedApi::Controller::Config::TrafficShapingPolicies
    get:
      description: Get an item
      operationId: api.v1.Config::TrafficShapingPolicies.get
      parameters:
      - in: path
        name: traffic_shaping_policy_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigTrafficShapingPolicy'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config::TrafficShapingPolicies.update
      parameters:
      - in: path
        name: traffic_shaping_policy_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigTrafficShapingPolicy'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config::TrafficShapingPolicies.replace
      parameters:
      - in: path
        name: traffic_shaping_policy_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigTrafficShapingPolicy'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/wmi_rule/{wmi_rule_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Config.WMIRules.resource.remove
      parameters:
      - in: path
        name: wmi_rule_id
        schema:
          type: string
      responses:
        '204':
          description: Deleted a config item
    description: Configure floating devices
    get:
      description: Get an item
      operationId: api.v1.Config.WMIRules.resource.get
      parameters:
      - in: path
        name: wmi_rule_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigWMIRule'
          description: Item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Config.WMIRules.resource.update
      parameters:
      - in: path
        name: wmi_rule_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigWMIRule'
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Config.WMIRules.resource.replace
      parameters:
      - in: path
        name: wmi_rule_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigWMIRule'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config/wmi_rules:
    description: Configure floating devices
    get:
      description: List items
      operationId: api.v1.Config.WMIRules.list
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigWMIRulesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /dhcp/ip/{ip}:
    get:
      description: Performs a dhcp lookup and returns the MAC address for the given
        IP address lease
      responses:
        '200':
          $ref: '#/components/responses/DhcpMacIp'
      summary: Get a MAC address by IPv4 address
    parameters:
    - in: path
      name: ip
      required: true
      schema:
        type: string
  /dhcp/mac/{mac}:
    delete:
      description: Expires the dhcp lease for a specific MAC address
      responses:
        '200':
          $ref: '#/components/responses/DhcpMacResponse'
      summary: Expire a dhcp lease
    get:
      description: Performs a dhcp lookup and returns the IP address leased for the
        given MAC address
      responses:
        '200':
          $ref: '#/components/responses/DhcpMacIp'
      summary: Get an IPv4 address by MAC address
    parameters:
    - in: path
      name: mac
      required: true
      schema:
        type: string
  /dhcp/options/mac/{mac}:
    delete:
      description: Removes dhcp options for a MAC address
      parameters:
      - in: path
        name: mac
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/DhcpMacResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
      summary: Delete options by MAC address
    parameters:
    - in: path
      name: mac
      required: true
      schema:
        type: string
    post:
      description: Add dhcp options to a MAC address
      parameters:
      - in: path
        name: mac
        required: true
        schema:
          type: string
      responses:
        '200':
          $ref: '#/components/responses/DhcpMacResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
      summary: Add options by MAC address
  /dhcp/options/network/{network}:
    delete:
      description: Removes dhcp options for a Network
      responses:
        '200':
          $ref: '#/components/responses/DhcpNetworkResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
      summary: Delete options by network
    parameters:
    - in: path
      name: network
      required: true
      schema:
        type: string
    post:
      description: Add dhcp options for a Network
      responses:
        '200':
          $ref: '#/components/responses/DhcpNetworkResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
      summary: Add options by network
  /dhcp/stats/{interface}:
    get:
      description: Shows detailed dhcp statistics for the given interface
      responses:
        '200':
          $ref: '#/components/responses/DhcpInterfaceStats'
      summary: Get interface statistics
    parameters:
    - in: path
      name: interface
      required: true
      schema:
        type: string
  /dhcp_option82/{dhcp_option82_id}:
    delete:
      description: Remove an item
      operationId: api.v1.DhcpOption82s.remove
      parameters:
      - in: path
        name: dhcp_option82_id
        schema:
          type: string
      responses:
        '204':
          description: Item deleted
    description: pf::UnifiedApi::Controller::DhcpOption82s
    get:
      description: Get an item
      operationId: api.v1.DhcpOption82s.get
      parameters:
      - in: path
        name: dhcp_option82_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  item:
                    $ref: '#/components/schemas/DhcpOption82'
                type: object
          description: Get item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.DhcpOption82s.update
      parameters:
      - in: path
        name: dhcp_option82_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpOption82'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.DhcpOption82s.replace
      parameters:
      - in: path
        name: dhcp_option82_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpOption82'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /dhcp_option82s:
    description: pf::UnifiedApi::Controller::DhcpOption82s
    get:
      description: List items
      operationId: api.v1.DhcpOption82s.list
      parameters:
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/sort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DhcpOption82sList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      description: Create an item
      operationId: api.v1.DhcpOption82s.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DhcpOption82'
        description: Create item
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Duplicate'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /dhcp_option82s/search:
    description: pf::UnifiedApi::Controller::DhcpOption82s
    post:
      operationId: api.v1.DhcpOption82s.search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DhcpOption82sList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /dynamic_report/{report_id}:
    get:
      description: Get a dynamic report
      operationId: api.v1.DynamicReports.resource.get
      parameters:
      - in: path
        name: report_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  item:
                    $ref: '#/components/schemas/DynamicReport'
                type: object
          description: Get item
        '404':
          $ref: '#/components/responses/NotFound'
  /dynamic_report/{report_id}/search:
    description: Search through a dynamic report
    post:
      operationId: api.v1.DynamicReports.resource.search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicReportSearch'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicReportSearchResult'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /dynamic_reports:
    get:
      description: Get all the dynamic reports
      operationId: api.v1.DynamicReports.list
      parameters:
      - in: path
        name: report_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  items:
                    items:
                      $ref: '#/components/schemas/DynamicReport'
                    type: array
                type: object
          description: Get item
  /ip4log/{ip4log_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Ip4logs.remove
      parameters:
      - in: path
        name: ip4log_id
        schema:
          type: string
      responses:
        '204':
          description: Item deleted
    description: pf::UnifiedApi::Controller::Ip4logs
    get:
      description: Get an item
      operationId: api.v1.Ip4logs.get
      parameters:
      - in: path
        name: ip4log_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  item:
                    $ref: '#/components/schemas/Ip4log'
                type: object
          description: Get item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Ip4logs.update
      parameters:
      - in: path
        name: ip4log_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ip4log'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Ip4logs.replace
      parameters:
      - in: path
        name: ip4log_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ip4log'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /ip4logs:
    description: pf::UnifiedApi::Controller::Ip4logs
    get:
      description: List items
      operationId: api.v1.Ip4logs.list
      parameters:
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/sort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ip4logsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      description: Create an item
      operationId: api.v1.Ip4logs.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ip4log'
        description: Create item
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Duplicate'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /ip4logs/search:
    description: pf::UnifiedApi::Controller::Ip4logs
    post:
      operationId: api.v1.Ip4logs.search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ip4logsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /ip6log/{ip6log_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Ip6logs.remove
      parameters:
      - in: path
        name: ip6log_id
        schema:
          type: string
      responses:
        '204':
          description: Item deleted
    description: pf::UnifiedApi::Controller::Ip6logs
    get:
      description: Get an item
      operationId: api.v1.Ip6logs.get
      parameters:
      - in: path
        name: ip6log_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  item:
                    $ref: '#/components/schemas/Ip6log'
                type: object
          description: Get item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Ip6logs.update
      parameters:
      - in: path
        name: ip6log_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ip6log'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Ip6logs.replace
      parameters:
      - in: path
        name: ip6log_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ip6log'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /ip6logs:
    description: pf::UnifiedApi::Controller::Ip6logs
    get:
      description: List items
      operationId: api.v1.Ip6logs.list
      parameters:
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/sort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ip6logsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      description: Create an item
      operationId: api.v1.Ip6logs.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ip6log'
        description: Create item
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Duplicate'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /ip6logs/search:
    description: pf::UnifiedApi::Controller::Ip6logs
    post:
      operationId: api.v1.Ip6logs.search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ip6logsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /ipset/add_ip/{set_name}:
    post:
      description: Add an IP to a specific ipset
      parameters:
      - $ref: '#/components/parameters/local'
      - $ref: '#/components/parameters/ipset_name'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpsetIp'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/IpsetIp'
        '400':
          $ref: '#/components/responses/BadRequest'
      summary: Add an IP to a specific ipset
  /ipset/mark_ip_layer2:
    post:
      description: Mark IP layer2
      parameters:
      - $ref: '#/components/parameters/local'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpsetIp'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/IpsetIp'
        '400':
          $ref: '#/components/responses/BadRequest'
      summary: Mark IP layer2
  /ipset/mark_ip_layer3:
    post:
      description: Mark IP layer3
      parameters:
      - $ref: '#/components/parameters/local'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpsetIp'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/IpsetIp'
        '400':
          $ref: '#/components/responses/BadRequest'
      summary: Mark IP layer3
  /ipset/mark_layer2:
    post:
      description: '...'
      parameters:
      - $ref: '#/components/parameters/local'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpsetMac'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/IpsetMac'
        '400':
          $ref: '#/components/responses/BadRequest'
      summary: '...'
  /ipset/mark_layer3:
    post:
      description: '...'
      parameters:
      - $ref: '#/components/parameters/local'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpsetIp'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/IpsetIp'
        '400':
          $ref: '#/components/responses/BadRequest'
      summary: '...'
  /ipset/passthrough:
    post:
      description: Passthrough
      parameters:
      - $ref: '#/components/parameters/local'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpsetPort'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/IpsetIp'
        '400':
          $ref: '#/components/responses/BadRequest'
      summary: Passthrough
  /ipset/passthrough_isolation:
    post:
      description: Passthrough Isolation
      parameters:
      - $ref: '#/components/parameters/local'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpsetPort'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/IpsetIp'
        '400':
          $ref: '#/components/responses/BadRequest'
      summary: Passthrough Isolation
  /ipset/remove_ip/{set_name}:
    post:
      description: Removes an IP from a specific ipset
      parameters:
      - $ref: '#/components/parameters/local'
      - $ref: '#/components/parameters/ipset_name'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpsetIp'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/IpsetIp'
        '400':
          $ref: '#/components/responses/BadRequest'
      summary: Removes an IP from a specific ipset
  /ipset/umark_ip:
    post:
      description: '...'
      parameters:
      - $ref: '#/components/parameters/local'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpsetIp'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/IpsetIp'
        '400':
          $ref: '#/components/responses/BadRequest'
      summary: '...'
  /ipset/unmark_mac:
    post:
      description: '...'
      parameters:
      - $ref: '#/components/parameters/local'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpsetMac'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/IpsetMac'
        '400':
          $ref: '#/components/responses/BadRequest'
      summary: '...'
  /locationlog/{locationlog_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Locationlogs.remove
      parameters:
      - in: path
        name: locationlog_id
        schema:
          type: string
      responses:
        '204':
          description: Item deleted
    description: pf::UnifiedApi::Controller::Locationlogs
    get:
      description: Get an item
      operationId: api.v1.Locationlogs.get
      parameters:
      - in: path
        name: locationlog_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  item:
                    $ref: '#/components/schemas/Locationlog'
                type: object
          description: Get item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Locationlogs.update
      parameters:
      - in: path
        name: locationlog_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locationlog'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Locationlogs.replace
      parameters:
      - in: path
        name: locationlog_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locationlog'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /locationlogs:
    description: pf::UnifiedApi::Controller::Locationlogs
    get:
      description: List items
      operationId: api.v1.Locationlogs.list
      parameters:
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/sort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationlogsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      description: Create an item
      operationId: api.v1.Locationlogs.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locationlog'
        description: Create item
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Duplicate'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /locationlogs/search:
    description: pf::UnifiedApi::Controller::Locationlogs
    post:
      operationId: api.v1.Locationlogs.search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationlogsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /login:
    post:
      description: This will perform a login against the PacketFence system user,
        the webservices credentials and any configured internal sources in PacketFence
        in this order. The order of priority for the PacketFence sources is the same
        as they are defined in authentication.conf (top to bottom). Token obtain via
        this API call are valid for 10 minutes. Upon expiration, a new token must
        be obtained by calling this API endpoint again.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                password:
                  type: string
                username:
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  token:
                    type: string
                type: object
          description: Login successful
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
      - none: []
      summary: Login into the API and obtain a token
  /node/{node_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Nodes.remove
      parameters:
      - in: path
        name: node_id
        schema:
          type: string
      responses:
        '204':
          description: Item deleted
    description: "pf::UnifiedApi::Controller::Nodes\n\n  register\n    register\n\n
      \ deregister\n    deregister\n\n  bulk_register\n    bulk_register\n\n  bulk_init_results\n
      \   bulk_init_results\n\n  bulk_deregister\n    bulk_deregister\n\n  fingerbank_info\n
      \   fingerbank_info\n\n  fingerbank_refresh\n    fingerbank_refresh\n\n  bulk_close_violations\n
      \   bulk_close_violations\n\n  close_violation\n    close_violation\n\n  create_error_msg\n
      \   create_error_msg\n\n  bulk_reevaluate_access\n    bulk_reevaluate_access\n\n
      \ bulk_fingerbank_refresh\n    bulk_fingerbank_refresh\n\n  bulk_restart_switchport\n
      \   bulk_restart_switchport\n\n  bulk_apply_violation\n    bulk_apply_violation\n\n
      \ apply_violation\n    apply_violation\n\n  bulk_apply_role\n    bulk_apply_role\n\n
      \ bulk_apply_bypass_role\n    bulk_apply_bypass_role\n\n  do_bulk_update_field\n
      \   do_bulk_update_field\n\n  restart_switchport\n    restart_switchport\n\n
      \ do_restart_switchport\n    do_restart_switchport\n\n  reevaluate_access\n
      \   reevaluate_access"
    get:
      description: Get an item
      operationId: api.v1.Nodes.get
      parameters:
      - in: path
        name: node_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  item:
                    $ref: '#/components/schemas/Node'
                type: object
          description: Get item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Nodes.update
      parameters:
      - in: path
        name: node_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Nodes.replace
      parameters:
      - in: path
        name: node_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /node_categories:
    description: pf::UnifiedApi::Controller::NodeCategories
    get:
      description: List items
      operationId: api.v1.NodeCategories.list
      parameters:
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/sort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeCategoriesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /node_categories/search:
    description: pf::UnifiedApi::Controller::NodeCategories
    post:
      operationId: api.v1.NodeCategories.search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeCategoriesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /node_category/{node_category_id}:
    description: pf::UnifiedApi::Controller::NodeCategories
    get:
      description: Get an item
      operationId: api.v1.NodeCategories.get
      parameters:
      - in: path
        name: node_category_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  item:
                    $ref: '#/components/schemas/NodeCategory'
                type: object
          description: Get item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /nodes:
    description: "pf::UnifiedApi::Controller::Nodes\n\n  register\n    register\n\n
      \ deregister\n    deregister\n\n  bulk_register\n    bulk_register\n\n  bulk_init_results\n
      \   bulk_init_results\n\n  bulk_deregister\n    bulk_deregister\n\n  fingerbank_info\n
      \   fingerbank_info\n\n  fingerbank_refresh\n    fingerbank_refresh\n\n  bulk_close_violations\n
      \   bulk_close_violations\n\n  close_violation\n    close_violation\n\n  create_error_msg\n
      \   create_error_msg\n\n  bulk_reevaluate_access\n    bulk_reevaluate_access\n\n
      \ bulk_fingerbank_refresh\n    bulk_fingerbank_refresh\n\n  bulk_restart_switchport\n
      \   bulk_restart_switchport\n\n  bulk_apply_violation\n    bulk_apply_violation\n\n
      \ apply_violation\n    apply_violation\n\n  bulk_apply_role\n    bulk_apply_role\n\n
      \ bulk_apply_bypass_role\n    bulk_apply_bypass_role\n\n  do_bulk_update_field\n
      \   do_bulk_update_field\n\n  restart_switchport\n    restart_switchport\n\n
      \ do_restart_switchport\n    do_restart_switchport\n\n  reevaluate_access\n
      \   reevaluate_access"
    get:
      description: List items
      operationId: api.v1.Nodes.list
      parameters:
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/sort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      description: Create an item
      operationId: api.v1.Nodes.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
        description: Create item
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Duplicate'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /nodes/search:
    description: "pf::UnifiedApi::Controller::Nodes\n\n  register\n    register\n\n
      \ deregister\n    deregister\n\n  bulk_register\n    bulk_register\n\n  bulk_init_results\n
      \   bulk_init_results\n\n  bulk_deregister\n    bulk_deregister\n\n  fingerbank_info\n
      \   fingerbank_info\n\n  fingerbank_refresh\n    fingerbank_refresh\n\n  bulk_close_violations\n
      \   bulk_close_violations\n\n  close_violation\n    close_violation\n\n  create_error_msg\n
      \   create_error_msg\n\n  bulk_reevaluate_access\n    bulk_reevaluate_access\n\n
      \ bulk_fingerbank_refresh\n    bulk_fingerbank_refresh\n\n  bulk_restart_switchport\n
      \   bulk_restart_switchport\n\n  bulk_apply_violation\n    bulk_apply_violation\n\n
      \ apply_violation\n    apply_violation\n\n  bulk_apply_role\n    bulk_apply_role\n\n
      \ bulk_apply_bypass_role\n    bulk_apply_bypass_role\n\n  do_bulk_update_field\n
      \   do_bulk_update_field\n\n  restart_switchport\n    restart_switchport\n\n
      \ do_restart_switchport\n    do_restart_switchport\n\n  reevaluate_access\n
      \   reevaluate_access"
    post:
      operationId: api.v1.Nodes.search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /preference/{preference_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Preferences.resource.remove
      parameters:
      - in: path
        name: preference_id
        schema:
          type: string
      responses:
        '204':
          description: Item deleted
    get:
      description: Get an item
      operationId: api.v1.Preferences.get
      parameters:
      - in: path
        name: preference_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  item:
                    $ref: '#/components/schemas/Preference'
                type: object
          description: Get item
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Preferences.resource.replace
      parameters:
      - in: path
        name: preference_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preference'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /preferences:
    description: pf::UnifiedApi::Controller::Preferences
    get:
      description: List items
      operationId: api.v1.Preferences.list
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreferencesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /queues/stats:
    get:
      description: Show stats of pfqueue
      responses:
        '200':
          $ref: '#/components/responses/QueueStats'
  /radius_audit_log/{radius_audit_log_id}:
    delete:
      description: Remove an item
      operationId: api.v1.RadiusAuditLogs.remove
      parameters:
      - in: path
        name: radius_audit_log_id
        schema:
          type: string
      responses:
        '204':
          description: Item deleted
    description: pf::UnifiedApi::Controller::RadiusAuditLogs
    get:
      description: Get an item
      operationId: api.v1.RadiusAuditLogs.get
      parameters:
      - in: path
        name: radius_audit_log_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  item:
                    $ref: '#/components/schemas/RadiusAuditLog'
                type: object
          description: Get item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.RadiusAuditLogs.update
      parameters:
      - in: path
        name: radius_audit_log_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiusAuditLog'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.RadiusAuditLogs.replace
      parameters:
      - in: path
        name: radius_audit_log_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiusAuditLog'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /radius_audit_logs:
    description: pf::UnifiedApi::Controller::RadiusAuditLogs
    get:
      description: List items
      operationId: api.v1.RadiusAuditLogs.list
      parameters:
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/sort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusAuditLogsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      description: Create an item
      operationId: api.v1.RadiusAuditLogs.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RadiusAuditLog'
        description: Create item
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Duplicate'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /radius_audit_logs/search:
    description: pf::UnifiedApi::Controller::RadiusAuditLogs
    post:
      operationId: api.v1.RadiusAuditLogs.search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadiusAuditLogsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /reports/active:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsActiveList'
          description: List of active nodes
      summary: Returns a list of active nodes
  /reports/connectiontype:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsConnectionTypeList'
          description: List of connection types
      summary: Returns a list of connection types
  /reports/connectiontype/active:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsConnectionTypeActiveList'
          description: List of active connection types
      summary: Returns a list of active connection types
  /reports/connectiontype/{start}/{end}:
    get:
      parameters:
      - description: 'URL encoded start date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: start
        required: true
        schema:
          type: string
      - description: 'URL encoded end date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: end
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsConnectionTypeList'
          description: List of connection types within a specified date/time range
      summary: Returns a list of connection types within a specified date/time range
  /reports/connectiontypereg:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsConnectionTypeRegList'
          description: List of connection types for registered nodes
      summary: Returns a list of connection types for registered nodes
  /reports/connectiontypereg/active:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsConnectionTypeRegActiveList'
          description: List of connection types for active registered nodes
      summary: Returns a list of connection types for active registered nodes
  /reports/connectiontypeunreg:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsConnectionTypeUnregList'
          description: List of connection types for unregistered nodes
      summary: Returns a list of connection types for unregistered nodes
  /reports/connectiontypeunreg/active:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsConnectionTypeUnregActiveList'
          description: List of connection types for active unregistered nodes
      summary: Returns a list of connection types for active unregistered nodes
  /reports/inactive:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsInactiveList'
          description: List of inactive nodes
      summary: Returns a list of inactive nodes
  /reports/nodebandwidth:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsNodeBandwidthList'
          description: List of nodes with the most bandwidth
      summary: Returns a list of nodes with the most bandwidth
  /reports/nodebandwidth/{start}/{end}:
    get:
      parameters:
      - description: 'URL encoded start date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: start
        required: true
        schema:
          type: string
      - description: 'URL encoded end date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: end
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsNodeBandwidthList'
          description: List of nodes with the most bandwidth within a specified date/time
            range
      summary: Returns a list of nodes with the most bandwidth within a specified
        date/time range
  /reports/openviolations:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsOpenViolationsList'
          description: List of nodes with an open violation
      summary: Returns a list of nodes with an open violation
  /reports/openviolations/active:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsOpenViolationsActiveList'
          description: List of active nodes with an open violation
      summary: Returns a list of active nodes with an open violation
  /reports/os:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsOsList'
          description: List of node operating systems
      summary: Returns a list of node operating systems
  /reports/os/active:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsOsList'
          description: List of active node operating systems
      summary: Returns a list of active node operating systems
  /reports/os/{start}/{end}:
    get:
      parameters:
      - description: 'URL encoded start date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: start
        required: true
        schema:
          type: string
      - description: 'URL encoded end date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: end
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsOsList'
          description: List of node operating systems first seen within a specified
            date/time range
      summary: Returns a list of node operating systems first seen within a specified
        date/time range
  /reports/osclass:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsOsClassList'
          description: List of node operating system classes
      summary: Returns a list of node operating system classes
  /reports/osclass/active:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsOsClassList'
          description: List of active node operating system classes
      summary: Returns a list of active node operating system classes
  /reports/osclassbandwidth:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsOsClassBandwidthList'
          description: List of operating system class bandwidths
      summary: Returns a list of operating system class bandwidths
  /reports/osclassbandwidth/day:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsOsClassBandwidthList'
          description: List of operating system class bandwidths for the past day
      summary: Returns a list of operating system class bandwidths for the past day
  /reports/osclassbandwidth/month:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsOsClassBandwidthList'
          description: List of operating system class bandwidths for the past month
      summary: Returns a list of operating system class bandwidths for the past month
  /reports/osclassbandwidth/week:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsOsClassBandwidthList'
          description: List of operating system class bandwidths for the past week
      summary: Returns a list of operating system class bandwidths for the past week
  /reports/osclassbandwidth/year:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsOsClassBandwidthList'
          description: List of operating system class bandwidths for the past year
      summary: Returns a list of operating system class bandwidths for the past year
  /reports/osclassbandwidth/{start}/{end}:
    get:
      parameters:
      - description: 'URL encoded start date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: start
        required: true
        schema:
          type: string
      - description: 'URL encoded end date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: end
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsOsClassBandwidthList'
          description: List of operating system class bandwidths within a specified
            date/time range
      summary: Returns a list of operating system class bandwidths within a specified
        date/time range
  /reports/registered:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsRegisteredList'
          description: List of registered nodes
      summary: Returns a list of registered nodes
  /reports/registered/active:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsRegisteredActiveList'
          description: List of active registered nodes
      summary: Returns a list of active registered nodes
  /reports/ssid:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsSsidList'
          description: List of wireless SSIDs
      summary: Returns a list of wireless SSIDs
  /reports/ssid/active:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsSsidActiveList'
          description: List of active wireless SSIDs
      summary: Returns a list of active wireless SSIDs
  /reports/ssid/{start}/{end}:
    get:
      parameters:
      - description: 'URL encoded start date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: start
        required: true
        schema:
          type: string
      - description: 'URL encoded end date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: end
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsSsidList'
          description: List of wireless SSIDs within a specified date/time range
      summary: Returns a list of wireless SSIDs within a specified date/time range
  /reports/statics:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsStaticsList'
          description: List of nodes with a static IP address
      summary: Returns a list of nodes with a static IP address
  /reports/statics/active:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsStaticsActiveList'
          description: List of active nodes with a static IP address
      summary: Returns a list of active nodes with a static IP address
  /reports/topauthenticationfailures/mac/{start}/{end}:
    get:
      parameters:
      - description: 'URL encoded start date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: start
        required: true
        schema:
          type: string
      - description: 'URL encoded end date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: end
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsAuthenticationMacList'
          description: List of top authentication failures by MAC address within a
            specified date/time range
      summary: Returns a list of top authentication failures by MAC addresses within
        a specified date/time range
  /reports/topauthenticationfailures/ssid/{start}/{end}:
    get:
      parameters:
      - description: 'URL encoded start date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: start
        required: true
        schema:
          type: string
      - description: 'URL encoded end date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: end
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsAuthenticationSsidList'
          description: List of top authentication failures by SSID within a specified
            date/time range
      summary: Returns a list of top authentication failures by SSID within a specified
        date/time range
  /reports/topauthenticationfailures/username/{start}/{end}:
    get:
      parameters:
      - description: 'URL encoded start date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: start
        required: true
        schema:
          type: string
      - description: 'URL encoded end date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: end
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsAuthenticationUsernameList'
          description: List of top authentication failures by user name within a specified
            date/time range
      summary: Returns a list of top authentication failures by user name within a
        specified date/time range
  /reports/topauthenticationsuccesses/computername/{start}/{end}:
    get:
      parameters:
      - description: 'URL encoded start date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: start
        required: true
        schema:
          type: string
      - description: 'URL encoded end date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: end
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsAuthenticationComputernameList'
          description: List of top authentication successes by computer name within
            a specified date/time range
      summary: Returns a list of top authentication successes by computer name within
        a specified date/time range
  /reports/topauthenticationsuccesses/mac/{start}/{end}:
    get:
      parameters:
      - description: 'URL encoded start date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: start
        required: true
        schema:
          type: string
      - description: 'URL encoded end date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: end
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsAuthenticationMacList'
          description: List of top authentication successes by MAC address within
            a specified date/time range
      summary: Returns a list of top authentication successes by MAC addresses within
        a specified date/time range
  /reports/topauthenticationsuccesses/ssid/{start}/{end}:
    get:
      parameters:
      - description: 'URL encoded start date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: start
        required: true
        schema:
          type: string
      - description: 'URL encoded end date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: end
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsAuthenticationSsidList'
          description: List of top authentication successes by SSID within a specified
            date/time range
      summary: Returns a list of top authentication successes by SSID within a specified
        date/time range
  /reports/topauthenticationsuccesses/username/{start}/{end}:
    get:
      parameters:
      - description: 'URL encoded start date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: start
        required: true
        schema:
          type: string
      - description: 'URL encoded end date (eg: ''1973-01-01'') or date/time (eg:
          ''1973-01-01 12:00:00'') of the range'
        in: path
        name: end
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsAuthenticationUsernameList'
          description: List of top authentication successes by user name within a
            specified date/time range
      summary: Returns a list of top authentication successes by user name within
        a specified date/time range
  /reports/unknownprints:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsUnknownprintsList'
          description: List of nodes with an unknown DHCP fingerprint
      summary: Returns a list of nodes with an unknown DHCP fingerprint
  /reports/unknownprints/active:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsUnknownprintsActiveList'
          description: List of active nodes with an unknown DHCP fingerprint
      summary: Returns a list of active nodes with an unknown DHCP fingerprint
  /reports/unregistered:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsUnregisteredList'
          description: List of unregistered nodes
      summary: Returns a list of unregistered nodes
  /reports/unregistered/active:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportsUnregisteredActiveList'
          description: List of active unregistered nodes
      summary: Returns a list of active unregistered nodes
  /service/{service}/disable:
    post:
      parameters:
      - description: The service name to fetch
        in: path
        name: service
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/ServiceDisable'
        '404':
          $ref: '#/components/responses/NotFound'
      summary: Disables a service so it doesn't start automatically after reboot
  /service/{service}/enable:
    post:
      parameters:
      - description: The service name to fetch
        in: path
        name: service
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/ServiceEnable'
        '404':
          $ref: '#/components/responses/NotFound'
      summary: Enables a service so it starts automatically after reboot
  /service/{service}/restart:
    post:
      parameters:
      - description: The service name to fetch
        in: path
        name: service
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/ServiceRestart'
        '404':
          $ref: '#/components/responses/NotFound'
      summary: Restarts a service and returns the PID
  /service/{service}/start:
    post:
      parameters:
      - description: The service name to fetch
        in: path
        name: service
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/ServiceStart'
        '404':
          $ref: '#/components/responses/NotFound'
      summary: Starts a service and return the PID
  /service/{service}/status:
    get:
      parameters:
      - description: The service name to fetch
        in: path
        name: service
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: Service details
        '404':
          $ref: '#/components/responses/NotFound'
      summary: Returns a service status
  /service/{service}/stop:
    post:
      parameters:
      - description: The service name to fetch
        in: path
        name: service
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/ServiceStop'
        '404':
          $ref: '#/components/responses/NotFound'
      summary: Stops a service
  /services/:
    get:
      description: The list of services will be limited to 100 and a cursor will be
        returned for iterating on other services. Iteration is only needed if the
        nextCursor is not an empty value.
      parameters:
      - $ref: '#/components/parameters/cursor'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesList'
          description: List of services
      summary: Returns a list of available services
  /services/cluster_status:
    get:
      description: Returns a list of the status of the services on each cluster member
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  $SERVER_HOSTNAME:
                    properties:
                      $SERVICE_NAME:
                        $ref: '#/components/schemas/Service'
                    type: object
                type: object
          description: List of services
      summary: Returns a list of the status of the services on each cluster member
  /tenant/{tenant_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Tenants.remove
      parameters:
      - in: path
        name: tenant_id
        schema:
          type: string
      responses:
        '204':
          description: Item deleted
    description: pf::UnifiedApi::Controller::Tenants
    get:
      description: Get an item
      operationId: api.v1.Tenants.get
      parameters:
      - in: path
        name: tenant_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  item:
                    $ref: '#/components/schemas/Tenant'
                type: object
          description: Get item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Tenants.update
      parameters:
      - in: path
        name: tenant_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Tenants.replace
      parameters:
      - in: path
        name: tenant_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /tenants:
    description: pf::UnifiedApi::Controller::Tenants
    get:
      description: List items
      operationId: api.v1.Tenants.list
      parameters:
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/sort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      description: Create an item
      operationId: api.v1.Tenants.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
        description: Create item
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Duplicate'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /tenants/search:
    description: pf::UnifiedApi::Controller::Tenants
    post:
      operationId: api.v1.Tenants.search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /token_info:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  admin_roles:
                    description: The list of all the admin roles associated to this
                      token
                    items:
                      type: string
                    type: array
                  tenant_id:
                    description: The tenant ID associated to this token. When set
                      to 0, it will provide access to all the tenants. When set to
                      -1, the token is prohibited from accessing data from any tenant.
                    type: string
                type: object
          description: Successfully found information for the token
        '404':
          $ref: '#/components/responses/NotFound'
      summary: Get information on the current token
  /user/{user_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Users.remove
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      responses:
        '204':
          description: Item deleted
    description: pf::UnifiedApi::Controller::User
    get:
      description: Get an item
      operationId: api.v1.Users.get
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  item:
                    $ref: '#/components/schemas/User'
                type: object
          description: Get item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Users.update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Users.replace
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /user/{user_id}/node/{node_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Users.Nodes.remove
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      - in: path
        name: node_id
        schema:
          type: string
      responses:
        '204':
          description: Item deleted
    description: pf::UnifiedApi::Controller::Users::Nodes
    get:
      description: Get an item
      operationId: api.v1.Users.Nodes.get
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      - in: path
        name: node_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  item:
                    $ref: '#/components/schemas/UsersNode'
                type: object
          description: Get item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Users.Nodes.update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      - in: path
        name: node_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersNode'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Users.Nodes.replace
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      - in: path
        name: node_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersNode'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /user/{user_id}/node/{node_id}/locationlog/{locationlog_id}:
    delete:
      description: Remove an item
      operationId: api.v1.Users.Nodes.Locationlogs.remove
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      - in: path
        name: node_id
        schema:
          type: string
      - in: path
        name: locationlog_id
        schema:
          type: string
      responses:
        '204':
          description: Item deleted
    description: pf::UnifiedApi::Controller::Users::Nodes::Locationlogs
    get:
      description: Get an item
      operationId: api.v1.Users.Nodes.Locationlogs.get
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      - in: path
        name: node_id
        schema:
          type: string
      - in: path
        name: locationlog_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Item
                properties:
                  item:
                    $ref: '#/components/schemas/UsersNodesLocationlog'
                type: object
          description: Get item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.Users.Nodes.Locationlogs.update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      - in: path
        name: node_id
        schema:
          type: string
      - in: path
        name: locationlog_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersNodesLocationlog'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.Users.Nodes.Locationlogs.replace
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      - in: path
        name: node_id
        schema:
          type: string
      - in: path
        name: locationlog_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersNodesLocationlog'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /user/{user_id}/node/{node_id}/locationlogs:
    description: pf::UnifiedApi::Controller::Users::Nodes::Locationlogs
    get:
      description: List items
      operationId: api.v1.Users.Nodes.Locationlogs.list
      parameters:
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/sort'
      - in: path
        name: user_id
        schema:
          type: string
      - in: path
        name: node_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersNodesLocationlogsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      description: Create an item
      operationId: api.v1.Users.Nodes.Locationlogs.create
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      - in: path
        name: node_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersNodesLocationlog'
        description: Create item
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Duplicate'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /user/{user_id}/node/{node_id}/locationlogs/search:
    description: pf::UnifiedApi::Controller::Users::Nodes::Locationlogs
    post:
      operationId: api.v1.Users.Nodes.Locationlogs.search
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      - in: path
        name: node_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersNodesLocationlogsList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /user/{user_id}/nodes:
    description: pf::UnifiedApi::Controller::Users::Nodes
    get:
      description: List items
      operationId: api.v1.Users.Nodes.list
      parameters:
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/sort'
      - in: path
        name: user_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersNodesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      description: Create an item
      operationId: api.v1.Users.Nodes.create
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersNode'
        description: Create item
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Duplicate'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /user/{user_id}/nodes/search:
    description: pf::UnifiedApi::Controller::Users::Nodes
    post:
      operationId: api.v1.Users.Nodes.search
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersNodesList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /user/{user_id}/password:
    delete:
      parameters:
      - $ref: '#/components/parameters/user_id'
      responses:
        '204':
          description: Deleted password entry
      summary: Allows to delete a password entry for a user
    get:
      parameters:
      - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  item:
                    $ref: '#/components/schemas/Password'
                type: object
          description: The password entry for a specific user
      summary: Get the password entry for a user
    patch:
      parameters:
      - $ref: '#/components/parameters/user_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Password'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      summary: Allows to update parts of a password entry of a user
    post:
      parameters:
      - $ref: '#/components/parameters/user_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Password'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Duplicate'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      summary: Create a password entry for a user
    put:
      parameters:
      - $ref: '#/components/parameters/user_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Password'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      summary: Allows to update the whole password entry for a user
  /user/{user_id}/password/search:
    description: pf::UnifiedApi::Controller::Users::Password
    post:
      operationId: api.v1.Users.Password.search
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPasswordList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /user/{user_id}/unassign_nodes:
    description: pf::UnifiedApi::Controller::User
    post:
      operationId: api.v1.Users.unassign_nodes
      parameters:
      - description: The user id
        in: path
        name: user_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  count:
                    description: The number of nodes unassigned
                    type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /users:
    description: pf::UnifiedApi::Controller::User
    get:
      description: List items
      operationId: api.v1.Users.list
      parameters:
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/sort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      description: Create an item
      operationId: api.v1.Users.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Create item
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Duplicate'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /users/search:
    description: pf::UnifiedApi::Controller::User
    post:
      operationId: api.v1.Users.search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersList'
          description: List
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /wrix_location/{wrix_location_id}:
    delete:
      description: Remove an item
      operationId: api.v1.WrixLocations.remove
      parameters:
      - in: path
        name: wrix_location_id
        schema:
          type: string
      responses:
        '204':
          description: Item deleted
    description: pf::UnifiedApi::Controller::WrixLocations
    get:
      description: Get an item
      operationId: api.v1.WrixLocations.get
      parameters:
      - in: path
        name: wrix_location_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  item:
                    $ref: '#/components/schemas/WrixLocation'
                type: object
          description: Get item
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      description: Update an item
      operationId: api.v1.WrixLocations.update
      parameters:
      - in: path
        name: wrix_location_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WrixLocation'
        required: '1'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    put:
      description: Replace an item
      operationId: api.v1.WrixLocations.replace
      parameters:
      - in: path
        name: wrix_location_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WrixLocation'
        required: '1'
      responses:
        '200':
          $ref: '#/components/responses/Message'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /wrix_locations:
    description: pf::UnifiedApi::Controller::WrixLocations
    get:
      description: List items
      operationId: api.v1.WrixLocations.list
      parameters:
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/sort'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WrixLocationsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      description: Create an item
      operationId: api.v1.WrixLocations.create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WrixLocation'
        description: Create item
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Duplicate'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /wrix_locations/search:
    description: pf::UnifiedApi::Controller::WrixLocations
    post:
      operationId: api.v1.WrixLocations.search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
        description: Search for items
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WrixLocationsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
security:
- bearerAuth: []
servers:
- url: https://127.0.0.1:9999/api/v1
