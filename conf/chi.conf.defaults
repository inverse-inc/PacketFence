[storage DEFAULT]
#
# storage DEFAULT.storage
#
# The default storage for all namespaces
storage=redis

[storage ldap_auth]
#
# storage ldap_auth.expires_in
#
# Amount of time from the current time to expire an entry
expires_in=10m

[storage httpd.admin]
#
# storage httpd.admin.expires_in
#
# Amount of time from the current time to expire an entry
expires_in=1d

[storage httpd.portal]
#
# storage httpd.portal.expires_in
#
# Amount of time from the current time to expire an entry
expires_in=6h

[storage billing]
#
# storage billing.expires_in
#
# Amount of time from the current time to expire an entry
expires_in=6h

[storage fingerbank]
#
# storage fingerbank.expires_in
#
# Amount of time from the current time to expire an entry
expires_in=24h

[storage pfdns]
#
# storage pfdns.expires_in
#
# Amount of time from the current time to expire an entry
expires_in=24h

[storage redis]
#
# storage redis.driver
#
# The driver for the storage
driver = Redis
#
# storage redis.redis_class
#
# The redis client class
redis_class = pf::Redis
#
# storage redis.server
#
# The redis server to connect to
server = 127.0.0.1:6379
#
# storage redis.prefix
#
# The key prefix
prefix = pf
#
# storage redis.expires_on_backend
#
# Tell chi that the data expires on backend
expires_on_backend = 1
#
# storage redis.reconnect
#
# How long to try to reconnect before giving up
reconnect=60

[storage switch]
#
# storage switch.expires_in
#
# Amount of time from the current time to expire an entry
expires_in=1d
