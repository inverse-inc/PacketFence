# Graphite apache configuration file

#Debian specific
<IfDefine debian>
  <IfModule !mod_perl.c>
    LoadModule perl_module /usr/lib/apache2/modules/mod_perl.so
  </IfModule>
  <IfModule !mod_wsgi.c>
    LoadModule wsgi_module /usr/lib/apache2/modules/mod_wsgi.so
  </IfModule>
  <IfModule !mod_log_config.c>
    LoadModule log_config_module /usr/lib/apache2/modules/mod_log_config.so
  </IfModule>
  <IfModule !mod_headers.c>
    LoadModule headers_module /usr/lib/apache2/modules/mod_headers.so
  </IfModule>
  <IfModule !mod_authz_host.c>
    LoadModule authz_host_module /usr/lib/apache2/modules/mod_authz_host.so
  </IfModule>
  <IfModule !mod_setenvif.c>
    LoadModule setenvif_module /usr/lib/apache2/modules/mod_setenvif.so
  </IfModule>
  <IfModule !mod_rewrite.c>
    LoadModule rewrite_module /usr/lib/apache2/modules/mod_rewrite.so
  </IfModule>
  <IfModule !mod_alias.c>
    LoadModule alias_module /usr/lib/apache2/modules/mod_alias.so
  </IfModule>
  <IfModule !mod_mime.c>
    LoadModule mime_module /usr/lib/apache2/modules/mod_mime.so
  </IfModule>
</IfDefine>

#RHEL specific
<IfDefine rhel>
  <IfModule !mod_perl.c>
    LoadModule perl_module modules/mod_perl.so
  </IfModule>
  <IfModule !mod_wsgi.c>
    LoadModule wsgi_module modules/mod_wsgi.so
  </IfModule>
  <IfModule !mod_log_config.c>
    LoadModule log_config_module modules/mod_log_config.so
  </IfModule>
  <IfModule !mod_headers.c>
    LoadModule headers_module modules/mod_headers.so
  </IfModule>
  <IfModule !mod_authz_host.c>
    LoadModule authz_host_module modules/mod_authz_host.so
  </IfModule>
  <IfModule !mod_setenvif.c>
    LoadModule setenvif_module modules/mod_setenvif.so
  </IfModule>
  <IfModule !mod_rewrite.c>
    LoadModule rewrite_module modules/mod_rewrite.so
  </IfModule>
  <IfModule !mod_alias.c>
    LoadModule alias_module modules/mod_alias.so
  </IfModule>
  <IfModule !mod_mime.c>
    LoadModule mime_module modules/mod_mime.so
  </IfModule>
</IfDefine>


PerlSwitches -I/usr/local/pf/lib

AcceptMutex posixsem

TypesConfig /etc/mime.types

<Perl>
use pf::config qw();


my $PfConfig = \%pf::config::Config;
my $management_network = $pf::config::management_network;
my $install_dir = $pf::config::install_dir;
my $var_dir = $pf::config::var_dir;
my $host;

$PidFile = $install_dir.'/var/run/httpd.graphite.pid';

$Include = $install_dir.'/conf/httpd.conf.d/log.conf';

$User = "pf";
$Group = "pf";

if (defined($PfConfig->{'alerting'}{'fromaddr'}) && $PfConfig->{'alerting'}{'fromaddr'} ne '') {
    $ServerAdmin = $PfConfig->{'alerting'}{'fromaddr'};
} else {
    $ServerAdmin = "root\@".$PfConfig->{'general'}{'hostname'}.".".$PfConfig->{'general'}{'domain'};
}

$ServerTokens = "Prod";
$ServerSignature = "Off";
$UseCanonicalName = "Off";
$Timeout = "30";

$KeepAliveTimeout = "10";
$KeepAlive = "On";
$MaxKeepAliveRequests = "100";

$MaxClients = "8";
$StartServers = "4";
$MinSpareServers = "1";
$MaxSpareServers = "1";

$HostnameLookups = "off";
$MaxRequestsPerChild = "1000";

$Listen = "9000";

$ErrorLog = $install_dir.'/logs/httpd.graphite.error';

$NameVirtualHost => "*:9000";

$WSGIPythonPath      => $install_dir.'/var/conf';

push @{ $VirtualHost{"*:9000"} },
    {
        ServerName          => $PfConfig->{'general'}{'hostname'}.".".$PfConfig->{'general'}{'domain'},
        DocumentRoot        =>  ( -d '/usr/share/graphite-web') ?  
                                    '/usr/share/graphite-web' : '/usr/share/graphite/webapp',
        ErrorLog            => $install_dir.'/logs/httpd.graphite.error',
        CustomLog           => $install_dir.'/logs/httpd.graphite.access combined',
        WSGIScriptAlias     => '/ '.$install_dir.'/conf/httpd.conf.d/graphite-web.wsgi',
        WSGIImportScript    => $install_dir."/conf/httpd.conf.d/graphite-web.wsgi process-group=%{GLOBAL} application-group=%{GLOBAL}",
        Header              => 'set Access-Control-Allow-Origin "*"',
    };

</Perl>
