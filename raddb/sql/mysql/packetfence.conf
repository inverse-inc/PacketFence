	sql_user_name = "%{User-Name}"

	nas_query = "SELECT nasname as id ,nasname, shortname, type, secret FROM ${nas_table} where INET_ATON(nasname) IS NOT NULL"

	authorize_check_query = "SELECT id, username, attribute, value, op \
          FROM ${authcheck_table} \
          WHERE username = '%{SQL-User-Name}' \
          ORDER BY id"
	authorize_reply_query = "SELECT id, username, attribute, value, op \
          FROM ${authreply_table} \
          WHERE username = '%{SQL-User-Name}' \
          ORDER BY id"

	group_membership_query = "SELECT groupname \
          FROM ${usergroup_table} \
          WHERE username = '%{SQL-User-Name}' \
          ORDER BY priority"

	authorize_group_check_query = "SELECT id, groupname, attribute, \
          Value, op \
          FROM ${groupcheck_table} \
          WHERE groupname = '%{Sql-Group}' \
          ORDER BY id"
	authorize_group_reply_query = "SELECT id, groupname, attribute, \
          value, op \
          FROM ${groupreply_table} \
          WHERE groupname = '%{Sql-Group}' \
          ORDER BY id"

	accounting_onoff_query = "\
          UPDATE ${acct_table1} \
          SET \
             acctstoptime       =  '%S', \
             acctsessiontime    =  unix_timestamp('%S') - \
                                   unix_timestamp(acctstarttime), \
             acctterminatecause =  '%{Acct-Terminate-Cause}', \
             acctstopdelay      =  %{%{Acct-Delay-Time}:-0} \
          WHERE acctstoptime IS NULL \
          AND nasipaddress      =  '%{NAS-IP-Address}' \
          AND acctstarttime     <= '%S'"

	accounting_update_query = "\
	 CALL acct_update ( \
		'%S', '%{Acct-Session-Time}', \
		'%{%{Acct-Input-Gigawords}:-0}'  << 32 | '%{%{Acct-Input-Octets}:-0}', \
		'%{%{Acct-Output-Gigawords}:-0}' << 32 | '%{%{Acct-Output-Octets}:-0}', \
		'%{Acct-Session-Id}', '%{SQL-User-Name}', '%{NAS-IP-Address}', '%{Framed-IP-Address}', '%{Acct-Status-Type}')"

        accounting_update_query_alt = " \
          INSERT INTO ${acct_table1} \
            (acctsessionid,    acctuniqueid,      username, \
             realm,            nasipaddress,      nasportid, \
             nasporttype,      acctstarttime,     acctsessiontime, \
             acctauthentic,    connectinfo_start, acctinputoctets, \
             acctoutputoctets, calledstationid,   callingstationid, \
             servicetype,      framedprotocol,    framedipaddress, \
             acctstartdelay,   xascendsessionsvrkey) \
          VALUES \
            ('%{Acct-Session-Id}', '%{Acct-Unique-Session-Id}', \
             '%{SQL-User-Name}', \
             '%{Realm}', '%{NAS-IP-Address}', '%{NAS-Port}', \
             '%{NAS-Port-Type}', \
             DATE_SUB('%S', \
                      INTERVAL (%{%{Acct-Session-Time}:-0} + \
                                %{%{Acct-Delay-Time}:-0}) SECOND), \
                      '%{Acct-Session-Time}', \
             '%{Acct-Authentic}', '', \
             '%{%{Acct-Input-Gigawords}:-0}' << 32 | \
             '%{%{Acct-Input-Octets}:-0}', \
             '%{%{Acct-Output-Gigawords}:-0}' << 32 | \
             '%{%{Acct-Output-Octets}:-0}', \
             REPLACE(REPLACE('%{Called-Station-Id}','-',''),':',''), REPLACE(REPLACE('%{Calling-Station-Id}','-',''),':',''), \
             '%{Service-Type}', '%{Framed-Protocol}', \
             '%{Framed-IP-Address}', \
             '0', '%{X-Ascend-Session-Svr-Key}')"

	accounting_start_query = " \
	  CALL acct_start ( \
            '%{Acct-Session-Id}', '%{Acct-Unique-Session-Id}', \
            '%{SQL-User-Name}', \
            '%{Realm}', '%{NAS-IP-Address}', '%{NAS-Port}', \
            '%{NAS-Port-Type}', '%S', NULL, \
            '0', '%{Acct-Authentic}', '%{Connect-Info}', \
            '', '0', '0', \
            REPLACE(REPLACE('%{Called-Station-Id}','-',''),':',''), REPLACE(REPLACE('%{Calling-Station-Id}','-',''),':',''), '', \
            '%{Service-Type}', '%{Framed-Protocol}', '%{Framed-IP-Address}', \
            '%{%{Acct-Delay-Time}:-0}', '0', '%{X-Ascend-Session-Svr-Key}', '%{Acct-Status-Type}')"

	accounting_start_query_alt  = " \
          UPDATE ${acct_table1} SET \
             acctstarttime     = '%S', \
             acctstartdelay    = '%{%{Acct-Delay-Time}:-0}', \
             connectinfo_start = '%{Connect-Info}' \
          WHERE acctsessionid  = '%{Acct-Session-Id}' \
          AND username         = '%{SQL-User-Name}' \
          AND nasipaddress     = '%{NAS-IP-Address}'"

	accounting_stop_query = " \
	  CALL acct_stop ( \
	     '%S', \
             '%{Acct-Session-Time}', \
             '%{%{Acct-Input-Gigawords}:-0}' << 32 | '%{%{Acct-Input-Octets}:-0}', \
             '%{%{Acct-Output-Gigawords}:-0}' << 32 | '%{%{Acct-Output-Octets}:-0}', \
             '%{Acct-Terminate-Cause}', \
             '%{%{Acct-Delay-Time}:-0}', \
             '%{Connect-Info}', \
             '%{Acct-Session-Id}', \
             '%{SQL-User-Name}', \
             '%{NAS-IP-Address}', \
             '%{Acct-Status-Type}')"

	accounting_stop_query_alt = " \
          INSERT INTO ${acct_table2} \
            (acctsessionid, acctuniqueid, username, \
             realm, nasipaddress, nasportid, \
             nasporttype, acctstarttime, acctstoptime, \
             acctsessiontime, acctauthentic, connectinfo_start, \
             connectinfo_stop, acctinputoctets, acctoutputoctets, \
             calledstationid, callingstationid, acctterminatecause, \
             servicetype, framedprotocol, framedipaddress, \
             acctstartdelay, acctstopdelay) \
          VALUES \
            ('%{Acct-Session-Id}', '%{Acct-Unique-Session-Id}', \
             '%{SQL-User-Name}', \
             '%{Realm}', '%{NAS-IP-Address}', '%{NAS-Port}', \
             '%{NAS-Port-Type}', \
             DATE_SUB('%S', \
                 INTERVAL (%{%{Acct-Session-Time}:-0} + \
                 %{%{Acct-Delay-Time}:-0}) SECOND), \
             '%S', '%{Acct-Session-Time}', '%{Acct-Authentic}', '', \
             '%{Connect-Info}', \
             '%{%{Acct-Input-Gigawords}:-0}' << 32 | \
             '%{%{Acct-Input-Octets}:-0}', \
             '%{%{Acct-Output-Gigawords}:-0}' << 32 | \
             '%{%{Acct-Output-Octets}:-0}', \
             REPLACE(REPLACE('%{Called-Station-Id}','-',''),':',''), REPLACE(REPLACE('%{Calling-Station-Id}','-',''),':',''), \
             '%{Acct-Terminate-Cause}', \
             '%{Service-Type}', '%{Framed-Protocol}', '%{Framed-IP-Address}', \
             '0', '%{%{Acct-Delay-Time}:-0}')"

	simul_verify_query  = "SELECT radacctid, acctsessionid, username, \
                               nasipaddress, nasportid, framedipaddress, \
                               callingstationid, framedprotocol \
                               FROM ${acct_table1} \
                               WHERE username = '%{SQL-User-Name}' \
                               AND acctstoptime IS NULL"

        postauth_query = "INSERT INTO radius_audit_log \
      ( mac, ip, computer_name, user_name,\
        stripped_user_name,  realm, event_type,\
        switch_id, switch_mac, switch_ip_address,\
        radius_source_ip_address, called_station_id, calling_station_id,\
        nas_port_type, ssid, nas_port_id,\
        ifindex, nas_port, connection_type,\
        nas_ip_address, nas_identifier, auth_status,\
        reason, auth_type, eap_type,\
        role, node_status, profile,\
        source, auto_reg, is_phone,\
        pf_domain, uuid, radius_request,\
        radius_reply)\
      VALUES \
      ( '%{request:Calling-Station-Id}', '%{request:Framed-IP-Address}', '%{control:PacketFence-Computer-Name}', '%{request:User-Name}',\
        '%{request:Stripped-User-Name}', '%{request:Realm}', 'Radius-Access-Request',\
        '%{control:PacketFence-Switch-Id}', '%{control:PacketFence-Switch-Mac}', '%{control:PacketFence-Switch-Ip-Address}',\
        '%{Packet-Src-IP-Address}', '%{request:Called-Station-Id}', '%{request:Calling-Station-Id}',\
        '%{request:NAS-Port-Type}', '%{request:Called-Station-SSID}', '%{request:NAS-Port-Id}',\
        '%{control:PacketFence-IfIndex}', '%{request:NAS-Port}', '%{control:PacketFence-Connection-Type}',\
        '%{request:NAS-IP-Address}', '%{request:NAS-Identifier}', '%{%{check:Post-Auth-Type}:-Accept}',\
        '%{request:Module-Failure-Message:[*]}', '%{check:Auth-Type}', '%{request:EAP-Type}',\
        '%{control:PacketFence-Role}', '%{control:PacketFence-Status}', '%{control:PacketFence-Profile}',\
        '%{control:PacketFence-Source}', '%{control:PacketFence-AutoReg}', '%{control:PacketFence-IsPhone}',\
        '%{request:PacketFence-Domain}','','%Z',\
        '%z')"
