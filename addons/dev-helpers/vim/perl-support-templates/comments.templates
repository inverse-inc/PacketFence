ยง== Comments.end-of-line comment == map:cl, sc:e, append ==
ยง# <CURSOR>
== Comments.frame == map:cfr, sc:f  ==
#-------------------------------------------------------------------------------
#  <CURSOR>
#-------------------------------------------------------------------------------
== Comments.function == map:cfu, sc:f  ==
=head2 |?FUNCTION_NAME|
<CURSOR>
=cut

== Comments.method == map:cme, sc:m  ==
#===  CLASS METHOD  ============================================================
#        CLASS: |?CLASSNAME|
#       METHOD: |?METHODNAME|
#   PARAMETERS: ????
#      RETURNS: ????
#  DESCRIPTION: <CURSOR>
#       THROWS: no exceptions
#     COMMENTS: none
#     SEE ALSO: n/a
#===============================================================================
== Comments.file description pl == map:chpl, sc:d, start, noindent ==
#!/usr/bin/perl

=head1 NAME

|BASENAME| - 

=cut

=head1 DESCRIPTION

|BASENAME|

=cut

use strict;
use warnings;
use lib qw(/usr/local/pf/lib);
<CURSOR>

=head1 AUTHOR

Inverse inc. <info@inverse.ca>

=head1 COPYRIGHT

Copyright (C) 2005-2024 Inverse inc.

=head1 LICENSE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
USA.

=cut
== Comments.file description pm == map:chpm, sc:d, start, noindent ==
package |PATH|::|BASENAME|;

=head1 NAME

|PATH|::|BASENAME| -

=cut

=head1 DESCRIPTION

|PATH|::|BASENAME|

=cut

use strict;
use warnings;
 
=head1 AUTHOR

Inverse inc. <info@inverse.ca>

=head1 COPYRIGHT

Copyright (C) 2005-2024 Inverse inc.

=head1 LICENSE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
USA.

=cut

1;
== Comments.file description t == map:cht, sc:d, start, noindent ==
=head1 NAME

|BASENAME|

=cut

=head1 DESCRIPTION

unit test for |BASENAME|

=cut

use strict;
use warnings;
#
use lib '/usr/local/pf/lib';

BEGIN {
    #include test libs
    use lib qw(/usr/local/pf/t);
    #Module for overriding configuration paths
    use setup_test_config;
}

use Test::More tests => 3;

#This test will running last
use Test::NoWarnings;

#This is the first test
ok (1 == 1,"Yes 1 does equals 1");

#This is the second test
ok (1 != 2,"No 1 does not equals 2");

=head1 AUTHOR

Inverse inc. <info@inverse.ca>

=head1 COPYRIGHT

Copyright (C) 2005-2024 Inverse inc.

=head1 LICENSE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
USA.

=cut

1;
== Comments.file description pod == map:chpo, sc:d, start ==
=head1 NAME

=cut

=head1 DESCRIPTION

=cut

=head1 AUTHOR

Inverse inc. <info@inverse.ca>

=head1 COPYRIGHT

Copyright (C) 2005-2024 Inverse inc.

=head1 LICENSE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
USA.

=cut
== Comments.date == insert, map:cd, sc:d ==
|DATE|<CURSOR>
== Comments.date+time == insert, map:ct, sc:t ==
|DATE| |TIME|<CURSOR>
== ENDTEMPLATE ==

== LIST: comments_keywords == hash ==
  'BUG'         : ':BUG       :|DATE| |TIME|:|AUTHORREF|: <CURSOR>',
  'TODO'        : ':TODO      :|DATE| |TIME|:|AUTHORREF|: <CURSOR>',
  'WARNING'     : ':WARNING   :|DATE| |TIME|:|AUTHORREF|: <CURSOR>',
  'WORKAROUND'  : ':WORKAROUND:|DATE| |TIME|:|AUTHORREF|: <CURSOR>',
	'new keyword' : ':<CURSOR>:|DATE| |TIME|:|AUTHORREF|: {+COMMENT+}',
== LIST: comments_macros == hash ==
	'AUTHOR'       : '|AUTHOR|',
	'AUTHORREF'    : '|AUTHORREF|',
	'COMPANY'      : '|COMPANY|',
	'COPYRIGHT'    : '|COPYRIGHT|',
	'EMAIL'        : '|EMAIL|',
	'ORGANIZATION' : '|ORGANIZATION|',
== ENDLIST ==

== Comments.keyword comments == expandmenu, append, map:ck, sc:k ==
|PickList( 'keyword comment', 'comments_keywords' )|
 # |PICK|
== Comments.macros == expandmenu, insert, map:cma, sc:m ==
|PickList( 'macro', 'comments_macros' )|
|PICK|<CURSOR>
    if(@tests) {
        plan tests => @tests;
    } else {
        plan skip_all => "No test to run";
    }
== ENDTEMPLATE ==
