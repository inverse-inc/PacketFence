# PacketFence services checks

CHECK PROCESS packetfence-config MATCHING "pfconfig"
    group PacketFence
    start program = "[% SERVICE_BIN %] packetfence-config restart" with timeout 60 seconds
    stop program  = "[% SERVICE_BIN %] packetfence-config stop"
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-redis-cache MATCHING "redis-server 127.0.0.1:6379"
    group PacketFence
    start program = "[% SERVICE_BIN %] packetfence-redis-cache restart" with timeout 60 seconds
    stop program  = "[% SERVICE_BIN %] packetfence-redis-cache stop"
    if failed host 127.0.0.1 port 6379 protocol redis for 5 cycles then alert
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-haproxy-portal MATCHING "haproxy-portal"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service haproxy-portal restart" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service haproxy-portal stop"
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-haproxy-admin MATCHING "haproxy-admin"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service haproxy-admin restart" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service haproxy-admin stop"
    if 3 restarts within 10 cycles then alert

[% IF ACTIVE_ACTIVE %]
CHECK PROCESS packetfence-haproxy-db MATCHING "haproxy-db"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service haproxy-db restart" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service haproxy-db stop"
    if 3 restarts within 10 cycles then alert
    if failed host 127.0.0.1 port 3306 protocol mysql for 5 cycles then alert

CHECK PROCESS packetfence-proxysql MATCHING "proxysql"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service proxysql restart" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service proxysql stop"
    if 3 restarts within 10 cycles then alert
    if failed host 127.0.0.1 port 6033 protocol mysql for 5 cycles then alert

[% END %]

CHECK PROCESS packetfence-pfdhcp MATCHING "sbin/pfdhcp"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfdhcp start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfdhcp stop"
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-pfperl-api MATCHING "pfperl-api"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfperl-api start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfperl-api stop"
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-pfstats MATCHING "pfstats"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfstats start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfstats stop"
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-httpd.aaa MATCHING "pf/var/conf/httpd.conf.d/httpd.aaa"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service httpd.aaa restart" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service httpd.aaa stop"
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-httpd.portal MATCHING "pf/var/conf/httpd.conf.d/httpd.portal"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service httpd.portal restart" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service httpd.portal stop"
    if 3 restarts within 10 cycles then alert

check program monitoring-httpd.portal with path "/bin/bash /usr/local/pf/addons/monit/check-httpd.portal.sh"
    group PacketFence
    every 10 cycles    # every 20 seconds (if 1 cycle is 2 seconds)
    start program = "/usr/local/pf/bin/pfcmd service httpd.portal restart" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service httpd.portal stop"
    # must be failing for a minute before we act
    if status != 0 for 3 cycles then restart
    if 3 restarts within 10 cycles then alert
[% FOREACH email IN EMAILS %]
    noalert [% email %]
[% END %]

CHECK PROCESS packetfence-httpd.webservices MATCHING "pf/var/conf/httpd.conf.d/httpd.webservices"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service httpd.webservices restart" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service httpd.webservices stop"
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-keepalived MATCHING "keepalived"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service keepalived restart" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service keepalived stop"
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-pfdns MATCHING "pfdns"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfdns restart" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfdns stop"
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-pfipset MATCHING "pfipset"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfipset start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfipset stop"
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-pfcron MATCHING "pfcron"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfcron restart" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfcron stop"
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-pffilter MATCHING "pffilter"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pffilter restart" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pffilter stop"
    if 3 restarts within 10 cycles then alert


CHECK PROCESS packetfence-pfdhcplistener MATCHING "pfdhcplistener"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfdhcplistener restart" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfdhcplistener stop"
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-pfqueue MATCHING "pfqueue"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfqueue restart" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfqueue stop"
    if 3 restarts within 10 cycles then alert

# Service disabled by default
#CHECK PROCESS packetfence-radiusd-acct MATCHING "pf/raddb -n acct"
#    group PacketFence
#    start program = "[% SERVICE_BIN %] packetfence-radiusd-acct restart"
#    stop program  = "[% SERVICE_BIN %] packetfence-radiusd-acct stop"
#    if failed host 127.0.0.1 port 18122 type udp protocol radius secret adminsecret for 5 cycles then alert
#    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-radiusd-auth MATCHING "pf/raddb -n auth"
    group PacketFence
    start program = "[% SERVICE_BIN %] packetfence-radiusd-auth restart"
    stop program  = "[% SERVICE_BIN %] packetfence-radiusd-auth stop"
    if failed host 127.0.0.1 port 18121 type udp protocol radius secret adminsecret for 5 cycles then alert
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-redis_queue MATCHING "redis-server 127.0.0.1:6380"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service redis_queue restart" with timeout 60 seconds
    stop program = "/usr/local/pf/bin/pfcmd service redis_queue stop"
    if failed host 127.0.0.1 port 6380 protocol redis for 5 cycles then alert
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-netdata MATCHING "netdata"
    group PacketFence
    start program = "[% SERVICE_BIN %] packetfence-netdata restart"
    stop program  = "[% SERVICE_BIN %] packetfence-netdata stop"
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-httpd.dispatcher MATCHING "httpd.dispatcher"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service httpd.dispatcher start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service httpd.dispatcher stop"
    if 3 restarts within 10 cycles then alert
    if failed host 127.0.0.1 port 8888 protocol http status 200 for 5 cycles then restart

CHECK PROCESS packetfence-httpd.admin_dispatcher MATCHING "httpd.admin_dispatcher"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service httpd.admin_dispatcher start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service httpd.admin_dispatcher stop"
    if 3 restarts within 10 cycles then alert

[% IF FINGERBANK_ENABLED %]
CHECK PROCESS packetfence-fingerbank-collector MATCHING "fingerbank-collector"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service fingerbank-collector restart" with timeout 60 seconds
    stop program = "/usr/local/pf/bin/pfcmd service fingerbank-collector stop"
    if 3 restarts within 10 cycles then alert
[% END %]

CHECK PROCESS packetfence-pfsso MATCHING "pfsso"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfsso start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfsso stop"
    if 3 restarts within 10 cycles then alert
    if failed host localhost port 8777 protocol http status 404 for 5 cycles then restart

CHECK PROCESS packetfence-api-frontend MATCHING "api-frontend"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service api-frontend start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service api-frontend stop"
    if 3 restarts within 10 cycles then alert
    if failed host localhost port 9999 protocol https status 401 for 5 cycles then restart

CHECK PROCESS packetfence-pfacct MATCHING "pfacct"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfacct start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfacct stop"
    if 3 restarts within 10 cycles then alert

CHECK PROCESS packetfence-pfpki MATCHING "pfpki"
    group PacketFence
    start program = "/usr/local/pf/bin/pfcmd service pfpki start" with timeout 60 seconds
    stop program  = "/usr/local/pf/bin/pfcmd service pfpki stop"
    if 3 restarts within 10 cycles then alert


check program monitoring-mysql-connections with path /usr/local/pf/addons/monit/monitoring-scripts/monitor_mysql_connections.pl
    group OS
    every 30 cycles    # every minute (if 1 cycle is 2 seconds)
    if status != 0 then alert

